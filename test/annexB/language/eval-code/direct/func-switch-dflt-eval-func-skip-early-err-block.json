{
  "type": "Program",
  "start": 0,
  "end": 1430,
  "body": [
    {
      "type": "ExpressionStatement",
      "start": 749,
      "end": 1429,
      "expression": {
        "type": "ParenthesizedExpression",
        "start": 749,
        "end": 1428,
        "expression": {
          "type": "CallExpression",
          "start": 750,
          "end": 1427,
          "callee": {
            "type": "FunctionExpression",
            "start": 750,
            "end": 1425,
            "id": null,
            "expression": false,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "start": 761,
              "end": 1425,
              "body": [
                {
                  "type": "ExpressionStatement",
                  "start": 765,
                  "end": 1423,
                  "expression": {
                    "type": "CallExpression",
                    "start": 765,
                    "end": 1422,
                    "callee": {
                      "type": "Identifier",
                      "start": 765,
                      "end": 769,
                      "name": "eval"
                    },
                    "arguments": [
                      {
                        "type": "BinaryExpression",
                        "start": 775,
                        "end": 1418,
                        "left": {
                          "type": "BinaryExpression",
                          "start": 775,
                          "end": 1128,
                          "left": {
                            "type": "BinaryExpression",
                            "start": 775,
                            "end": 1098,
                            "left": {
                              "type": "Literal",
                              "start": 775,
                              "end": 1079,
                              "value": "assert.throws(ReferenceError, function() {      f;    }, \"An initialized binding is not created prior to evaluation\");    assert.sameValue(      typeof f,      \"undefined\",      \"An uninitialized binding is not created prior to evaluation\"    );        {    let f = 123;switch (1) {"
                            },
                            "operator": "+",
                            "right": {
                              "type": "Literal",
                              "start": 1086,
                              "end": 1098,
                              "value": "  default:"
                            }
                          },
                          "operator": "+",
                          "right": {
                            "type": "Literal",
                            "start": 1105,
                            "end": 1128,
                            "value": "    function f() {  }"
                          }
                        },
                        "operator": "+",
                        "right": {
                          "type": "Literal",
                          "start": 1135,
                          "end": 1418,
                          "value": "}    }        assert.throws(ReferenceError, function() {      f;    }, \"An initialized binding is not created following evaluation\");    assert.sameValue(      typeof f,      \"undefined\",      \"An uninitialized binding is not created following evaluation\"    );"
                        }
                      }
                    ],
                    "optional": false
                  }
                }
              ]
            }
          },
          "arguments": [],
          "optional": false
        }
      }
    }
  ],
  "sourceType": "script"
}