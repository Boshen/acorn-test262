{
  "type": "Program",
  "start": 0,
  "end": 920,
  "body": [
    {
      "type": "FunctionDeclaration",
      "start": 580,
      "end": 893,
      "id": {
        "type": "Identifier",
        "start": 589,
        "end": 611,
        "name": "testCompoundAssignment"
      },
      "expression": false,
      "generator": false,
      "async": false,
      "params": [],
      "body": {
        "type": "BlockStatement",
        "start": 614,
        "end": 893,
        "body": [
          {
            "type": "VariableDeclaration",
            "start": 618,
            "end": 628,
            "declarations": [
              {
                "type": "VariableDeclarator",
                "start": 622,
                "end": 627,
                "id": {
                  "type": "Identifier",
                  "start": 622,
                  "end": 623,
                  "name": "x"
                },
                "init": {
                  "type": "Literal",
                  "start": 626,
                  "end": 627,
                  "value": 8
                }
              }
            ],
            "kind": "var"
          },
          {
            "type": "VariableDeclaration",
            "start": 631,
            "end": 715,
            "declarations": [
              {
                "type": "VariableDeclarator",
                "start": 635,
                "end": 714,
                "id": {
                  "type": "Identifier",
                  "start": 635,
                  "end": 641,
                  "name": "innerX"
                },
                "init": {
                  "type": "CallExpression",
                  "start": 644,
                  "end": 714,
                  "callee": {
                    "type": "ParenthesizedExpression",
                    "start": 644,
                    "end": 712,
                    "expression": {
                      "type": "FunctionExpression",
                      "start": 645,
                      "end": 711,
                      "id": null,
                      "expression": false,
                      "generator": false,
                      "async": false,
                      "params": [],
                      "body": {
                        "type": "BlockStatement",
                        "start": 656,
                        "end": 711,
                        "body": [
                          {
                            "type": "ExpressionStatement",
                            "start": 662,
                            "end": 693,
                            "expression": {
                              "type": "AssignmentExpression",
                              "start": 662,
                              "end": 692,
                              "operator": ">>>=",
                              "left": {
                                "type": "Identifier",
                                "start": 662,
                                "end": 663,
                                "name": "x"
                              },
                              "right": {
                                "type": "ParenthesizedExpression",
                                "start": 669,
                                "end": 692,
                                "expression": {
                                  "type": "SequenceExpression",
                                  "start": 670,
                                  "end": 691,
                                  "expressions": [
                                    {
                                      "type": "CallExpression",
                                      "start": 670,
                                      "end": 688,
                                      "callee": {
                                        "type": "Identifier",
                                        "start": 670,
                                        "end": 674,
                                        "name": "eval"
                                      },
                                      "arguments": [
                                        {
                                          "type": "Literal",
                                          "start": 675,
                                          "end": 687,
                                          "value": "var x = 2;"
                                        }
                                      ],
                                      "optional": false
                                    },
                                    {
                                      "type": "Literal",
                                      "start": 690,
                                      "end": 691,
                                      "value": 1
                                    }
                                  ]
                                }
                              }
                            }
                          },
                          {
                            "type": "ReturnStatement",
                            "start": 698,
                            "end": 707,
                            "argument": {
                              "type": "Identifier",
                              "start": 705,
                              "end": 706,
                              "name": "x"
                            }
                          }
                        ]
                      }
                    }
                  },
                  "arguments": [],
                  "optional": false
                }
              }
            ],
            "kind": "var"
          },
          {
            "type": "IfStatement",
            "start": 719,
            "end": 811,
            "test": {
              "type": "BinaryExpression",
              "start": 723,
              "end": 735,
              "left": {
                "type": "Identifier",
                "start": 723,
                "end": 729,
                "name": "innerX"
              },
              "operator": "!==",
              "right": {
                "type": "Literal",
                "start": 734,
                "end": 735,
                "value": 2
              }
            },
            "consequent": {
              "type": "BlockStatement",
              "start": 737,
              "end": 811,
              "body": [
                {
                  "type": "ThrowStatement",
                  "start": 743,
                  "end": 807,
                  "argument": {
                    "type": "NewExpression",
                    "start": 749,
                    "end": 806,
                    "callee": {
                      "type": "Identifier",
                      "start": 753,
                      "end": 765,
                      "name": "Test262Error"
                    },
                    "arguments": [
                      {
                        "type": "BinaryExpression",
                        "start": 766,
                        "end": 805,
                        "left": {
                          "type": "Literal",
                          "start": 766,
                          "end": 794,
                          "value": "#1: innerX === 2. Actual: "
                        },
                        "operator": "+",
                        "right": {
                          "type": "ParenthesizedExpression",
                          "start": 797,
                          "end": 805,
                          "expression": {
                            "type": "Identifier",
                            "start": 798,
                            "end": 804,
                            "name": "innerX"
                          }
                        }
                      }
                    ]
                  }
                }
              ]
            },
            "alternate": null
          },
          {
            "type": "IfStatement",
            "start": 814,
            "end": 891,
            "test": {
              "type": "BinaryExpression",
              "start": 818,
              "end": 825,
              "left": {
                "type": "Identifier",
                "start": 818,
                "end": 819,
                "name": "x"
              },
              "operator": "!==",
              "right": {
                "type": "Literal",
                "start": 824,
                "end": 825,
                "value": 4
              }
            },
            "consequent": {
              "type": "BlockStatement",
              "start": 827,
              "end": 891,
              "body": [
                {
                  "type": "ThrowStatement",
                  "start": 833,
                  "end": 887,
                  "argument": {
                    "type": "NewExpression",
                    "start": 839,
                    "end": 886,
                    "callee": {
                      "type": "Identifier",
                      "start": 843,
                      "end": 855,
                      "name": "Test262Error"
                    },
                    "arguments": [
                      {
                        "type": "BinaryExpression",
                        "start": 856,
                        "end": 885,
                        "left": {
                          "type": "Literal",
                          "start": 856,
                          "end": 879,
                          "value": "#2: x === 4. Actual: "
                        },
                        "operator": "+",
                        "right": {
                          "type": "ParenthesizedExpression",
                          "start": 882,
                          "end": 885,
                          "expression": {
                            "type": "Identifier",
                            "start": 883,
                            "end": 884,
                            "name": "x"
                          }
                        }
                      }
                    ]
                  }
                }
              ]
            },
            "alternate": null
          }
        ]
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 894,
      "end": 919,
      "expression": {
        "type": "CallExpression",
        "start": 894,
        "end": 918,
        "callee": {
          "type": "Identifier",
          "start": 894,
          "end": 916,
          "name": "testCompoundAssignment"
        },
        "arguments": [],
        "optional": false
      }
    }
  ],
  "sourceType": "script"
}