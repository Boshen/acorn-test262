{
  "type": "Program",
  "start": 0,
  "end": 874,
  "body": [
    {
      "type": "FunctionDeclaration",
      "start": 541,
      "end": 855,
      "id": {
        "type": "Identifier",
        "start": 550,
        "end": 564,
        "name": "testAssignment"
      },
      "expression": false,
      "generator": false,
      "async": false,
      "params": [],
      "body": {
        "type": "BlockStatement",
        "start": 567,
        "end": 855,
        "body": [
          {
            "type": "VariableDeclaration",
            "start": 571,
            "end": 581,
            "declarations": [
              {
                "type": "VariableDeclarator",
                "start": 575,
                "end": 580,
                "id": {
                  "type": "Identifier",
                  "start": 575,
                  "end": 576,
                  "name": "x"
                },
                "init": {
                  "type": "Literal",
                  "start": 579,
                  "end": 580,
                  "value": 0
                }
              }
            ],
            "kind": "var"
          },
          {
            "type": "VariableDeclaration",
            "start": 584,
            "end": 661,
            "declarations": [
              {
                "type": "VariableDeclarator",
                "start": 588,
                "end": 660,
                "id": {
                  "type": "Identifier",
                  "start": 588,
                  "end": 594,
                  "name": "innerX"
                },
                "init": {
                  "type": "CallExpression",
                  "start": 597,
                  "end": 660,
                  "callee": {
                    "type": "ParenthesizedExpression",
                    "start": 597,
                    "end": 658,
                    "expression": {
                      "type": "FunctionExpression",
                      "start": 598,
                      "end": 657,
                      "id": null,
                      "expression": false,
                      "generator": false,
                      "async": false,
                      "params": [],
                      "body": {
                        "type": "BlockStatement",
                        "start": 609,
                        "end": 657,
                        "body": [
                          {
                            "type": "ExpressionStatement",
                            "start": 615,
                            "end": 639,
                            "expression": {
                              "type": "AssignmentExpression",
                              "start": 615,
                              "end": 638,
                              "operator": "=",
                              "left": {
                                "type": "Identifier",
                                "start": 615,
                                "end": 616,
                                "name": "x"
                              },
                              "right": {
                                "type": "ParenthesizedExpression",
                                "start": 619,
                                "end": 638,
                                "expression": {
                                  "type": "SequenceExpression",
                                  "start": 620,
                                  "end": 637,
                                  "expressions": [
                                    {
                                      "type": "CallExpression",
                                      "start": 620,
                                      "end": 634,
                                      "callee": {
                                        "type": "Identifier",
                                        "start": 620,
                                        "end": 624,
                                        "name": "eval"
                                      },
                                      "arguments": [
                                        {
                                          "type": "Literal",
                                          "start": 625,
                                          "end": 633,
                                          "value": "var x;"
                                        }
                                      ],
                                      "optional": false
                                    },
                                    {
                                      "type": "Literal",
                                      "start": 636,
                                      "end": 637,
                                      "value": 1
                                    }
                                  ]
                                }
                              }
                            }
                          },
                          {
                            "type": "ReturnStatement",
                            "start": 644,
                            "end": 653,
                            "argument": {
                              "type": "Identifier",
                              "start": 651,
                              "end": 652,
                              "name": "x"
                            }
                          }
                        ]
                      }
                    }
                  },
                  "arguments": [],
                  "optional": false
                }
              }
            ],
            "kind": "var"
          },
          {
            "type": "IfStatement",
            "start": 665,
            "end": 773,
            "test": {
              "type": "BinaryExpression",
              "start": 669,
              "end": 689,
              "left": {
                "type": "Identifier",
                "start": 669,
                "end": 675,
                "name": "innerX"
              },
              "operator": "!==",
              "right": {
                "type": "Identifier",
                "start": 680,
                "end": 689,
                "name": "undefined"
              }
            },
            "consequent": {
              "type": "BlockStatement",
              "start": 691,
              "end": 773,
              "body": [
                {
                  "type": "ThrowStatement",
                  "start": 697,
                  "end": 769,
                  "argument": {
                    "type": "NewExpression",
                    "start": 703,
                    "end": 768,
                    "callee": {
                      "type": "Identifier",
                      "start": 707,
                      "end": 719,
                      "name": "Test262Error"
                    },
                    "arguments": [
                      {
                        "type": "BinaryExpression",
                        "start": 720,
                        "end": 767,
                        "left": {
                          "type": "Literal",
                          "start": 720,
                          "end": 756,
                          "value": "#1: innerX === undefined. Actual: "
                        },
                        "operator": "+",
                        "right": {
                          "type": "ParenthesizedExpression",
                          "start": 759,
                          "end": 767,
                          "expression": {
                            "type": "Identifier",
                            "start": 760,
                            "end": 766,
                            "name": "innerX"
                          }
                        }
                      }
                    ]
                  }
                }
              ]
            },
            "alternate": null
          },
          {
            "type": "IfStatement",
            "start": 776,
            "end": 853,
            "test": {
              "type": "BinaryExpression",
              "start": 780,
              "end": 787,
              "left": {
                "type": "Identifier",
                "start": 780,
                "end": 781,
                "name": "x"
              },
              "operator": "!==",
              "right": {
                "type": "Literal",
                "start": 786,
                "end": 787,
                "value": 1
              }
            },
            "consequent": {
              "type": "BlockStatement",
              "start": 789,
              "end": 853,
              "body": [
                {
                  "type": "ThrowStatement",
                  "start": 795,
                  "end": 849,
                  "argument": {
                    "type": "NewExpression",
                    "start": 801,
                    "end": 848,
                    "callee": {
                      "type": "Identifier",
                      "start": 805,
                      "end": 817,
                      "name": "Test262Error"
                    },
                    "arguments": [
                      {
                        "type": "BinaryExpression",
                        "start": 818,
                        "end": 847,
                        "left": {
                          "type": "Literal",
                          "start": 818,
                          "end": 841,
                          "value": "#2: x === 1. Actual: "
                        },
                        "operator": "+",
                        "right": {
                          "type": "ParenthesizedExpression",
                          "start": 844,
                          "end": 847,
                          "expression": {
                            "type": "Identifier",
                            "start": 845,
                            "end": 846,
                            "name": "x"
                          }
                        }
                      }
                    ]
                  }
                }
              ]
            },
            "alternate": null
          }
        ]
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 856,
      "end": 873,
      "expression": {
        "type": "CallExpression",
        "start": 856,
        "end": 872,
        "callee": {
          "type": "Identifier",
          "start": 856,
          "end": 870,
          "name": "testAssignment"
        },
        "arguments": [],
        "optional": false
      }
    }
  ],
  "sourceType": "script"
}