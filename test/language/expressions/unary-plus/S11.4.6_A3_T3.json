{
  "type": "Program",
  "start": 0,
  "end": 605,
  "body": [
    {
      "type": "IfStatement",
      "start": 272,
      "end": 354,
      "test": {
        "type": "BinaryExpression",
        "start": 276,
        "end": 286,
        "left": {
          "type": "UnaryExpression",
          "start": 276,
          "end": 280,
          "operator": "+",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 277,
            "end": 280,
            "value": "1",
            "raw": "\"1\""
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 285,
          "end": 286,
          "value": 1,
          "raw": "1"
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 288,
        "end": 354,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 292,
            "end": 352,
            "argument": {
              "type": "NewExpression",
              "start": 298,
              "end": 351,
              "callee": {
                "type": "Identifier",
                "start": 302,
                "end": 314,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 315,
                  "end": 350,
                  "left": {
                    "type": "Literal",
                    "start": 315,
                    "end": 341,
                    "value": "#1: +\"1\" === 1. Actual: ",
                    "raw": "'#1: +\"1\" === 1. Actual: '"
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 344,
                    "end": 350,
                    "expression": {
                      "type": "UnaryExpression",
                      "start": 345,
                      "end": 349,
                      "operator": "+",
                      "prefix": true,
                      "argument": {
                        "type": "Literal",
                        "start": 346,
                        "end": 349,
                        "value": "1",
                        "raw": "\"1\""
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 366,
      "end": 469,
      "test": {
        "type": "BinaryExpression",
        "start": 370,
        "end": 390,
        "left": {
          "type": "CallExpression",
          "start": 370,
          "end": 381,
          "callee": {
            "type": "Identifier",
            "start": 370,
            "end": 375,
            "name": "isNaN"
          },
          "arguments": [
            {
              "type": "UnaryExpression",
              "start": 376,
              "end": 380,
              "operator": "+",
              "prefix": true,
              "argument": {
                "type": "Literal",
                "start": 377,
                "end": 380,
                "value": "x",
                "raw": "\"x\""
              }
            }
          ],
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 386,
          "end": 390,
          "value": true,
          "raw": "true"
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 392,
        "end": 469,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 396,
            "end": 467,
            "argument": {
              "type": "NewExpression",
              "start": 402,
              "end": 466,
              "callee": {
                "type": "Identifier",
                "start": 406,
                "end": 418,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 419,
                  "end": 465,
                  "left": {
                    "type": "Literal",
                    "start": 419,
                    "end": 456,
                    "value": "#2: +\"x\" === Not-a-Number. Actual: ",
                    "raw": "'#2: +\"x\" === Not-a-Number. Actual: '"
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 459,
                    "end": 465,
                    "expression": {
                      "type": "UnaryExpression",
                      "start": 460,
                      "end": 464,
                      "operator": "+",
                      "prefix": true,
                      "argument": {
                        "type": "Literal",
                        "start": 461,
                        "end": 464,
                        "value": "x",
                        "raw": "\"x\""
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 481,
      "end": 604,
      "test": {
        "type": "BinaryExpression",
        "start": 485,
        "end": 509,
        "left": {
          "type": "UnaryExpression",
          "start": 485,
          "end": 502,
          "operator": "+",
          "prefix": true,
          "argument": {
            "type": "NewExpression",
            "start": 486,
            "end": 502,
            "callee": {
              "type": "Identifier",
              "start": 490,
              "end": 496,
              "name": "Number"
            },
            "arguments": [
              {
                "type": "Literal",
                "start": 497,
                "end": 501,
                "value": "-1",
                "raw": "\"-1\""
              }
            ]
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 507,
          "end": 509,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 508,
            "end": 509,
            "value": 1,
            "raw": "1"
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 511,
        "end": 604,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 515,
            "end": 602,
            "argument": {
              "type": "NewExpression",
              "start": 521,
              "end": 601,
              "callee": {
                "type": "Identifier",
                "start": 525,
                "end": 537,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 538,
                  "end": 600,
                  "left": {
                    "type": "Literal",
                    "start": 538,
                    "end": 578,
                    "value": "#3: +new String(\"-1\") === -1. Actual: ",
                    "raw": "'#3: +new String(\"-1\") === -1. Actual: '"
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 581,
                    "end": 600,
                    "expression": {
                      "type": "UnaryExpression",
                      "start": 582,
                      "end": 599,
                      "operator": "+",
                      "prefix": true,
                      "argument": {
                        "type": "NewExpression",
                        "start": 583,
                        "end": 599,
                        "callee": {
                          "type": "Identifier",
                          "start": 587,
                          "end": 593,
                          "name": "String"
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "start": 594,
                            "end": 598,
                            "value": "-1",
                            "raw": "\"-1\""
                          }
                        ]
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    }
  ],
  "sourceType": "script"
}