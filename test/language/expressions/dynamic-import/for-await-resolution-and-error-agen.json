{
  "type": "Program",
  "start": 0,
  "end": 1581,
  "body": [
    {
      "type": "FunctionDeclaration",
      "start": 931,
      "end": 1220,
      "id": {
        "type": "Identifier",
        "start": 948,
        "end": 952,
        "name": "agen"
      },
      "expression": false,
      "generator": true,
      "async": true,
      "params": [],
      "body": {
        "type": "BlockStatement",
        "start": 955,
        "end": 1220,
        "body": [
          {
            "type": "ForOfStatement",
            "start": 959,
            "end": 1218,
            "await": true,
            "left": {
              "type": "VariableDeclaration",
              "start": 970,
              "end": 982,
              "declarations": [
                {
                  "type": "VariableDeclarator",
                  "start": 974,
                  "end": 982,
                  "id": {
                    "type": "Identifier",
                    "start": 974,
                    "end": 982,
                    "name": "imported"
                  },
                  "init": null
                }
              ],
              "kind": "let"
            },
            "right": {
              "type": "ArrayExpression",
              "start": 986,
              "end": 1189,
              "elements": [
                {
                  "type": "ImportExpression",
                  "start": 994,
                  "end": 1049,
                  "source": {
                    "type": "Literal",
                    "start": 1001,
                    "end": 1048,
                    "value": "./for-await-resolution-and-error-a_FIXTURE.js"
                  }
                },
                {
                  "type": "ImportExpression",
                  "start": 1057,
                  "end": 1112,
                  "source": {
                    "type": "Literal",
                    "start": 1064,
                    "end": 1111,
                    "value": "./for-await-resolution-and-error-b_FIXTURE.js"
                  }
                },
                {
                  "type": "ImportExpression",
                  "start": 1120,
                  "end": 1182,
                  "source": {
                    "type": "Literal",
                    "start": 1127,
                    "end": 1181,
                    "value": "./for-await-resolution-and-error-poisoned_FIXTURE.js"
                  }
                }
              ]
            },
            "body": {
              "type": "BlockStatement",
              "start": 1191,
              "end": 1218,
              "body": [
                {
                  "type": "ExpressionStatement",
                  "start": 1197,
                  "end": 1214,
                  "expression": {
                    "type": "YieldExpression",
                    "start": 1197,
                    "end": 1213,
                    "delegate": false,
                    "argument": {
                      "type": "MemberExpression",
                      "start": 1203,
                      "end": 1213,
                      "object": {
                        "type": "Identifier",
                        "start": 1203,
                        "end": 1211,
                        "name": "imported"
                      },
                      "property": {
                        "type": "Identifier",
                        "start": 1212,
                        "end": 1213,
                        "name": "x"
                      },
                      "computed": false,
                      "optional": false
                    }
                  }
                }
              ]
            }
          }
        ]
      }
    },
    {
      "type": "VariableDeclaration",
      "start": 1222,
      "end": 1241,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 1226,
          "end": 1240,
          "id": {
            "type": "Identifier",
            "start": 1226,
            "end": 1231,
            "name": "aiter"
          },
          "init": {
            "type": "CallExpression",
            "start": 1234,
            "end": 1240,
            "callee": {
              "type": "Identifier",
              "start": 1234,
              "end": 1238,
              "name": "agen"
            },
            "arguments": [],
            "optional": false
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "FunctionDeclaration",
      "start": 1243,
      "end": 1554,
      "id": {
        "type": "Identifier",
        "start": 1258,
        "end": 1260,
        "name": "fn"
      },
      "expression": false,
      "generator": false,
      "async": true,
      "params": [],
      "body": {
        "type": "BlockStatement",
        "start": 1263,
        "end": 1554,
        "body": [
          {
            "type": "VariableDeclaration",
            "start": 1269,
            "end": 1290,
            "declarations": [
              {
                "type": "VariableDeclarator",
                "start": 1273,
                "end": 1289,
                "id": {
                  "type": "Identifier",
                  "start": 1273,
                  "end": 1274,
                  "name": "a"
                },
                "init": {
                  "type": "CallExpression",
                  "start": 1277,
                  "end": 1289,
                  "callee": {
                    "type": "MemberExpression",
                    "start": 1277,
                    "end": 1287,
                    "object": {
                      "type": "Identifier",
                      "start": 1277,
                      "end": 1282,
                      "name": "aiter"
                    },
                    "property": {
                      "type": "Identifier",
                      "start": 1283,
                      "end": 1287,
                      "name": "next"
                    },
                    "computed": false,
                    "optional": false
                  },
                  "arguments": [],
                  "optional": false
                }
              }
            ],
            "kind": "var"
          },
          {
            "type": "VariableDeclaration",
            "start": 1295,
            "end": 1316,
            "declarations": [
              {
                "type": "VariableDeclarator",
                "start": 1299,
                "end": 1315,
                "id": {
                  "type": "Identifier",
                  "start": 1299,
                  "end": 1300,
                  "name": "b"
                },
                "init": {
                  "type": "CallExpression",
                  "start": 1303,
                  "end": 1315,
                  "callee": {
                    "type": "MemberExpression",
                    "start": 1303,
                    "end": 1313,
                    "object": {
                      "type": "Identifier",
                      "start": 1303,
                      "end": 1308,
                      "name": "aiter"
                    },
                    "property": {
                      "type": "Identifier",
                      "start": 1309,
                      "end": 1313,
                      "name": "next"
                    },
                    "computed": false,
                    "optional": false
                  },
                  "arguments": [],
                  "optional": false
                }
              }
            ],
            "kind": "var"
          },
          {
            "type": "VariableDeclaration",
            "start": 1321,
            "end": 1342,
            "declarations": [
              {
                "type": "VariableDeclarator",
                "start": 1325,
                "end": 1341,
                "id": {
                  "type": "Identifier",
                  "start": 1325,
                  "end": 1326,
                  "name": "c"
                },
                "init": {
                  "type": "CallExpression",
                  "start": 1329,
                  "end": 1341,
                  "callee": {
                    "type": "MemberExpression",
                    "start": 1329,
                    "end": 1339,
                    "object": {
                      "type": "Identifier",
                      "start": 1329,
                      "end": 1334,
                      "name": "aiter"
                    },
                    "property": {
                      "type": "Identifier",
                      "start": 1335,
                      "end": 1339,
                      "name": "next"
                    },
                    "computed": false,
                    "optional": false
                  },
                  "arguments": [],
                  "optional": false
                }
              }
            ],
            "kind": "var"
          },
          {
            "type": "ExpressionStatement",
            "start": 1348,
            "end": 1386,
            "expression": {
              "type": "CallExpression",
              "start": 1348,
              "end": 1385,
              "callee": {
                "type": "MemberExpression",
                "start": 1348,
                "end": 1364,
                "object": {
                  "type": "Identifier",
                  "start": 1348,
                  "end": 1354,
                  "name": "assert"
                },
                "property": {
                  "type": "Identifier",
                  "start": 1355,
                  "end": 1364,
                  "name": "sameValue"
                },
                "computed": false,
                "optional": false
              },
              "arguments": [
                {
                  "type": "MemberExpression",
                  "start": 1365,
                  "end": 1380,
                  "object": {
                    "type": "ParenthesizedExpression",
                    "start": 1365,
                    "end": 1374,
                    "expression": {
                      "type": "AwaitExpression",
                      "start": 1366,
                      "end": 1373,
                      "argument": {
                        "type": "Identifier",
                        "start": 1372,
                        "end": 1373,
                        "name": "a"
                      }
                    }
                  },
                  "property": {
                    "type": "Identifier",
                    "start": 1375,
                    "end": 1380,
                    "name": "value"
                  },
                  "computed": false,
                  "optional": false
                },
                {
                  "type": "Literal",
                  "start": 1382,
                  "end": 1384,
                  "value": 42
                }
              ],
              "optional": false
            }
          },
          {
            "type": "ExpressionStatement",
            "start": 1391,
            "end": 1429,
            "expression": {
              "type": "CallExpression",
              "start": 1391,
              "end": 1428,
              "callee": {
                "type": "MemberExpression",
                "start": 1391,
                "end": 1407,
                "object": {
                  "type": "Identifier",
                  "start": 1391,
                  "end": 1397,
                  "name": "assert"
                },
                "property": {
                  "type": "Identifier",
                  "start": 1398,
                  "end": 1407,
                  "name": "sameValue"
                },
                "computed": false,
                "optional": false
              },
              "arguments": [
                {
                  "type": "MemberExpression",
                  "start": 1408,
                  "end": 1423,
                  "object": {
                    "type": "ParenthesizedExpression",
                    "start": 1408,
                    "end": 1417,
                    "expression": {
                      "type": "AwaitExpression",
                      "start": 1409,
                      "end": 1416,
                      "argument": {
                        "type": "Identifier",
                        "start": 1415,
                        "end": 1416,
                        "name": "b"
                      }
                    }
                  },
                  "property": {
                    "type": "Identifier",
                    "start": 1418,
                    "end": 1423,
                    "name": "value"
                  },
                  "computed": false,
                  "optional": false
                },
                {
                  "type": "Literal",
                  "start": 1425,
                  "end": 1427,
                  "value": 39
                }
              ],
              "optional": false
            }
          },
          {
            "type": "VariableDeclaration",
            "start": 1435,
            "end": 1445,
            "declarations": [
              {
                "type": "VariableDeclarator",
                "start": 1439,
                "end": 1444,
                "id": {
                  "type": "Identifier",
                  "start": 1439,
                  "end": 1444,
                  "name": "error"
                },
                "init": null
              }
            ],
            "kind": "var"
          },
          {
            "type": "TryStatement",
            "start": 1450,
            "end": 1515,
            "block": {
              "type": "BlockStatement",
              "start": 1454,
              "end": 1478,
              "body": [
                {
                  "type": "ExpressionStatement",
                  "start": 1464,
                  "end": 1472,
                  "expression": {
                    "type": "AwaitExpression",
                    "start": 1464,
                    "end": 1471,
                    "argument": {
                      "type": "Identifier",
                      "start": 1470,
                      "end": 1471,
                      "name": "c"
                    }
                  }
                }
              ]
            },
            "handler": {
              "type": "CatchClause",
              "start": 1479,
              "end": 1515,
              "param": {
                "type": "Identifier",
                "start": 1486,
                "end": 1487,
                "name": "e"
              },
              "body": {
                "type": "BlockStatement",
                "start": 1489,
                "end": 1515,
                "body": [
                  {
                    "type": "ExpressionStatement",
                    "start": 1499,
                    "end": 1509,
                    "expression": {
                      "type": "AssignmentExpression",
                      "start": 1499,
                      "end": 1508,
                      "operator": "=",
                      "left": {
                        "type": "Identifier",
                        "start": 1499,
                        "end": 1504,
                        "name": "error"
                      },
                      "right": {
                        "type": "Identifier",
                        "start": 1507,
                        "end": 1508,
                        "name": "e"
                      }
                    }
                  }
                ]
              }
            },
            "finalizer": null
          },
          {
            "type": "ExpressionStatement",
            "start": 1521,
            "end": 1552,
            "expression": {
              "type": "CallExpression",
              "start": 1521,
              "end": 1551,
              "callee": {
                "type": "MemberExpression",
                "start": 1521,
                "end": 1537,
                "object": {
                  "type": "Identifier",
                  "start": 1521,
                  "end": 1527,
                  "name": "assert"
                },
                "property": {
                  "type": "Identifier",
                  "start": 1528,
                  "end": 1537,
                  "name": "sameValue"
                },
                "computed": false,
                "optional": false
              },
              "arguments": [
                {
                  "type": "Identifier",
                  "start": 1538,
                  "end": 1543,
                  "name": "error"
                },
                {
                  "type": "Literal",
                  "start": 1545,
                  "end": 1550,
                  "value": "foo"
                }
              ],
              "optional": false
            }
          }
        ]
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1556,
      "end": 1580,
      "expression": {
        "type": "CallExpression",
        "start": 1556,
        "end": 1579,
        "callee": {
          "type": "MemberExpression",
          "start": 1556,
          "end": 1565,
          "object": {
            "type": "CallExpression",
            "start": 1556,
            "end": 1560,
            "callee": {
              "type": "Identifier",
              "start": 1556,
              "end": 1558,
              "name": "fn"
            },
            "arguments": [],
            "optional": false
          },
          "property": {
            "type": "Identifier",
            "start": 1561,
            "end": 1565,
            "name": "then"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "Identifier",
            "start": 1566,
            "end": 1571,
            "name": "$DONE"
          },
          {
            "type": "Identifier",
            "start": 1573,
            "end": 1578,
            "name": "$DONE"
          }
        ],
        "optional": false
      }
    }
  ],
  "sourceType": "script"
}