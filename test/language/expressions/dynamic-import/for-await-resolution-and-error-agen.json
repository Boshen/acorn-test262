{
  "type": "Program",
  "start": 0,
  "end": 1583,
  "body": [
    {
      "type": "FunctionDeclaration",
      "start": 933,
      "end": 1222,
      "id": {
        "type": "Identifier",
        "start": 950,
        "end": 954,
        "name": "agen"
      },
      "expression": false,
      "generator": true,
      "async": true,
      "params": [],
      "body": {
        "type": "BlockStatement",
        "start": 957,
        "end": 1222,
        "body": [
          {
            "type": "ForOfStatement",
            "start": 961,
            "end": 1220,
            "await": true,
            "left": {
              "type": "VariableDeclaration",
              "start": 972,
              "end": 984,
              "declarations": [
                {
                  "type": "VariableDeclarator",
                  "start": 976,
                  "end": 984,
                  "id": {
                    "type": "Identifier",
                    "start": 976,
                    "end": 984,
                    "name": "imported"
                  },
                  "init": null
                }
              ],
              "kind": "let"
            },
            "right": {
              "type": "ArrayExpression",
              "start": 988,
              "end": 1191,
              "elements": [
                {
                  "type": "ImportExpression",
                  "start": 996,
                  "end": 1051,
                  "source": {
                    "type": "Literal",
                    "start": 1003,
                    "end": 1050,
                    "value": "./for-await-resolution-and-error-a_FIXTURE.js"
                  }
                },
                {
                  "type": "ImportExpression",
                  "start": 1059,
                  "end": 1114,
                  "source": {
                    "type": "Literal",
                    "start": 1066,
                    "end": 1113,
                    "value": "./for-await-resolution-and-error-b_FIXTURE.js"
                  }
                },
                {
                  "type": "ImportExpression",
                  "start": 1122,
                  "end": 1184,
                  "source": {
                    "type": "Literal",
                    "start": 1129,
                    "end": 1183,
                    "value": "./for-await-resolution-and-error-poisoned_FIXTURE.js"
                  }
                }
              ]
            },
            "body": {
              "type": "BlockStatement",
              "start": 1193,
              "end": 1220,
              "body": [
                {
                  "type": "ExpressionStatement",
                  "start": 1199,
                  "end": 1216,
                  "expression": {
                    "type": "YieldExpression",
                    "start": 1199,
                    "end": 1215,
                    "delegate": false,
                    "argument": {
                      "type": "MemberExpression",
                      "start": 1205,
                      "end": 1215,
                      "object": {
                        "type": "Identifier",
                        "start": 1205,
                        "end": 1213,
                        "name": "imported"
                      },
                      "property": {
                        "type": "Identifier",
                        "start": 1214,
                        "end": 1215,
                        "name": "x"
                      },
                      "computed": false,
                      "optional": false
                    }
                  }
                }
              ]
            }
          }
        ]
      }
    },
    {
      "type": "VariableDeclaration",
      "start": 1224,
      "end": 1243,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 1228,
          "end": 1242,
          "id": {
            "type": "Identifier",
            "start": 1228,
            "end": 1233,
            "name": "aiter"
          },
          "init": {
            "type": "CallExpression",
            "start": 1236,
            "end": 1242,
            "callee": {
              "type": "Identifier",
              "start": 1236,
              "end": 1240,
              "name": "agen"
            },
            "arguments": [],
            "optional": false
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "FunctionDeclaration",
      "start": 1245,
      "end": 1556,
      "id": {
        "type": "Identifier",
        "start": 1260,
        "end": 1262,
        "name": "fn"
      },
      "expression": false,
      "generator": false,
      "async": true,
      "params": [],
      "body": {
        "type": "BlockStatement",
        "start": 1265,
        "end": 1556,
        "body": [
          {
            "type": "VariableDeclaration",
            "start": 1271,
            "end": 1292,
            "declarations": [
              {
                "type": "VariableDeclarator",
                "start": 1275,
                "end": 1291,
                "id": {
                  "type": "Identifier",
                  "start": 1275,
                  "end": 1276,
                  "name": "a"
                },
                "init": {
                  "type": "CallExpression",
                  "start": 1279,
                  "end": 1291,
                  "callee": {
                    "type": "MemberExpression",
                    "start": 1279,
                    "end": 1289,
                    "object": {
                      "type": "Identifier",
                      "start": 1279,
                      "end": 1284,
                      "name": "aiter"
                    },
                    "property": {
                      "type": "Identifier",
                      "start": 1285,
                      "end": 1289,
                      "name": "next"
                    },
                    "computed": false,
                    "optional": false
                  },
                  "arguments": [],
                  "optional": false
                }
              }
            ],
            "kind": "var"
          },
          {
            "type": "VariableDeclaration",
            "start": 1297,
            "end": 1318,
            "declarations": [
              {
                "type": "VariableDeclarator",
                "start": 1301,
                "end": 1317,
                "id": {
                  "type": "Identifier",
                  "start": 1301,
                  "end": 1302,
                  "name": "b"
                },
                "init": {
                  "type": "CallExpression",
                  "start": 1305,
                  "end": 1317,
                  "callee": {
                    "type": "MemberExpression",
                    "start": 1305,
                    "end": 1315,
                    "object": {
                      "type": "Identifier",
                      "start": 1305,
                      "end": 1310,
                      "name": "aiter"
                    },
                    "property": {
                      "type": "Identifier",
                      "start": 1311,
                      "end": 1315,
                      "name": "next"
                    },
                    "computed": false,
                    "optional": false
                  },
                  "arguments": [],
                  "optional": false
                }
              }
            ],
            "kind": "var"
          },
          {
            "type": "VariableDeclaration",
            "start": 1323,
            "end": 1344,
            "declarations": [
              {
                "type": "VariableDeclarator",
                "start": 1327,
                "end": 1343,
                "id": {
                  "type": "Identifier",
                  "start": 1327,
                  "end": 1328,
                  "name": "c"
                },
                "init": {
                  "type": "CallExpression",
                  "start": 1331,
                  "end": 1343,
                  "callee": {
                    "type": "MemberExpression",
                    "start": 1331,
                    "end": 1341,
                    "object": {
                      "type": "Identifier",
                      "start": 1331,
                      "end": 1336,
                      "name": "aiter"
                    },
                    "property": {
                      "type": "Identifier",
                      "start": 1337,
                      "end": 1341,
                      "name": "next"
                    },
                    "computed": false,
                    "optional": false
                  },
                  "arguments": [],
                  "optional": false
                }
              }
            ],
            "kind": "var"
          },
          {
            "type": "ExpressionStatement",
            "start": 1350,
            "end": 1388,
            "expression": {
              "type": "CallExpression",
              "start": 1350,
              "end": 1387,
              "callee": {
                "type": "MemberExpression",
                "start": 1350,
                "end": 1366,
                "object": {
                  "type": "Identifier",
                  "start": 1350,
                  "end": 1356,
                  "name": "assert"
                },
                "property": {
                  "type": "Identifier",
                  "start": 1357,
                  "end": 1366,
                  "name": "sameValue"
                },
                "computed": false,
                "optional": false
              },
              "arguments": [
                {
                  "type": "MemberExpression",
                  "start": 1367,
                  "end": 1382,
                  "object": {
                    "type": "ParenthesizedExpression",
                    "start": 1367,
                    "end": 1376,
                    "expression": {
                      "type": "AwaitExpression",
                      "start": 1368,
                      "end": 1375,
                      "argument": {
                        "type": "Identifier",
                        "start": 1374,
                        "end": 1375,
                        "name": "a"
                      }
                    }
                  },
                  "property": {
                    "type": "Identifier",
                    "start": 1377,
                    "end": 1382,
                    "name": "value"
                  },
                  "computed": false,
                  "optional": false
                },
                {
                  "type": "Literal",
                  "start": 1384,
                  "end": 1386,
                  "value": 42
                }
              ],
              "optional": false
            }
          },
          {
            "type": "ExpressionStatement",
            "start": 1393,
            "end": 1431,
            "expression": {
              "type": "CallExpression",
              "start": 1393,
              "end": 1430,
              "callee": {
                "type": "MemberExpression",
                "start": 1393,
                "end": 1409,
                "object": {
                  "type": "Identifier",
                  "start": 1393,
                  "end": 1399,
                  "name": "assert"
                },
                "property": {
                  "type": "Identifier",
                  "start": 1400,
                  "end": 1409,
                  "name": "sameValue"
                },
                "computed": false,
                "optional": false
              },
              "arguments": [
                {
                  "type": "MemberExpression",
                  "start": 1410,
                  "end": 1425,
                  "object": {
                    "type": "ParenthesizedExpression",
                    "start": 1410,
                    "end": 1419,
                    "expression": {
                      "type": "AwaitExpression",
                      "start": 1411,
                      "end": 1418,
                      "argument": {
                        "type": "Identifier",
                        "start": 1417,
                        "end": 1418,
                        "name": "b"
                      }
                    }
                  },
                  "property": {
                    "type": "Identifier",
                    "start": 1420,
                    "end": 1425,
                    "name": "value"
                  },
                  "computed": false,
                  "optional": false
                },
                {
                  "type": "Literal",
                  "start": 1427,
                  "end": 1429,
                  "value": 39
                }
              ],
              "optional": false
            }
          },
          {
            "type": "VariableDeclaration",
            "start": 1437,
            "end": 1447,
            "declarations": [
              {
                "type": "VariableDeclarator",
                "start": 1441,
                "end": 1446,
                "id": {
                  "type": "Identifier",
                  "start": 1441,
                  "end": 1446,
                  "name": "error"
                },
                "init": null
              }
            ],
            "kind": "var"
          },
          {
            "type": "TryStatement",
            "start": 1452,
            "end": 1517,
            "block": {
              "type": "BlockStatement",
              "start": 1456,
              "end": 1480,
              "body": [
                {
                  "type": "ExpressionStatement",
                  "start": 1466,
                  "end": 1474,
                  "expression": {
                    "type": "AwaitExpression",
                    "start": 1466,
                    "end": 1473,
                    "argument": {
                      "type": "Identifier",
                      "start": 1472,
                      "end": 1473,
                      "name": "c"
                    }
                  }
                }
              ]
            },
            "handler": {
              "type": "CatchClause",
              "start": 1481,
              "end": 1517,
              "param": {
                "type": "Identifier",
                "start": 1488,
                "end": 1489,
                "name": "e"
              },
              "body": {
                "type": "BlockStatement",
                "start": 1491,
                "end": 1517,
                "body": [
                  {
                    "type": "ExpressionStatement",
                    "start": 1501,
                    "end": 1511,
                    "expression": {
                      "type": "AssignmentExpression",
                      "start": 1501,
                      "end": 1510,
                      "operator": "=",
                      "left": {
                        "type": "Identifier",
                        "start": 1501,
                        "end": 1506,
                        "name": "error"
                      },
                      "right": {
                        "type": "Identifier",
                        "start": 1509,
                        "end": 1510,
                        "name": "e"
                      }
                    }
                  }
                ]
              }
            },
            "finalizer": null
          },
          {
            "type": "ExpressionStatement",
            "start": 1523,
            "end": 1554,
            "expression": {
              "type": "CallExpression",
              "start": 1523,
              "end": 1553,
              "callee": {
                "type": "MemberExpression",
                "start": 1523,
                "end": 1539,
                "object": {
                  "type": "Identifier",
                  "start": 1523,
                  "end": 1529,
                  "name": "assert"
                },
                "property": {
                  "type": "Identifier",
                  "start": 1530,
                  "end": 1539,
                  "name": "sameValue"
                },
                "computed": false,
                "optional": false
              },
              "arguments": [
                {
                  "type": "Identifier",
                  "start": 1540,
                  "end": 1545,
                  "name": "error"
                },
                {
                  "type": "Literal",
                  "start": 1547,
                  "end": 1552,
                  "value": "foo"
                }
              ],
              "optional": false
            }
          }
        ]
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1558,
      "end": 1582,
      "expression": {
        "type": "CallExpression",
        "start": 1558,
        "end": 1581,
        "callee": {
          "type": "MemberExpression",
          "start": 1558,
          "end": 1567,
          "object": {
            "type": "CallExpression",
            "start": 1558,
            "end": 1562,
            "callee": {
              "type": "Identifier",
              "start": 1558,
              "end": 1560,
              "name": "fn"
            },
            "arguments": [],
            "optional": false
          },
          "property": {
            "type": "Identifier",
            "start": 1563,
            "end": 1567,
            "name": "then"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "Identifier",
            "start": 1568,
            "end": 1573,
            "name": "$DONE"
          },
          {
            "type": "Identifier",
            "start": 1575,
            "end": 1580,
            "name": "$DONE"
          }
        ],
        "optional": false
      }
    }
  ],
  "sourceType": "script"
}