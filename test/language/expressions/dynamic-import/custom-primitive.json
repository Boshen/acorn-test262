{
  "type": "Program",
  "start": 0,
  "end": 1447,
  "body": [
    {
      "type": "FunctionDeclaration",
      "start": 914,
      "end": 1430,
      "id": {
        "type": "Identifier",
        "start": 929,
        "end": 931,
        "name": "fn"
      },
      "expression": false,
      "generator": false,
      "async": true,
      "params": [],
      "body": {
        "type": "BlockStatement",
        "start": 934,
        "end": 1430,
        "body": [
          {
            "type": "VariableDeclaration",
            "start": 940,
            "end": 997,
            "declarations": [
              {
                "type": "VariableDeclarator",
                "start": 946,
                "end": 996,
                "id": {
                  "type": "Identifier",
                  "start": 946,
                  "end": 949,
                  "name": "str"
                },
                "init": {
                  "type": "AwaitExpression",
                  "start": 952,
                  "end": 996,
                  "argument": {
                    "type": "ImportExpression",
                    "start": 958,
                    "end": 996,
                    "source": {
                      "type": "Literal",
                      "start": 965,
                      "end": 995,
                      "value": "./custom-tostring_FIXTURE.js"
                    },
                    "options": null
                  }
                }
              }
            ],
            "kind": "const"
          },
          {
            "type": "VariableDeclaration",
            "start": 1002,
            "end": 1060,
            "declarations": [
              {
                "type": "VariableDeclarator",
                "start": 1008,
                "end": 1059,
                "id": {
                  "type": "Identifier",
                  "start": 1008,
                  "end": 1013,
                  "name": "value"
                },
                "init": {
                  "type": "AwaitExpression",
                  "start": 1016,
                  "end": 1059,
                  "argument": {
                    "type": "ImportExpression",
                    "start": 1022,
                    "end": 1059,
                    "source": {
                      "type": "Literal",
                      "start": 1029,
                      "end": 1058,
                      "value": "./custom-valueof_FIXTURE.js"
                    },
                    "options": null
                  }
                }
              }
            ],
            "kind": "const"
          },
          {
            "type": "ExpressionStatement",
            "start": 1066,
            "end": 1144,
            "expression": {
              "type": "CallExpression",
              "start": 1066,
              "end": 1143,
              "callee": {
                "type": "MemberExpression",
                "start": 1066,
                "end": 1082,
                "object": {
                  "type": "Identifier",
                  "start": 1066,
                  "end": 1072,
                  "name": "assert"
                },
                "property": {
                  "type": "Identifier",
                  "start": 1073,
                  "end": 1082,
                  "name": "sameValue"
                },
                "computed": false,
                "optional": false
              },
              "arguments": [
                {
                  "type": "CallExpression",
                  "start": 1083,
                  "end": 1094,
                  "callee": {
                    "type": "Identifier",
                    "start": 1083,
                    "end": 1089,
                    "name": "String"
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "start": 1090,
                      "end": 1093,
                      "name": "str"
                    }
                  ],
                  "optional": false
                },
                {
                  "type": "Literal",
                  "start": 1096,
                  "end": 1102,
                  "value": "1612"
                },
                {
                  "type": "Literal",
                  "start": 1104,
                  "end": 1142,
                  "value": "namespace uses the imported toString"
                }
              ],
              "optional": false
            }
          },
          {
            "type": "ExpressionStatement",
            "start": 1149,
            "end": 1245,
            "expression": {
              "type": "CallExpression",
              "start": 1149,
              "end": 1244,
              "callee": {
                "type": "MemberExpression",
                "start": 1149,
                "end": 1165,
                "object": {
                  "type": "Identifier",
                  "start": 1149,
                  "end": 1155,
                  "name": "assert"
                },
                "property": {
                  "type": "Identifier",
                  "start": 1156,
                  "end": 1165,
                  "name": "sameValue"
                },
                "computed": false,
                "optional": false
              },
              "arguments": [
                {
                  "type": "CallExpression",
                  "start": 1166,
                  "end": 1177,
                  "callee": {
                    "type": "Identifier",
                    "start": 1166,
                    "end": 1172,
                    "name": "Number"
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "start": 1173,
                      "end": 1176,
                      "name": "str"
                    }
                  ],
                  "optional": false
                },
                {
                  "type": "Literal",
                  "start": 1179,
                  "end": 1183,
                  "value": 1612
                },
                {
                  "type": "Literal",
                  "start": 1185,
                  "end": 1243,
                  "value": "namespace fallsback to toString as its prototype is null"
                }
              ],
              "optional": false
            }
          },
          {
            "type": "ExpressionStatement",
            "start": 1251,
            "end": 1326,
            "expression": {
              "type": "CallExpression",
              "start": 1251,
              "end": 1325,
              "callee": {
                "type": "MemberExpression",
                "start": 1251,
                "end": 1267,
                "object": {
                  "type": "Identifier",
                  "start": 1251,
                  "end": 1257,
                  "name": "assert"
                },
                "property": {
                  "type": "Identifier",
                  "start": 1258,
                  "end": 1267,
                  "name": "sameValue"
                },
                "computed": false,
                "optional": false
              },
              "arguments": [
                {
                  "type": "CallExpression",
                  "start": 1268,
                  "end": 1281,
                  "callee": {
                    "type": "Identifier",
                    "start": 1268,
                    "end": 1274,
                    "name": "Number"
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "start": 1275,
                      "end": 1280,
                      "name": "value"
                    }
                  ],
                  "optional": false
                },
                {
                  "type": "Literal",
                  "start": 1283,
                  "end": 1285,
                  "value": 42
                },
                {
                  "type": "Literal",
                  "start": 1287,
                  "end": 1324,
                  "value": "namespace uses the imported valueOf"
                }
              ],
              "optional": false
            }
          },
          {
            "type": "ExpressionStatement",
            "start": 1331,
            "end": 1428,
            "expression": {
              "type": "CallExpression",
              "start": 1331,
              "end": 1427,
              "callee": {
                "type": "MemberExpression",
                "start": 1331,
                "end": 1347,
                "object": {
                  "type": "Identifier",
                  "start": 1331,
                  "end": 1337,
                  "name": "assert"
                },
                "property": {
                  "type": "Identifier",
                  "start": 1338,
                  "end": 1347,
                  "name": "sameValue"
                },
                "computed": false,
                "optional": false
              },
              "arguments": [
                {
                  "type": "CallExpression",
                  "start": 1348,
                  "end": 1361,
                  "callee": {
                    "type": "Identifier",
                    "start": 1348,
                    "end": 1354,
                    "name": "String"
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "start": 1355,
                      "end": 1360,
                      "name": "value"
                    }
                  ],
                  "optional": false
                },
                {
                  "type": "Literal",
                  "start": 1363,
                  "end": 1367,
                  "value": "42"
                },
                {
                  "type": "Literal",
                  "start": 1369,
                  "end": 1426,
                  "value": "namespace fallsback to valueOf as its prototype is null"
                }
              ],
              "optional": false
            }
          }
        ]
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1432,
      "end": 1446,
      "expression": {
        "type": "CallExpression",
        "start": 1432,
        "end": 1445,
        "callee": {
          "type": "Identifier",
          "start": 1432,
          "end": 1441,
          "name": "asyncTest"
        },
        "arguments": [
          {
            "type": "Identifier",
            "start": 1442,
            "end": 1444,
            "name": "fn"
          }
        ],
        "optional": false
      }
    }
  ],
  "sourceType": "script"
}