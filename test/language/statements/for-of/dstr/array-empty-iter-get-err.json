{
  "type": "Program",
  "start": 0,
  "end": 1443,
  "body": [
    {
      "type": "VariableDeclaration",
      "start": 1192,
      "end": 1210,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 1196,
          "end": 1209,
          "id": {
            "type": "Identifier",
            "start": 1196,
            "end": 1204,
            "name": "iterable"
          },
          "init": {
            "type": "ObjectExpression",
            "start": 1207,
            "end": 1209,
            "properties": []
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "ExpressionStatement",
      "start": 1211,
      "end": 1282,
      "expression": {
        "type": "AssignmentExpression",
        "start": 1211,
        "end": 1281,
        "operator": "=",
        "left": {
          "type": "MemberExpression",
          "start": 1211,
          "end": 1236,
          "object": {
            "type": "Identifier",
            "start": 1211,
            "end": 1219,
            "name": "iterable"
          },
          "property": {
            "type": "MemberExpression",
            "start": 1220,
            "end": 1235,
            "object": {
              "type": "Identifier",
              "start": 1220,
              "end": 1226,
              "name": "Symbol"
            },
            "property": {
              "type": "Identifier",
              "start": 1227,
              "end": 1235,
              "name": "iterator"
            },
            "computed": false,
            "optional": false
          },
          "computed": true,
          "optional": false
        },
        "right": {
          "type": "FunctionExpression",
          "start": 1239,
          "end": 1281,
          "id": null,
          "expression": false,
          "generator": false,
          "async": false,
          "params": [],
          "body": {
            "type": "BlockStatement",
            "start": 1250,
            "end": 1281,
            "body": [
              {
                "type": "ThrowStatement",
                "start": 1254,
                "end": 1279,
                "argument": {
                  "type": "NewExpression",
                  "start": 1260,
                  "end": 1278,
                  "callee": {
                    "type": "Identifier",
                    "start": 1264,
                    "end": 1276,
                    "name": "Test262Error"
                  },
                  "arguments": []
                }
              }
            ]
          }
        }
      }
    },
    {
      "type": "VariableDeclaration",
      "start": 1284,
      "end": 1300,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 1288,
          "end": 1299,
          "id": {
            "type": "Identifier",
            "start": 1288,
            "end": 1295,
            "name": "counter"
          },
          "init": {
            "type": "Literal",
            "start": 1298,
            "end": 1299,
            "value": 0
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "ExpressionStatement",
      "start": 1302,
      "end": 1411,
      "expression": {
        "type": "CallExpression",
        "start": 1302,
        "end": 1410,
        "callee": {
          "type": "MemberExpression",
          "start": 1302,
          "end": 1315,
          "object": {
            "type": "Identifier",
            "start": 1302,
            "end": 1308,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1309,
            "end": 1315,
            "name": "throws"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "Identifier",
            "start": 1316,
            "end": 1328,
            "name": "Test262Error"
          },
          {
            "type": "FunctionExpression",
            "start": 1330,
            "end": 1409,
            "id": null,
            "expression": false,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "start": 1341,
              "end": 1409,
              "body": [
                {
                  "type": "ForOfStatement",
                  "start": 1345,
                  "end": 1391,
                  "await": false,
                  "left": {
                    "type": "ArrayPattern",
                    "start": 1350,
                    "end": 1352,
                    "elements": []
                  },
                  "right": {
                    "type": "ArrayExpression",
                    "start": 1356,
                    "end": 1366,
                    "elements": [
                      {
                        "type": "Identifier",
                        "start": 1357,
                        "end": 1365,
                        "name": "iterable"
                      }
                    ]
                  },
                  "body": {
                    "type": "BlockStatement",
                    "start": 1368,
                    "end": 1391,
                    "body": [
                      {
                        "type": "ExpressionStatement",
                        "start": 1374,
                        "end": 1387,
                        "expression": {
                          "type": "AssignmentExpression",
                          "start": 1374,
                          "end": 1386,
                          "operator": "+=",
                          "left": {
                            "type": "Identifier",
                            "start": 1374,
                            "end": 1381,
                            "name": "counter"
                          },
                          "right": {
                            "type": "Literal",
                            "start": 1385,
                            "end": 1386,
                            "value": 1
                          }
                        }
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "start": 1394,
                  "end": 1407,
                  "expression": {
                    "type": "AssignmentExpression",
                    "start": 1394,
                    "end": 1406,
                    "operator": "+=",
                    "left": {
                      "type": "Identifier",
                      "start": 1394,
                      "end": 1401,
                      "name": "counter"
                    },
                    "right": {
                      "type": "Literal",
                      "start": 1405,
                      "end": 1406,
                      "value": 1
                    }
                  }
                }
              ]
            }
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1413,
      "end": 1442,
      "expression": {
        "type": "CallExpression",
        "start": 1413,
        "end": 1441,
        "callee": {
          "type": "MemberExpression",
          "start": 1413,
          "end": 1429,
          "object": {
            "type": "Identifier",
            "start": 1413,
            "end": 1419,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1420,
            "end": 1429,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "Identifier",
            "start": 1430,
            "end": 1437,
            "name": "counter"
          },
          {
            "type": "Literal",
            "start": 1439,
            "end": 1440,
            "value": 0
          }
        ],
        "optional": false
      }
    }
  ],
  "sourceType": "script"
}