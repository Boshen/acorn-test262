{
  "type": "Program",
  "start": 0,
  "end": 1284,
  "body": [
    {
      "type": "VariableDeclaration",
      "start": 1046,
      "end": 1058,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 1050,
          "end": 1057,
          "id": {
            "type": "Identifier",
            "start": 1050,
            "end": 1057,
            "name": "initial"
          },
          "init": null
        }
      ],
      "kind": "var"
    },
    {
      "type": "ExpressionStatement",
      "start": 1060,
      "end": 1115,
      "expression": {
        "type": "CallExpression",
        "start": 1060,
        "end": 1114,
        "callee": {
          "type": "ParenthesizedExpression",
          "start": 1060,
          "end": 1069,
          "expression": {
            "type": "SequenceExpression",
            "start": 1061,
            "end": 1068,
            "expressions": [
              {
                "type": "Literal",
                "start": 1061,
                "end": 1062,
                "value": 0,
                "raw": "0"
              },
              {
                "type": "Identifier",
                "start": 1064,
                "end": 1068,
                "name": "eval"
              }
            ]
          }
        },
        "arguments": [
          {
            "type": "Literal",
            "start": 1070,
            "end": 1113,
            "value": "initial = f; function f() { return 234; }",
            "raw": "'initial = f; function f() { return 234; }'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1117,
      "end": 1145,
      "expression": {
        "type": "CallExpression",
        "start": 1117,
        "end": 1144,
        "callee": {
          "type": "Identifier",
          "start": 1117,
          "end": 1133,
          "name": "verifyEnumerable"
        },
        "arguments": [
          {
            "type": "ThisExpression",
            "start": 1134,
            "end": 1138
          },
          {
            "type": "Literal",
            "start": 1140,
            "end": 1143,
            "value": "f",
            "raw": "'f'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1146,
      "end": 1172,
      "expression": {
        "type": "CallExpression",
        "start": 1146,
        "end": 1171,
        "callee": {
          "type": "Identifier",
          "start": 1146,
          "end": 1160,
          "name": "verifyWritable"
        },
        "arguments": [
          {
            "type": "ThisExpression",
            "start": 1161,
            "end": 1165
          },
          {
            "type": "Literal",
            "start": 1167,
            "end": 1170,
            "value": "f",
            "raw": "'f'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1173,
      "end": 1203,
      "expression": {
        "type": "CallExpression",
        "start": 1173,
        "end": 1202,
        "callee": {
          "type": "Identifier",
          "start": 1173,
          "end": 1191,
          "name": "verifyConfigurable"
        },
        "arguments": [
          {
            "type": "ThisExpression",
            "start": 1192,
            "end": 1196
          },
          {
            "type": "Literal",
            "start": 1198,
            "end": 1201,
            "value": "f",
            "raw": "'f'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1204,
      "end": 1249,
      "expression": {
        "type": "CallExpression",
        "start": 1204,
        "end": 1248,
        "callee": {
          "type": "MemberExpression",
          "start": 1204,
          "end": 1220,
          "object": {
            "type": "Identifier",
            "start": 1204,
            "end": 1210,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1211,
            "end": 1220,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "UnaryExpression",
            "start": 1221,
            "end": 1235,
            "operator": "typeof",
            "prefix": true,
            "argument": {
              "type": "Identifier",
              "start": 1228,
              "end": 1235,
              "name": "initial"
            }
          },
          {
            "type": "Literal",
            "start": 1237,
            "end": 1247,
            "value": "function",
            "raw": "'function'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1250,
      "end": 1283,
      "expression": {
        "type": "CallExpression",
        "start": 1250,
        "end": 1282,
        "callee": {
          "type": "MemberExpression",
          "start": 1250,
          "end": 1266,
          "object": {
            "type": "Identifier",
            "start": 1250,
            "end": 1256,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1257,
            "end": 1266,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "CallExpression",
            "start": 1267,
            "end": 1276,
            "callee": {
              "type": "Identifier",
              "start": 1267,
              "end": 1274,
              "name": "initial"
            },
            "arguments": [],
            "optional": false
          },
          {
            "type": "Literal",
            "start": 1278,
            "end": 1281,
            "value": 234,
            "raw": "234"
          }
        ],
        "optional": false
      }
    }
  ],
  "sourceType": "script"
}