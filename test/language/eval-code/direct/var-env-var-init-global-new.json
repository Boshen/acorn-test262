{
  "type": "Program",
  "start": 0,
  "end": 978,
  "body": [
    {
      "type": "VariableDeclaration",
      "start": 801,
      "end": 820,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 805,
          "end": 819,
          "id": {
            "type": "Identifier",
            "start": 805,
            "end": 812,
            "name": "initial"
          },
          "init": {
            "type": "Literal",
            "start": 815,
            "end": 819,
            "value": null,
            "raw": "null"
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "ExpressionStatement",
      "start": 822,
      "end": 850,
      "expression": {
        "type": "CallExpression",
        "start": 822,
        "end": 849,
        "callee": {
          "type": "Identifier",
          "start": 822,
          "end": 826,
          "name": "eval"
        },
        "arguments": [
          {
            "type": "Literal",
            "start": 827,
            "end": 848,
            "value": "initial = x; var x;"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 852,
      "end": 880,
      "expression": {
        "type": "CallExpression",
        "start": 852,
        "end": 879,
        "callee": {
          "type": "Identifier",
          "start": 852,
          "end": 868,
          "name": "verifyEnumerable"
        },
        "arguments": [
          {
            "type": "ThisExpression",
            "start": 869,
            "end": 873
          },
          {
            "type": "Literal",
            "start": 875,
            "end": 878,
            "value": "x"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 881,
      "end": 907,
      "expression": {
        "type": "CallExpression",
        "start": 881,
        "end": 906,
        "callee": {
          "type": "Identifier",
          "start": 881,
          "end": 895,
          "name": "verifyWritable"
        },
        "arguments": [
          {
            "type": "ThisExpression",
            "start": 896,
            "end": 900
          },
          {
            "type": "Literal",
            "start": 902,
            "end": 905,
            "value": "x"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 908,
      "end": 938,
      "expression": {
        "type": "CallExpression",
        "start": 908,
        "end": 937,
        "callee": {
          "type": "Identifier",
          "start": 908,
          "end": 926,
          "name": "verifyConfigurable"
        },
        "arguments": [
          {
            "type": "ThisExpression",
            "start": 927,
            "end": 931
          },
          {
            "type": "Literal",
            "start": 933,
            "end": 936,
            "value": "x"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 940,
      "end": 977,
      "expression": {
        "type": "CallExpression",
        "start": 940,
        "end": 976,
        "callee": {
          "type": "MemberExpression",
          "start": 940,
          "end": 956,
          "object": {
            "type": "Identifier",
            "start": 940,
            "end": 946,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 947,
            "end": 956,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "Identifier",
            "start": 957,
            "end": 964,
            "name": "initial"
          },
          {
            "type": "Identifier",
            "start": 966,
            "end": 975,
            "name": "undefined"
          }
        ],
        "optional": false
      }
    }
  ],
  "sourceType": "script"
}