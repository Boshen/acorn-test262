{
  "type": "Program",
  "start": 0,
  "end": 1736,
  "body": [
    {
      "type": "VariableDeclaration",
      "start": 827,
      "end": 845,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 831,
          "end": 844,
          "id": {
            "type": "Identifier",
            "start": 831,
            "end": 840,
            "name": "callCount"
          },
          "init": {
            "type": "Literal",
            "start": 843,
            "end": 844,
            "value": 0,
            "raw": "0"
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "ExpressionStatement",
      "start": 970,
      "end": 1063,
      "expression": {
        "type": "CallExpression",
        "start": 970,
        "end": 1062,
        "callee": {
          "type": "MemberExpression",
          "start": 970,
          "end": 991,
          "object": {
            "type": "Identifier",
            "start": 970,
            "end": 976,
            "name": "Object"
          },
          "property": {
            "type": "Identifier",
            "start": 977,
            "end": 991,
            "name": "defineProperty"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "Identifier",
            "start": 992,
            "end": 1002,
            "name": "globalThis"
          },
          {
            "type": "Literal",
            "start": 1004,
            "end": 1012,
            "value": "assert",
            "raw": "'assert'"
          },
          {
            "type": "ObjectExpression",
            "start": 1014,
            "end": 1061,
            "properties": [
              {
                "type": "Property",
                "start": 1018,
                "end": 1059,
                "method": false,
                "shorthand": false,
                "computed": false,
                "key": {
                  "type": "Identifier",
                  "start": 1018,
                  "end": 1021,
                  "name": "get"
                },
                "value": {
                  "type": "FunctionExpression",
                  "start": 1023,
                  "end": 1059,
                  "id": null,
                  "expression": false,
                  "generator": false,
                  "async": false,
                  "params": [],
                  "body": {
                    "type": "BlockStatement",
                    "start": 1034,
                    "end": 1059,
                    "body": [
                      {
                        "type": "ExpressionStatement",
                        "start": 1040,
                        "end": 1055,
                        "expression": {
                          "type": "AssignmentExpression",
                          "start": 1040,
                          "end": 1054,
                          "operator": "+=",
                          "left": {
                            "type": "Identifier",
                            "start": 1040,
                            "end": 1049,
                            "name": "callCount"
                          },
                          "right": {
                            "type": "Literal",
                            "start": 1053,
                            "end": 1054,
                            "value": 1,
                            "raw": "1"
                          }
                        }
                      }
                    ]
                  }
                },
                "kind": "init"
              }
            ]
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ImportDeclaration",
      "start": 1065,
      "end": 1112,
      "specifiers": [
        {
          "type": "ImportDefaultSpecifier",
          "start": 1072,
          "end": 1073,
          "local": {
            "type": "Identifier",
            "start": 1072,
            "end": 1073,
            "name": "x"
          }
        }
      ],
      "source": {
        "type": "Literal",
        "start": 1079,
        "end": 1112,
        "value": "./import-assertion-1_FIXTURE.js",
        "raw": "'./import-assertion-1_FIXTURE.js'"
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1113,
      "end": 1119,
      "expression": {
        "type": "Identifier",
        "start": 1113,
        "end": 1119,
        "name": "assert"
      }
    },
    {
      "type": "BlockStatement",
      "start": 1120,
      "end": 1132,
      "body": [
        {
          "type": "LabeledStatement",
          "start": 1121,
          "end": 1131,
          "body": {
            "type": "ExpressionStatement",
            "start": 1129,
            "end": 1131,
            "expression": {
              "type": "Literal",
              "start": 1129,
              "end": 1131,
              "value": "",
              "raw": "''"
            }
          },
          "label": {
            "type": "Identifier",
            "start": 1121,
            "end": 1128,
            "name": "test262"
          }
        }
      ]
    },
    {
      "type": "EmptyStatement",
      "start": 1132,
      "end": 1133
    },
    {
      "type": "IfStatement",
      "start": 1135,
      "end": 1220,
      "test": {
        "type": "BinaryExpression",
        "start": 1139,
        "end": 1150,
        "left": {
          "type": "Identifier",
          "start": 1139,
          "end": 1140,
          "name": "x"
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 1145,
          "end": 1150,
          "value": 262.1,
          "raw": "262.1"
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 1152,
        "end": 1220,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1156,
            "end": 1218,
            "argument": {
              "type": "Literal",
              "start": 1162,
              "end": 1217,
              "value": "module value incorrectly imported - first declaration",
              "raw": "'module value incorrectly imported - first declaration'"
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 1222,
      "end": 1312,
      "test": {
        "type": "BinaryExpression",
        "start": 1226,
        "end": 1241,
        "left": {
          "type": "Identifier",
          "start": 1226,
          "end": 1235,
          "name": "callCount"
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 1240,
          "end": 1241,
          "value": 1,
          "raw": "1"
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 1243,
        "end": 1312,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1247,
            "end": 1310,
            "argument": {
              "type": "Literal",
              "start": 1253,
              "end": 1309,
              "value": "IdentifierReference not recognized - first declaration",
              "raw": "'IdentifierReference not recognized - first declaration'"
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "ImportDeclaration",
      "start": 1314,
      "end": 1354,
      "specifiers": [],
      "source": {
        "type": "Literal",
        "start": 1321,
        "end": 1354,
        "value": "./import-assertion-2_FIXTURE.js",
        "raw": "'./import-assertion-2_FIXTURE.js'"
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1355,
      "end": 1361,
      "expression": {
        "type": "Identifier",
        "start": 1355,
        "end": 1361,
        "name": "assert"
      }
    },
    {
      "type": "BlockStatement",
      "start": 1362,
      "end": 1374,
      "body": [
        {
          "type": "LabeledStatement",
          "start": 1363,
          "end": 1373,
          "body": {
            "type": "ExpressionStatement",
            "start": 1371,
            "end": 1373,
            "expression": {
              "type": "Literal",
              "start": 1371,
              "end": 1373,
              "value": "",
              "raw": "''"
            }
          },
          "label": {
            "type": "Identifier",
            "start": 1363,
            "end": 1370,
            "name": "test262"
          }
        }
      ]
    },
    {
      "type": "EmptyStatement",
      "start": 1374,
      "end": 1375
    },
    {
      "type": "IfStatement",
      "start": 1377,
      "end": 1480,
      "test": {
        "type": "BinaryExpression",
        "start": 1381,
        "end": 1409,
        "left": {
          "type": "MemberExpression",
          "start": 1381,
          "end": 1399,
          "object": {
            "type": "Identifier",
            "start": 1381,
            "end": 1391,
            "name": "globalThis"
          },
          "property": {
            "type": "Identifier",
            "start": 1392,
            "end": 1399,
            "name": "test262"
          },
          "computed": false,
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 1404,
          "end": 1409,
          "value": 262.2,
          "raw": "262.2"
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 1411,
        "end": 1480,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1415,
            "end": 1478,
            "argument": {
              "type": "Literal",
              "start": 1421,
              "end": 1477,
              "value": "module value incorrectly imported - second declaration",
              "raw": "'module value incorrectly imported - second declaration'"
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 1482,
      "end": 1573,
      "test": {
        "type": "BinaryExpression",
        "start": 1486,
        "end": 1501,
        "left": {
          "type": "Identifier",
          "start": 1486,
          "end": 1495,
          "name": "callCount"
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 1500,
          "end": 1501,
          "value": 2,
          "raw": "2"
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 1503,
        "end": 1573,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1507,
            "end": 1571,
            "argument": {
              "type": "Literal",
              "start": 1513,
              "end": 1570,
              "value": "IdentifierReference not recognized - second declaration",
              "raw": "'IdentifierReference not recognized - second declaration'"
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "ExportAllDeclaration",
      "start": 1575,
      "end": 1622,
      "exported": null,
      "source": {
        "type": "Literal",
        "start": 1589,
        "end": 1622,
        "value": "./import-assertion-3_FIXTURE.js",
        "raw": "'./import-assertion-3_FIXTURE.js'"
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1623,
      "end": 1629,
      "expression": {
        "type": "Identifier",
        "start": 1623,
        "end": 1629,
        "name": "assert"
      }
    },
    {
      "type": "BlockStatement",
      "start": 1630,
      "end": 1642,
      "body": [
        {
          "type": "LabeledStatement",
          "start": 1631,
          "end": 1641,
          "body": {
            "type": "ExpressionStatement",
            "start": 1639,
            "end": 1641,
            "expression": {
              "type": "Literal",
              "start": 1639,
              "end": 1641,
              "value": "",
              "raw": "''"
            }
          },
          "label": {
            "type": "Identifier",
            "start": 1631,
            "end": 1638,
            "name": "test262"
          }
        }
      ]
    },
    {
      "type": "EmptyStatement",
      "start": 1642,
      "end": 1643
    },
    {
      "type": "IfStatement",
      "start": 1645,
      "end": 1735,
      "test": {
        "type": "BinaryExpression",
        "start": 1649,
        "end": 1664,
        "left": {
          "type": "Identifier",
          "start": 1649,
          "end": 1658,
          "name": "callCount"
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 1663,
          "end": 1664,
          "value": 3,
          "raw": "3"
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 1666,
        "end": 1735,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1670,
            "end": 1733,
            "argument": {
              "type": "Literal",
              "start": 1676,
              "end": 1732,
              "value": "IdentifierReference not recognized - third declaration",
              "raw": "'IdentifierReference not recognized - third declaration'"
            }
          }
        ]
      },
      "alternate": null
    }
  ],
  "sourceType": "module"
}