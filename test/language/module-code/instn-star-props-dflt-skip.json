{
  "type": "Program",
  "start": 0,
  "end": 1453,
  "body": [
    {
      "type": "ImportDeclaration",
      "start": 1036,
      "end": 1112,
      "specifiers": [
        {
          "type": "ImportNamespaceSpecifier",
          "start": 1043,
          "end": 1053,
          "local": {
            "type": "Identifier",
            "start": 1048,
            "end": 1053,
            "name": "named"
          }
        }
      ],
      "source": {
        "type": "Literal",
        "start": 1059,
        "end": 1111,
        "value": "./instn-star-props-dflt-skip-star-named_FIXTURE.js"
      },
      "attributes": []
    },
    {
      "type": "ImportDeclaration",
      "start": 1113,
      "end": 1193,
      "specifiers": [
        {
          "type": "ImportNamespaceSpecifier",
          "start": 1120,
          "end": 1135,
          "local": {
            "type": "Identifier",
            "start": 1125,
            "end": 1135,
            "name": "production"
          }
        }
      ],
      "source": {
        "type": "Literal",
        "start": 1141,
        "end": 1192,
        "value": "./instn-star-props-dflt-skip-star-prod_FIXTURE.js"
      },
      "attributes": []
    },
    {
      "type": "ExpressionStatement",
      "start": 1195,
      "end": 1225,
      "expression": {
        "type": "CallExpression",
        "start": 1195,
        "end": 1224,
        "callee": {
          "type": "Identifier",
          "start": 1195,
          "end": 1201,
          "name": "assert"
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 1202,
            "end": 1223,
            "left": {
              "type": "Literal",
              "start": 1202,
              "end": 1214,
              "value": "namedOther"
            },
            "operator": "in",
            "right": {
              "type": "Identifier",
              "start": 1218,
              "end": 1223,
              "name": "named"
            }
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1226,
      "end": 1310,
      "expression": {
        "type": "CallExpression",
        "start": 1226,
        "end": 1309,
        "callee": {
          "type": "MemberExpression",
          "start": 1226,
          "end": 1242,
          "object": {
            "type": "Identifier",
            "start": 1226,
            "end": 1232,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1233,
            "end": 1242,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 1246,
            "end": 1264,
            "left": {
              "type": "Literal",
              "start": 1246,
              "end": 1255,
              "value": "default"
            },
            "operator": "in",
            "right": {
              "type": "Identifier",
              "start": 1259,
              "end": 1264,
              "name": "named"
            }
          },
          {
            "type": "Literal",
            "start": 1266,
            "end": 1271,
            "value": false
          },
          {
            "type": "Literal",
            "start": 1273,
            "end": 1307,
            "value": "default specified via identifier"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1312,
      "end": 1352,
      "expression": {
        "type": "CallExpression",
        "start": 1312,
        "end": 1351,
        "callee": {
          "type": "Identifier",
          "start": 1312,
          "end": 1318,
          "name": "assert"
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 1319,
            "end": 1350,
            "left": {
              "type": "Literal",
              "start": 1319,
              "end": 1336,
              "value": "productionOther"
            },
            "operator": "in",
            "right": {
              "type": "Identifier",
              "start": 1340,
              "end": 1350,
              "name": "production"
            }
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1353,
      "end": 1452,
      "expression": {
        "type": "CallExpression",
        "start": 1353,
        "end": 1451,
        "callee": {
          "type": "MemberExpression",
          "start": 1353,
          "end": 1369,
          "object": {
            "type": "Identifier",
            "start": 1353,
            "end": 1359,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1360,
            "end": 1369,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 1373,
            "end": 1396,
            "left": {
              "type": "Literal",
              "start": 1373,
              "end": 1382,
              "value": "default"
            },
            "operator": "in",
            "right": {
              "type": "Identifier",
              "start": 1386,
              "end": 1396,
              "name": "production"
            }
          },
          {
            "type": "Literal",
            "start": 1398,
            "end": 1403,
            "value": false
          },
          {
            "type": "Literal",
            "start": 1405,
            "end": 1449,
            "value": "default specified via dedicated production"
          }
        ],
        "optional": false
      }
    }
  ],
  "sourceType": "module"
}