{
  "type": "Program",
  "start": 0,
  "end": 1207,
  "body": [
    {
      "type": "VariableDeclaration",
      "start": 1013,
      "end": 1056,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 1017,
          "end": 1055,
          "id": {
            "type": "Identifier",
            "start": 1017,
            "end": 1023,
            "name": "result"
          },
          "init": {
            "type": "CallExpression",
            "start": 1026,
            "end": 1055,
            "callee": {
              "type": "Identifier",
              "start": 1026,
              "end": 1030,
              "name": "eval"
            },
            "arguments": [
              {
                "type": "Literal",
                "start": 1031,
                "end": 1054,
                "value": "function fn() {}/1/g;"
              }
            ],
            "optional": false
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "ExpressionStatement",
      "start": 1058,
      "end": 1124,
      "expression": {
        "type": "CallExpression",
        "start": 1058,
        "end": 1123,
        "callee": {
          "type": "MemberExpression",
          "start": 1058,
          "end": 1074,
          "object": {
            "type": "Identifier",
            "start": 1058,
            "end": 1064,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1065,
            "end": 1074,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "CallExpression",
            "start": 1075,
            "end": 1104,
            "callee": {
              "type": "MemberExpression",
              "start": 1075,
              "end": 1096,
              "object": {
                "type": "Identifier",
                "start": 1075,
                "end": 1081,
                "name": "Object"
              },
              "property": {
                "type": "Identifier",
                "start": 1082,
                "end": 1096,
                "name": "getPrototypeOf"
              },
              "computed": false,
              "optional": false
            },
            "arguments": [
              {
                "type": "Identifier",
                "start": 1097,
                "end": 1103,
                "name": "result"
              }
            ],
            "optional": false
          },
          {
            "type": "MemberExpression",
            "start": 1106,
            "end": 1122,
            "object": {
              "type": "Identifier",
              "start": 1106,
              "end": 1112,
              "name": "RegExp"
            },
            "property": {
              "type": "Identifier",
              "start": 1113,
              "end": 1122,
              "name": "prototype"
            },
            "computed": false,
            "optional": false
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1125,
      "end": 1161,
      "expression": {
        "type": "CallExpression",
        "start": 1125,
        "end": 1160,
        "callee": {
          "type": "MemberExpression",
          "start": 1125,
          "end": 1141,
          "object": {
            "type": "Identifier",
            "start": 1125,
            "end": 1131,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1132,
            "end": 1141,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "MemberExpression",
            "start": 1142,
            "end": 1154,
            "object": {
              "type": "Identifier",
              "start": 1142,
              "end": 1148,
              "name": "result"
            },
            "property": {
              "type": "Identifier",
              "start": 1149,
              "end": 1154,
              "name": "flags"
            },
            "computed": false,
            "optional": false
          },
          {
            "type": "Literal",
            "start": 1156,
            "end": 1159,
            "value": "g"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1162,
      "end": 1206,
      "expression": {
        "type": "CallExpression",
        "start": 1162,
        "end": 1205,
        "callee": {
          "type": "MemberExpression",
          "start": 1162,
          "end": 1178,
          "object": {
            "type": "Identifier",
            "start": 1162,
            "end": 1168,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1169,
            "end": 1178,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "CallExpression",
            "start": 1179,
            "end": 1196,
            "callee": {
              "type": "MemberExpression",
              "start": 1179,
              "end": 1194,
              "object": {
                "type": "Identifier",
                "start": 1179,
                "end": 1185,
                "name": "result"
              },
              "property": {
                "type": "Identifier",
                "start": 1186,
                "end": 1194,
                "name": "toString"
              },
              "computed": false,
              "optional": false
            },
            "arguments": [],
            "optional": false
          },
          {
            "type": "Literal",
            "start": 1198,
            "end": 1204,
            "value": "/1/g"
          }
        ],
        "optional": false
      }
    }
  ],
  "sourceType": "script"
}