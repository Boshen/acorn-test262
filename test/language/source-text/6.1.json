{
  "type": "Program",
  "start": 0,
  "end": 704,
  "body": [
    {
      "type": "VariableDeclaration",
      "start": 219,
      "end": 238,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 223,
          "end": 237,
          "id": {
            "type": "Identifier",
            "start": 223,
            "end": 228,
            "name": "chars"
          },
          "init": {
            "type": "Literal",
            "start": 231,
            "end": 237,
            "value": "𐒠"
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "IfStatement",
      "start": 291,
      "end": 435,
      "test": {
        "type": "BinaryExpression",
        "start": 294,
        "end": 312,
        "left": {
          "type": "MemberExpression",
          "start": 294,
          "end": 306,
          "object": {
            "type": "Identifier",
            "start": 294,
            "end": 299,
            "name": "chars"
          },
          "property": {
            "type": "Identifier",
            "start": 300,
            "end": 306,
            "name": "length"
          },
          "computed": false,
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 311,
          "end": 312,
          "value": 2
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 314,
        "end": 435,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 320,
            "end": 433,
            "argument": {
              "type": "NewExpression",
              "start": 326,
              "end": 432,
              "callee": {
                "type": "Identifier",
                "start": 330,
                "end": 342,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 343,
                  "end": 431,
                  "value": "A character outside the BMP (Unicode CodePoint > 0xFFFF) should consume two code units"
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 436,
      "end": 568,
      "test": {
        "type": "BinaryExpression",
        "start": 439,
        "end": 469,
        "left": {
          "type": "CallExpression",
          "start": 439,
          "end": 458,
          "callee": {
            "type": "MemberExpression",
            "start": 439,
            "end": 455,
            "object": {
              "type": "Identifier",
              "start": 439,
              "end": 444,
              "name": "chars"
            },
            "property": {
              "type": "Identifier",
              "start": 445,
              "end": 455,
              "name": "charCodeAt"
            },
            "computed": false,
            "optional": false
          },
          "arguments": [
            {
              "type": "Literal",
              "start": 456,
              "end": 457,
              "value": 0
            }
          ],
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 463,
          "end": 469,
          "value": 55297
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 471,
        "end": 568,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 477,
            "end": 566,
            "argument": {
              "type": "NewExpression",
              "start": 483,
              "end": 565,
              "callee": {
                "type": "Identifier",
                "start": 487,
                "end": 499,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 500,
                  "end": 564,
                  "value": "First code unit of surrogate pair for 0x104A0 should be 0xD801"
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 570,
      "end": 703,
      "test": {
        "type": "BinaryExpression",
        "start": 573,
        "end": 603,
        "left": {
          "type": "CallExpression",
          "start": 573,
          "end": 592,
          "callee": {
            "type": "MemberExpression",
            "start": 573,
            "end": 589,
            "object": {
              "type": "Identifier",
              "start": 573,
              "end": 578,
              "name": "chars"
            },
            "property": {
              "type": "Identifier",
              "start": 579,
              "end": 589,
              "name": "charCodeAt"
            },
            "computed": false,
            "optional": false
          },
          "arguments": [
            {
              "type": "Literal",
              "start": 590,
              "end": 591,
              "value": 1
            }
          ],
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 597,
          "end": 603,
          "value": 56480
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 605,
        "end": 703,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 611,
            "end": 701,
            "argument": {
              "type": "NewExpression",
              "start": 617,
              "end": 700,
              "callee": {
                "type": "Identifier",
                "start": 621,
                "end": 633,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 634,
                  "end": 699,
                  "value": "Second code unit of surrogate pair for 0x104A0 should be 0xDCA0"
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    }
  ],
  "sourceType": "script"
}