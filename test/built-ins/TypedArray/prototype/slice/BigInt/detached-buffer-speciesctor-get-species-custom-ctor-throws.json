{
  "type": "Program",
  "start": 0,
  "end": 1682,
  "body": [
    {
      "type": "ExpressionStatement",
      "start": 1211,
      "end": 1681,
      "expression": {
        "type": "CallExpression",
        "start": 1211,
        "end": 1680,
        "callee": {
          "type": "Identifier",
          "start": 1211,
          "end": 1247,
          "name": "testWithBigIntTypedArrayConstructors"
        },
        "arguments": [
          {
            "type": "FunctionExpression",
            "start": 1248,
            "end": 1679,
            "id": null,
            "expression": false,
            "generator": false,
            "async": false,
            "params": [
              {
                "type": "Identifier",
                "start": 1257,
                "end": 1259,
                "name": "TA"
              }
            ],
            "body": {
              "type": "BlockStatement",
              "start": 1261,
              "end": 1679,
              "body": [
                {
                  "type": "VariableDeclaration",
                  "start": 1265,
                  "end": 1281,
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "start": 1269,
                      "end": 1280,
                      "id": {
                        "type": "Identifier",
                        "start": 1269,
                        "end": 1276,
                        "name": "counter"
                      },
                      "init": {
                        "type": "Literal",
                        "start": 1279,
                        "end": 1280,
                        "value": 0
                      }
                    }
                  ],
                  "kind": "let"
                },
                {
                  "type": "VariableDeclaration",
                  "start": 1284,
                  "end": 1307,
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "start": 1288,
                      "end": 1306,
                      "id": {
                        "type": "Identifier",
                        "start": 1288,
                        "end": 1294,
                        "name": "sample"
                      },
                      "init": {
                        "type": "NewExpression",
                        "start": 1297,
                        "end": 1306,
                        "callee": {
                          "type": "Identifier",
                          "start": 1301,
                          "end": 1303,
                          "name": "TA"
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "start": 1304,
                            "end": 1305,
                            "value": 1
                          }
                        ]
                      }
                    }
                  ],
                  "kind": "let"
                },
                {
                  "type": "ExpressionStatement",
                  "start": 1311,
                  "end": 1335,
                  "expression": {
                    "type": "AssignmentExpression",
                    "start": 1311,
                    "end": 1334,
                    "operator": "=",
                    "left": {
                      "type": "MemberExpression",
                      "start": 1311,
                      "end": 1329,
                      "object": {
                        "type": "Identifier",
                        "start": 1311,
                        "end": 1317,
                        "name": "sample"
                      },
                      "property": {
                        "type": "Identifier",
                        "start": 1318,
                        "end": 1329,
                        "name": "constructor"
                      },
                      "computed": false,
                      "optional": false
                    },
                    "right": {
                      "type": "ObjectExpression",
                      "start": 1332,
                      "end": 1334,
                      "properties": []
                    }
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "start": 1338,
                  "end": 1494,
                  "expression": {
                    "type": "AssignmentExpression",
                    "start": 1338,
                    "end": 1493,
                    "operator": "=",
                    "left": {
                      "type": "MemberExpression",
                      "start": 1338,
                      "end": 1372,
                      "object": {
                        "type": "MemberExpression",
                        "start": 1338,
                        "end": 1356,
                        "object": {
                          "type": "Identifier",
                          "start": 1338,
                          "end": 1344,
                          "name": "sample"
                        },
                        "property": {
                          "type": "Identifier",
                          "start": 1345,
                          "end": 1356,
                          "name": "constructor"
                        },
                        "computed": false,
                        "optional": false
                      },
                      "property": {
                        "type": "MemberExpression",
                        "start": 1357,
                        "end": 1371,
                        "object": {
                          "type": "Identifier",
                          "start": 1357,
                          "end": 1363,
                          "name": "Symbol"
                        },
                        "property": {
                          "type": "Identifier",
                          "start": 1364,
                          "end": 1371,
                          "name": "species"
                        },
                        "computed": false,
                        "optional": false
                      },
                      "computed": true,
                      "optional": false
                    },
                    "right": {
                      "type": "FunctionExpression",
                      "start": 1375,
                      "end": 1493,
                      "id": null,
                      "expression": false,
                      "generator": false,
                      "async": false,
                      "params": [
                        {
                          "type": "Identifier",
                          "start": 1384,
                          "end": 1389,
                          "name": "count"
                        }
                      ],
                      "body": {
                        "type": "BlockStatement",
                        "start": 1391,
                        "end": 1493,
                        "body": [
                          {
                            "type": "VariableDeclaration",
                            "start": 1397,
                            "end": 1423,
                            "declarations": [
                              {
                                "type": "VariableDeclarator",
                                "start": 1401,
                                "end": 1422,
                                "id": {
                                  "type": "Identifier",
                                  "start": 1401,
                                  "end": 1406,
                                  "name": "other"
                                },
                                "init": {
                                  "type": "NewExpression",
                                  "start": 1409,
                                  "end": 1422,
                                  "callee": {
                                    "type": "Identifier",
                                    "start": 1413,
                                    "end": 1415,
                                    "name": "TA"
                                  },
                                  "arguments": [
                                    {
                                      "type": "Identifier",
                                      "start": 1416,
                                      "end": 1421,
                                      "name": "count"
                                    }
                                  ]
                                }
                              }
                            ],
                            "kind": "let"
                          },
                          {
                            "type": "ExpressionStatement",
                            "start": 1428,
                            "end": 1438,
                            "expression": {
                              "type": "UpdateExpression",
                              "start": 1428,
                              "end": 1437,
                              "operator": "++",
                              "prefix": false,
                              "argument": {
                                "type": "Identifier",
                                "start": 1428,
                                "end": 1435,
                                "name": "counter"
                              }
                            }
                          },
                          {
                            "type": "ExpressionStatement",
                            "start": 1443,
                            "end": 1471,
                            "expression": {
                              "type": "CallExpression",
                              "start": 1443,
                              "end": 1470,
                              "callee": {
                                "type": "Identifier",
                                "start": 1443,
                                "end": 1456,
                                "name": "$DETACHBUFFER"
                              },
                              "arguments": [
                                {
                                  "type": "MemberExpression",
                                  "start": 1457,
                                  "end": 1469,
                                  "object": {
                                    "type": "Identifier",
                                    "start": 1457,
                                    "end": 1462,
                                    "name": "other"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "start": 1463,
                                    "end": 1469,
                                    "name": "buffer"
                                  },
                                  "computed": false,
                                  "optional": false
                                }
                              ],
                              "optional": false
                            }
                          },
                          {
                            "type": "ReturnStatement",
                            "start": 1476,
                            "end": 1489,
                            "argument": {
                              "type": "Identifier",
                              "start": 1483,
                              "end": 1488,
                              "name": "other"
                            }
                          }
                        ]
                      }
                    }
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "start": 1498,
                  "end": 1613,
                  "expression": {
                    "type": "CallExpression",
                    "start": 1498,
                    "end": 1612,
                    "callee": {
                      "type": "MemberExpression",
                      "start": 1498,
                      "end": 1511,
                      "object": {
                        "type": "Identifier",
                        "start": 1498,
                        "end": 1504,
                        "name": "assert"
                      },
                      "property": {
                        "type": "Identifier",
                        "start": 1505,
                        "end": 1511,
                        "name": "throws"
                      },
                      "computed": false,
                      "optional": false
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "start": 1512,
                        "end": 1521,
                        "name": "TypeError"
                      },
                      {
                        "type": "FunctionExpression",
                        "start": 1523,
                        "end": 1574,
                        "id": null,
                        "expression": false,
                        "generator": false,
                        "async": false,
                        "params": [],
                        "body": {
                          "type": "BlockStatement",
                          "start": 1534,
                          "end": 1574,
                          "body": [
                            {
                              "type": "ExpressionStatement",
                              "start": 1540,
                              "end": 1550,
                              "expression": {
                                "type": "UpdateExpression",
                                "start": 1540,
                                "end": 1549,
                                "operator": "++",
                                "prefix": false,
                                "argument": {
                                  "type": "Identifier",
                                  "start": 1540,
                                  "end": 1547,
                                  "name": "counter"
                                }
                              }
                            },
                            {
                              "type": "ExpressionStatement",
                              "start": 1555,
                              "end": 1570,
                              "expression": {
                                "type": "CallExpression",
                                "start": 1555,
                                "end": 1569,
                                "callee": {
                                  "type": "MemberExpression",
                                  "start": 1555,
                                  "end": 1567,
                                  "object": {
                                    "type": "Identifier",
                                    "start": 1555,
                                    "end": 1561,
                                    "name": "sample"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "start": 1562,
                                    "end": 1567,
                                    "name": "slice"
                                  },
                                  "computed": false,
                                  "optional": false
                                },
                                "arguments": [],
                                "optional": false
                              }
                            }
                          ]
                        }
                      },
                      {
                        "type": "Literal",
                        "start": 1576,
                        "end": 1611,
                        "value": "`sample.slice()` throws TypeError"
                      }
                    ],
                    "optional": false
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "start": 1617,
                  "end": 1677,
                  "expression": {
                    "type": "CallExpression",
                    "start": 1617,
                    "end": 1676,
                    "callee": {
                      "type": "MemberExpression",
                      "start": 1617,
                      "end": 1633,
                      "object": {
                        "type": "Identifier",
                        "start": 1617,
                        "end": 1623,
                        "name": "assert"
                      },
                      "property": {
                        "type": "Identifier",
                        "start": 1624,
                        "end": 1633,
                        "name": "sameValue"
                      },
                      "computed": false,
                      "optional": false
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "start": 1634,
                        "end": 1641,
                        "name": "counter"
                      },
                      {
                        "type": "Literal",
                        "start": 1643,
                        "end": 1644,
                        "value": 2
                      },
                      {
                        "type": "Literal",
                        "start": 1646,
                        "end": 1675,
                        "value": "The value of `counter` is 2"
                      }
                    ],
                    "optional": false
                  }
                }
              ]
            }
          }
        ],
        "optional": false
      }
    }
  ],
  "sourceType": "script"
}