{
  "type": "Program",
  "start": 0,
  "end": 1237,
  "body": [
    {
      "type": "VariableDeclaration",
      "start": 790,
      "end": 813,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 794,
          "end": 812,
          "id": {
            "type": "Identifier",
            "start": 794,
            "end": 805,
            "name": "returnValue"
          },
          "init": {
            "type": "Literal",
            "start": 808,
            "end": 812,
            "value": null
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "VariableDeclaration",
      "start": 814,
      "end": 849,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 818,
          "end": 848,
          "id": {
            "type": "Identifier",
            "start": 818,
            "end": 829,
            "name": "nonThenable"
          },
          "init": {
            "type": "ObjectExpression",
            "start": 832,
            "end": 848,
            "properties": [
              {
                "type": "Property",
                "start": 836,
                "end": 846,
                "method": false,
                "shorthand": false,
                "computed": false,
                "key": {
                  "type": "Identifier",
                  "start": 836,
                  "end": 840,
                  "name": "then"
                },
                "value": {
                  "type": "Literal",
                  "start": 842,
                  "end": 846,
                  "value": null
                },
                "kind": "init"
              }
            ]
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "VariableDeclaration",
      "start": 850,
      "end": 937,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 854,
          "end": 936,
          "id": {
            "type": "Identifier",
            "start": 854,
            "end": 861,
            "name": "promise"
          },
          "init": {
            "type": "NewExpression",
            "start": 864,
            "end": 936,
            "callee": {
              "type": "Identifier",
              "start": 868,
              "end": 875,
              "name": "Promise"
            },
            "arguments": [
              {
                "type": "FunctionExpression",
                "start": 876,
                "end": 935,
                "id": null,
                "expression": false,
                "generator": false,
                "async": false,
                "params": [
                  {
                    "type": "Identifier",
                    "start": 885,
                    "end": 892,
                    "name": "resolve"
                  }
                ],
                "body": {
                  "type": "BlockStatement",
                  "start": 894,
                  "end": 935,
                  "body": [
                    {
                      "type": "ExpressionStatement",
                      "start": 898,
                      "end": 933,
                      "expression": {
                        "type": "AssignmentExpression",
                        "start": 898,
                        "end": 932,
                        "operator": "=",
                        "left": {
                          "type": "Identifier",
                          "start": 898,
                          "end": 909,
                          "name": "returnValue"
                        },
                        "right": {
                          "type": "CallExpression",
                          "start": 912,
                          "end": 932,
                          "callee": {
                            "type": "Identifier",
                            "start": 912,
                            "end": 919,
                            "name": "resolve"
                          },
                          "arguments": [
                            {
                              "type": "Identifier",
                              "start": 920,
                              "end": 931,
                              "name": "nonThenable"
                            }
                          ],
                          "optional": false
                        }
                      }
                    }
                  ]
                }
              }
            ]
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "ExpressionStatement",
      "start": 939,
      "end": 1006,
      "expression": {
        "type": "CallExpression",
        "start": 939,
        "end": 1005,
        "callee": {
          "type": "MemberExpression",
          "start": 939,
          "end": 955,
          "object": {
            "type": "Identifier",
            "start": 939,
            "end": 945,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 946,
            "end": 955,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "Identifier",
            "start": 956,
            "end": 967,
            "name": "returnValue"
          },
          {
            "type": "Identifier",
            "start": 969,
            "end": 978,
            "name": "undefined"
          },
          {
            "type": "Literal",
            "start": 980,
            "end": 1004,
            "value": "\"resolve\" return value"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1008,
      "end": 1236,
      "expression": {
        "type": "CallExpression",
        "start": 1008,
        "end": 1235,
        "callee": {
          "type": "MemberExpression",
          "start": 1008,
          "end": 1020,
          "object": {
            "type": "Identifier",
            "start": 1008,
            "end": 1015,
            "name": "promise"
          },
          "property": {
            "type": "Identifier",
            "start": 1016,
            "end": 1020,
            "name": "then"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "FunctionExpression",
            "start": 1021,
            "end": 1170,
            "id": null,
            "expression": false,
            "generator": false,
            "async": false,
            "params": [
              {
                "type": "Identifier",
                "start": 1030,
                "end": 1035,
                "name": "value"
              }
            ],
            "body": {
              "type": "BlockStatement",
              "start": 1037,
              "end": 1170,
              "body": [
                {
                  "type": "IfStatement",
                  "start": 1041,
                  "end": 1156,
                  "test": {
                    "type": "BinaryExpression",
                    "start": 1045,
                    "end": 1066,
                    "left": {
                      "type": "Identifier",
                      "start": 1045,
                      "end": 1050,
                      "name": "value"
                    },
                    "operator": "!==",
                    "right": {
                      "type": "Identifier",
                      "start": 1055,
                      "end": 1066,
                      "name": "nonThenable"
                    }
                  },
                  "consequent": {
                    "type": "BlockStatement",
                    "start": 1068,
                    "end": 1156,
                    "body": [
                      {
                        "type": "ExpressionStatement",
                        "start": 1074,
                        "end": 1140,
                        "expression": {
                          "type": "CallExpression",
                          "start": 1074,
                          "end": 1139,
                          "callee": {
                            "type": "Identifier",
                            "start": 1074,
                            "end": 1079,
                            "name": "$DONE"
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "start": 1080,
                              "end": 1138,
                              "value": "The promise should be fulfilled with the provided value."
                            }
                          ],
                          "optional": false
                        }
                      },
                      {
                        "type": "ReturnStatement",
                        "start": 1145,
                        "end": 1152,
                        "argument": null
                      }
                    ]
                  },
                  "alternate": null
                },
                {
                  "type": "ExpressionStatement",
                  "start": 1160,
                  "end": 1168,
                  "expression": {
                    "type": "CallExpression",
                    "start": 1160,
                    "end": 1167,
                    "callee": {
                      "type": "Identifier",
                      "start": 1160,
                      "end": 1165,
                      "name": "$DONE"
                    },
                    "arguments": [],
                    "optional": false
                  }
                }
              ]
            }
          },
          {
            "type": "FunctionExpression",
            "start": 1172,
            "end": 1234,
            "id": null,
            "expression": false,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "start": 1183,
              "end": 1234,
              "body": [
                {
                  "type": "ExpressionStatement",
                  "start": 1187,
                  "end": 1232,
                  "expression": {
                    "type": "CallExpression",
                    "start": 1187,
                    "end": 1231,
                    "callee": {
                      "type": "Identifier",
                      "start": 1187,
                      "end": 1192,
                      "name": "$DONE"
                    },
                    "arguments": [
                      {
                        "type": "Literal",
                        "start": 1193,
                        "end": 1230,
                        "value": "The promise should not be rejected."
                      }
                    ],
                    "optional": false
                  }
                }
              ]
            }
          }
        ],
        "optional": false
      }
    }
  ],
  "sourceType": "script"
}