{
  "type": "Program",
  "start": 0,
  "end": 1326,
  "body": [
    {
      "type": "VariableDeclaration",
      "start": 984,
      "end": 1042,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 988,
          "end": 1041,
          "id": {
            "type": "Identifier",
            "start": 988,
            "end": 990,
            "name": "p1"
          },
          "init": {
            "type": "NewExpression",
            "start": 993,
            "end": 1041,
            "callee": {
              "type": "Identifier",
              "start": 997,
              "end": 1004,
              "name": "Promise"
            },
            "arguments": [
              {
                "type": "FunctionExpression",
                "start": 1005,
                "end": 1040,
                "id": null,
                "expression": false,
                "generator": false,
                "async": false,
                "params": [
                  {
                    "type": "Identifier",
                    "start": 1014,
                    "end": 1015,
                    "name": "_"
                  },
                  {
                    "type": "Identifier",
                    "start": 1017,
                    "end": 1023,
                    "name": "reject"
                  }
                ],
                "body": {
                  "type": "BlockStatement",
                  "start": 1025,
                  "end": 1040,
                  "body": [
                    {
                      "type": "ExpressionStatement",
                      "start": 1029,
                      "end": 1038,
                      "expression": {
                        "type": "CallExpression",
                        "start": 1029,
                        "end": 1037,
                        "callee": {
                          "type": "Identifier",
                          "start": 1029,
                          "end": 1035,
                          "name": "reject"
                        },
                        "arguments": [],
                        "optional": false
                      }
                    }
                  ]
                }
              }
            ]
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "VariableDeclaration",
      "start": 1043,
      "end": 1050,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 1047,
          "end": 1049,
          "id": {
            "type": "Identifier",
            "start": 1047,
            "end": 1049,
            "name": "p2"
          },
          "init": null
        }
      ],
      "kind": "var"
    },
    {
      "type": "ExpressionStatement",
      "start": 1052,
      "end": 1109,
      "expression": {
        "type": "AssignmentExpression",
        "start": 1052,
        "end": 1108,
        "operator": "=",
        "left": {
          "type": "Identifier",
          "start": 1052,
          "end": 1054,
          "name": "p2"
        },
        "right": {
          "type": "CallExpression",
          "start": 1057,
          "end": 1108,
          "callee": {
            "type": "MemberExpression",
            "start": 1057,
            "end": 1064,
            "object": {
              "type": "Identifier",
              "start": 1057,
              "end": 1059,
              "name": "p1"
            },
            "property": {
              "type": "Identifier",
              "start": 1060,
              "end": 1064,
              "name": "then"
            },
            "computed": false,
            "optional": false
          },
          "arguments": [
            {
              "type": "FunctionExpression",
              "start": 1065,
              "end": 1078,
              "id": null,
              "expression": false,
              "generator": false,
              "async": false,
              "params": [],
              "body": {
                "type": "BlockStatement",
                "start": 1076,
                "end": 1078,
                "body": []
              }
            },
            {
              "type": "FunctionExpression",
              "start": 1080,
              "end": 1107,
              "id": null,
              "expression": false,
              "generator": false,
              "async": false,
              "params": [],
              "body": {
                "type": "BlockStatement",
                "start": 1091,
                "end": 1107,
                "body": [
                  {
                    "type": "ReturnStatement",
                    "start": 1095,
                    "end": 1105,
                    "argument": {
                      "type": "Literal",
                      "start": 1102,
                      "end": 1104,
                      "value": 23
                    }
                  }
                ]
              }
            }
          ],
          "optional": false
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1111,
      "end": 1325,
      "expression": {
        "type": "CallExpression",
        "start": 1111,
        "end": 1324,
        "callee": {
          "type": "MemberExpression",
          "start": 1111,
          "end": 1118,
          "object": {
            "type": "Identifier",
            "start": 1111,
            "end": 1113,
            "name": "p2"
          },
          "property": {
            "type": "Identifier",
            "start": 1114,
            "end": 1118,
            "name": "then"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "FunctionExpression",
            "start": 1119,
            "end": 1259,
            "id": null,
            "expression": false,
            "generator": false,
            "async": false,
            "params": [
              {
                "type": "Identifier",
                "start": 1128,
                "end": 1133,
                "name": "value"
              }
            ],
            "body": {
              "type": "BlockStatement",
              "start": 1135,
              "end": 1259,
              "body": [
                {
                  "type": "IfStatement",
                  "start": 1139,
                  "end": 1245,
                  "test": {
                    "type": "BinaryExpression",
                    "start": 1143,
                    "end": 1155,
                    "left": {
                      "type": "Identifier",
                      "start": 1143,
                      "end": 1148,
                      "name": "value"
                    },
                    "operator": "!==",
                    "right": {
                      "type": "Literal",
                      "start": 1153,
                      "end": 1155,
                      "value": 23
                    }
                  },
                  "consequent": {
                    "type": "BlockStatement",
                    "start": 1157,
                    "end": 1245,
                    "body": [
                      {
                        "type": "ExpressionStatement",
                        "start": 1163,
                        "end": 1229,
                        "expression": {
                          "type": "CallExpression",
                          "start": 1163,
                          "end": 1228,
                          "callee": {
                            "type": "Identifier",
                            "start": 1163,
                            "end": 1168,
                            "name": "$DONE"
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "start": 1169,
                              "end": 1227,
                              "value": "The promise should be fulfilled with the provided value."
                            }
                          ],
                          "optional": false
                        }
                      },
                      {
                        "type": "ReturnStatement",
                        "start": 1234,
                        "end": 1241,
                        "argument": null
                      }
                    ]
                  },
                  "alternate": null
                },
                {
                  "type": "ExpressionStatement",
                  "start": 1249,
                  "end": 1257,
                  "expression": {
                    "type": "CallExpression",
                    "start": 1249,
                    "end": 1256,
                    "callee": {
                      "type": "Identifier",
                      "start": 1249,
                      "end": 1254,
                      "name": "$DONE"
                    },
                    "arguments": [],
                    "optional": false
                  }
                }
              ]
            }
          },
          {
            "type": "FunctionExpression",
            "start": 1261,
            "end": 1323,
            "id": null,
            "expression": false,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "start": 1272,
              "end": 1323,
              "body": [
                {
                  "type": "ExpressionStatement",
                  "start": 1276,
                  "end": 1321,
                  "expression": {
                    "type": "CallExpression",
                    "start": 1276,
                    "end": 1320,
                    "callee": {
                      "type": "Identifier",
                      "start": 1276,
                      "end": 1281,
                      "name": "$DONE"
                    },
                    "arguments": [
                      {
                        "type": "Literal",
                        "start": 1282,
                        "end": 1319,
                        "value": "The promise should not be rejected."
                      }
                    ],
                    "optional": false
                  }
                }
              ]
            }
          }
        ],
        "optional": false
      }
    }
  ],
  "sourceType": "script"
}