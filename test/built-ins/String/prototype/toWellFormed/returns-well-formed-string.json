{
  "type": "Program",
  "start": 0,
  "end": 2722,
  "body": [
    {
      "type": "ExpressionStatement",
      "start": 894,
      "end": 961,
      "expression": {
        "type": "CallExpression",
        "start": 894,
        "end": 960,
        "callee": {
          "type": "MemberExpression",
          "start": 894,
          "end": 910,
          "object": {
            "type": "Identifier",
            "start": 894,
            "end": 900,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 901,
            "end": 910,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "UnaryExpression",
            "start": 911,
            "end": 947,
            "operator": "typeof",
            "prefix": true,
            "argument": {
              "type": "MemberExpression",
              "start": 918,
              "end": 947,
              "object": {
                "type": "MemberExpression",
                "start": 918,
                "end": 934,
                "object": {
                  "type": "Identifier",
                  "start": 918,
                  "end": 924,
                  "name": "String"
                },
                "property": {
                  "type": "Identifier",
                  "start": 925,
                  "end": 934,
                  "name": "prototype"
                },
                "computed": false,
                "optional": false
              },
              "property": {
                "type": "Identifier",
                "start": 935,
                "end": 947,
                "name": "toWellFormed"
              },
              "computed": false,
              "optional": false
            }
          },
          {
            "type": "Literal",
            "start": 949,
            "end": 959,
            "value": "function"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "VariableDeclaration",
      "start": 963,
      "end": 994,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 967,
          "end": 993,
          "id": {
            "type": "Identifier",
            "start": 967,
            "end": 982,
            "name": "replacementChar"
          },
          "init": {
            "type": "Literal",
            "start": 985,
            "end": 993,
            "value": "ï¿½"
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "VariableDeclaration",
      "start": 995,
      "end": 1021,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 999,
          "end": 1020,
          "id": {
            "type": "Identifier",
            "start": 999,
            "end": 1009,
            "name": "leadingPoo"
          },
          "init": {
            "type": "Literal",
            "start": 1012,
            "end": 1020,
            "value": "\ud83d"
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "VariableDeclaration",
      "start": 1022,
      "end": 1049,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 1026,
          "end": 1048,
          "id": {
            "type": "Identifier",
            "start": 1026,
            "end": 1037,
            "name": "trailingPoo"
          },
          "init": {
            "type": "Literal",
            "start": 1040,
            "end": 1048,
            "value": "\udca9"
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "VariableDeclaration",
      "start": 1050,
      "end": 1090,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 1054,
          "end": 1089,
          "id": {
            "type": "Identifier",
            "start": 1054,
            "end": 1062,
            "name": "wholePoo"
          },
          "init": {
            "type": "BinaryExpression",
            "start": 1065,
            "end": 1089,
            "left": {
              "type": "Identifier",
              "start": 1065,
              "end": 1075,
              "name": "leadingPoo"
            },
            "operator": "+",
            "right": {
              "type": "Identifier",
              "start": 1078,
              "end": 1089,
              "name": "trailingPoo"
            }
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "ExpressionStatement",
      "start": 1092,
      "end": 1310,
      "expression": {
        "type": "CallExpression",
        "start": 1092,
        "end": 1309,
        "callee": {
          "type": "MemberExpression",
          "start": 1092,
          "end": 1108,
          "object": {
            "type": "Identifier",
            "start": 1092,
            "end": 1098,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1099,
            "end": 1108,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "CallExpression",
            "start": 1112,
            "end": 1170,
            "callee": {
              "type": "MemberExpression",
              "start": 1112,
              "end": 1168,
              "object": {
                "type": "ParenthesizedExpression",
                "start": 1112,
                "end": 1155,
                "expression": {
                  "type": "BinaryExpression",
                  "start": 1113,
                  "end": 1154,
                  "left": {
                    "type": "BinaryExpression",
                    "start": 1113,
                    "end": 1148,
                    "left": {
                      "type": "BinaryExpression",
                      "start": 1113,
                      "end": 1135,
                      "left": {
                        "type": "BinaryExpression",
                        "start": 1113,
                        "end": 1129,
                        "left": {
                          "type": "Literal",
                          "start": 1113,
                          "end": 1116,
                          "value": "a"
                        },
                        "operator": "+",
                        "right": {
                          "type": "Identifier",
                          "start": 1119,
                          "end": 1129,
                          "name": "leadingPoo"
                        }
                      },
                      "operator": "+",
                      "right": {
                        "type": "Literal",
                        "start": 1132,
                        "end": 1135,
                        "value": "c"
                      }
                    },
                    "operator": "+",
                    "right": {
                      "type": "Identifier",
                      "start": 1138,
                      "end": 1148,
                      "name": "leadingPoo"
                    }
                  },
                  "operator": "+",
                  "right": {
                    "type": "Literal",
                    "start": 1151,
                    "end": 1154,
                    "value": "e"
                  }
                }
              },
              "property": {
                "type": "Identifier",
                "start": 1156,
                "end": 1168,
                "name": "toWellFormed"
              },
              "computed": false,
              "optional": false
            },
            "arguments": [],
            "optional": false
          },
          {
            "type": "BinaryExpression",
            "start": 1174,
            "end": 1225,
            "left": {
              "type": "BinaryExpression",
              "start": 1174,
              "end": 1219,
              "left": {
                "type": "BinaryExpression",
                "start": 1174,
                "end": 1201,
                "left": {
                  "type": "BinaryExpression",
                  "start": 1174,
                  "end": 1195,
                  "left": {
                    "type": "Literal",
                    "start": 1174,
                    "end": 1177,
                    "value": "a"
                  },
                  "operator": "+",
                  "right": {
                    "type": "Identifier",
                    "start": 1180,
                    "end": 1195,
                    "name": "replacementChar"
                  }
                },
                "operator": "+",
                "right": {
                  "type": "Literal",
                  "start": 1198,
                  "end": 1201,
                  "value": "c"
                }
              },
              "operator": "+",
              "right": {
                "type": "Identifier",
                "start": 1204,
                "end": 1219,
                "name": "replacementChar"
              }
            },
            "operator": "+",
            "right": {
              "type": "Literal",
              "start": 1222,
              "end": 1225,
              "value": "e"
            }
          },
          {
            "type": "Literal",
            "start": 1229,
            "end": 1307,
            "value": "lone leading surrogates are replaced with the expected replacement character"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1311,
      "end": 1532,
      "expression": {
        "type": "CallExpression",
        "start": 1311,
        "end": 1531,
        "callee": {
          "type": "MemberExpression",
          "start": 1311,
          "end": 1327,
          "object": {
            "type": "Identifier",
            "start": 1311,
            "end": 1317,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1318,
            "end": 1327,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "CallExpression",
            "start": 1331,
            "end": 1391,
            "callee": {
              "type": "MemberExpression",
              "start": 1331,
              "end": 1389,
              "object": {
                "type": "ParenthesizedExpression",
                "start": 1331,
                "end": 1376,
                "expression": {
                  "type": "BinaryExpression",
                  "start": 1332,
                  "end": 1375,
                  "left": {
                    "type": "BinaryExpression",
                    "start": 1332,
                    "end": 1369,
                    "left": {
                      "type": "BinaryExpression",
                      "start": 1332,
                      "end": 1355,
                      "left": {
                        "type": "BinaryExpression",
                        "start": 1332,
                        "end": 1349,
                        "left": {
                          "type": "Literal",
                          "start": 1332,
                          "end": 1335,
                          "value": "a"
                        },
                        "operator": "+",
                        "right": {
                          "type": "Identifier",
                          "start": 1338,
                          "end": 1349,
                          "name": "trailingPoo"
                        }
                      },
                      "operator": "+",
                      "right": {
                        "type": "Literal",
                        "start": 1352,
                        "end": 1355,
                        "value": "c"
                      }
                    },
                    "operator": "+",
                    "right": {
                      "type": "Identifier",
                      "start": 1358,
                      "end": 1369,
                      "name": "trailingPoo"
                    }
                  },
                  "operator": "+",
                  "right": {
                    "type": "Literal",
                    "start": 1372,
                    "end": 1375,
                    "value": "e"
                  }
                }
              },
              "property": {
                "type": "Identifier",
                "start": 1377,
                "end": 1389,
                "name": "toWellFormed"
              },
              "computed": false,
              "optional": false
            },
            "arguments": [],
            "optional": false
          },
          {
            "type": "BinaryExpression",
            "start": 1395,
            "end": 1446,
            "left": {
              "type": "BinaryExpression",
              "start": 1395,
              "end": 1440,
              "left": {
                "type": "BinaryExpression",
                "start": 1395,
                "end": 1422,
                "left": {
                  "type": "BinaryExpression",
                  "start": 1395,
                  "end": 1416,
                  "left": {
                    "type": "Literal",
                    "start": 1395,
                    "end": 1398,
                    "value": "a"
                  },
                  "operator": "+",
                  "right": {
                    "type": "Identifier",
                    "start": 1401,
                    "end": 1416,
                    "name": "replacementChar"
                  }
                },
                "operator": "+",
                "right": {
                  "type": "Literal",
                  "start": 1419,
                  "end": 1422,
                  "value": "c"
                }
              },
              "operator": "+",
              "right": {
                "type": "Identifier",
                "start": 1425,
                "end": 1440,
                "name": "replacementChar"
              }
            },
            "operator": "+",
            "right": {
              "type": "Literal",
              "start": 1443,
              "end": 1446,
              "value": "e"
            }
          },
          {
            "type": "Literal",
            "start": 1450,
            "end": 1529,
            "value": "lone trailing surrogates are replaced with the expected replacement character"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1533,
      "end": 1737,
      "expression": {
        "type": "CallExpression",
        "start": 1533,
        "end": 1737,
        "callee": {
          "type": "MemberExpression",
          "start": 1533,
          "end": 1549,
          "object": {
            "type": "Identifier",
            "start": 1533,
            "end": 1539,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1540,
            "end": 1549,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "CallExpression",
            "start": 1553,
            "end": 1606,
            "callee": {
              "type": "MemberExpression",
              "start": 1553,
              "end": 1604,
              "object": {
                "type": "ParenthesizedExpression",
                "start": 1553,
                "end": 1591,
                "expression": {
                  "type": "BinaryExpression",
                  "start": 1554,
                  "end": 1590,
                  "left": {
                    "type": "BinaryExpression",
                    "start": 1554,
                    "end": 1584,
                    "left": {
                      "type": "BinaryExpression",
                      "start": 1554,
                      "end": 1571,
                      "left": {
                        "type": "Literal",
                        "start": 1554,
                        "end": 1557,
                        "value": "a"
                      },
                      "operator": "+",
                      "right": {
                        "type": "Identifier",
                        "start": 1560,
                        "end": 1571,
                        "name": "trailingPoo"
                      }
                    },
                    "operator": "+",
                    "right": {
                      "type": "Identifier",
                      "start": 1574,
                      "end": 1584,
                      "name": "leadingPoo"
                    }
                  },
                  "operator": "+",
                  "right": {
                    "type": "Literal",
                    "start": 1587,
                    "end": 1590,
                    "value": "d"
                  }
                }
              },
              "property": {
                "type": "Identifier",
                "start": 1592,
                "end": 1604,
                "name": "toWellFormed"
              },
              "computed": false,
              "optional": false
            },
            "arguments": [],
            "optional": false
          },
          {
            "type": "BinaryExpression",
            "start": 1610,
            "end": 1655,
            "left": {
              "type": "BinaryExpression",
              "start": 1610,
              "end": 1649,
              "left": {
                "type": "BinaryExpression",
                "start": 1610,
                "end": 1631,
                "left": {
                  "type": "Literal",
                  "start": 1610,
                  "end": 1613,
                  "value": "a"
                },
                "operator": "+",
                "right": {
                  "type": "Identifier",
                  "start": 1616,
                  "end": 1631,
                  "name": "replacementChar"
                }
              },
              "operator": "+",
              "right": {
                "type": "Identifier",
                "start": 1634,
                "end": 1649,
                "name": "replacementChar"
              }
            },
            "operator": "+",
            "right": {
              "type": "Literal",
              "start": 1652,
              "end": 1655,
              "value": "d"
            }
          },
          {
            "type": "Literal",
            "start": 1659,
            "end": 1735,
            "value": "a wrong-ordered surrogate pair is replaced with two replacement characters"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1739,
      "end": 1861,
      "expression": {
        "type": "CallExpression",
        "start": 1739,
        "end": 1860,
        "callee": {
          "type": "MemberExpression",
          "start": 1739,
          "end": 1755,
          "object": {
            "type": "Identifier",
            "start": 1739,
            "end": 1745,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1746,
            "end": 1755,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "CallExpression",
            "start": 1756,
            "end": 1779,
            "callee": {
              "type": "MemberExpression",
              "start": 1756,
              "end": 1777,
              "object": {
                "type": "Literal",
                "start": 1756,
                "end": 1764,
                "value": "að©c"
              },
              "property": {
                "type": "Identifier",
                "start": 1765,
                "end": 1777,
                "name": "toWellFormed"
              },
              "computed": false,
              "optional": false
            },
            "arguments": [],
            "optional": false
          },
          {
            "type": "Literal",
            "start": 1781,
            "end": 1789,
            "value": "að©c"
          },
          {
            "type": "Literal",
            "start": 1791,
            "end": 1859,
            "value": "a surrogate pair using a literal code point is already well-formed"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1862,
      "end": 2000,
      "expression": {
        "type": "CallExpression",
        "start": 1862,
        "end": 1999,
        "callee": {
          "type": "MemberExpression",
          "start": 1862,
          "end": 1878,
          "object": {
            "type": "Identifier",
            "start": 1862,
            "end": 1868,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1869,
            "end": 1878,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "CallExpression",
            "start": 1879,
            "end": 1910,
            "callee": {
              "type": "MemberExpression",
              "start": 1879,
              "end": 1908,
              "object": {
                "type": "Literal",
                "start": 1879,
                "end": 1895,
                "value": "að©c"
              },
              "property": {
                "type": "Identifier",
                "start": 1896,
                "end": 1908,
                "name": "toWellFormed"
              },
              "computed": false,
              "optional": false
            },
            "arguments": [],
            "optional": false
          },
          {
            "type": "Literal",
            "start": 1912,
            "end": 1928,
            "value": "að©c"
          },
          {
            "type": "Literal",
            "start": 1930,
            "end": 1998,
            "value": "a surrogate pair formed by escape sequences is already well-formed"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 2001,
      "end": 2162,
      "expression": {
        "type": "CallExpression",
        "start": 2001,
        "end": 2161,
        "callee": {
          "type": "MemberExpression",
          "start": 2001,
          "end": 2017,
          "object": {
            "type": "Identifier",
            "start": 2001,
            "end": 2007,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 2008,
            "end": 2017,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "CallExpression",
            "start": 2018,
            "end": 2071,
            "callee": {
              "type": "MemberExpression",
              "start": 2018,
              "end": 2069,
              "object": {
                "type": "ParenthesizedExpression",
                "start": 2018,
                "end": 2056,
                "expression": {
                  "type": "BinaryExpression",
                  "start": 2019,
                  "end": 2055,
                  "left": {
                    "type": "BinaryExpression",
                    "start": 2019,
                    "end": 2049,
                    "left": {
                      "type": "BinaryExpression",
                      "start": 2019,
                      "end": 2035,
                      "left": {
                        "type": "Literal",
                        "start": 2019,
                        "end": 2022,
                        "value": "a"
                      },
                      "operator": "+",
                      "right": {
                        "type": "Identifier",
                        "start": 2025,
                        "end": 2035,
                        "name": "leadingPoo"
                      }
                    },
                    "operator": "+",
                    "right": {
                      "type": "Identifier",
                      "start": 2038,
                      "end": 2049,
                      "name": "trailingPoo"
                    }
                  },
                  "operator": "+",
                  "right": {
                    "type": "Literal",
                    "start": 2052,
                    "end": 2055,
                    "value": "d"
                  }
                }
              },
              "property": {
                "type": "Identifier",
                "start": 2057,
                "end": 2069,
                "name": "toWellFormed"
              },
              "computed": false,
              "optional": false
            },
            "arguments": [],
            "optional": false
          },
          {
            "type": "BinaryExpression",
            "start": 2073,
            "end": 2093,
            "left": {
              "type": "BinaryExpression",
              "start": 2073,
              "end": 2087,
              "left": {
                "type": "Literal",
                "start": 2073,
                "end": 2076,
                "value": "a"
              },
              "operator": "+",
              "right": {
                "type": "Identifier",
                "start": 2079,
                "end": 2087,
                "name": "wholePoo"
              }
            },
            "operator": "+",
            "right": {
              "type": "Literal",
              "start": 2090,
              "end": 2093,
              "value": "d"
            }
          },
          {
            "type": "Literal",
            "start": 2095,
            "end": 2160,
            "value": "a surrogate pair formed by concatenation is already well-formed"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 2163,
      "end": 2338,
      "expression": {
        "type": "CallExpression",
        "start": 2163,
        "end": 2337,
        "callee": {
          "type": "MemberExpression",
          "start": 2163,
          "end": 2179,
          "object": {
            "type": "Identifier",
            "start": 2163,
            "end": 2169,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 2170,
            "end": 2179,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "CallExpression",
            "start": 2180,
            "end": 2215,
            "callee": {
              "type": "MemberExpression",
              "start": 2180,
              "end": 2213,
              "object": {
                "type": "CallExpression",
                "start": 2180,
                "end": 2200,
                "callee": {
                  "type": "MemberExpression",
                  "start": 2180,
                  "end": 2194,
                  "object": {
                    "type": "Identifier",
                    "start": 2180,
                    "end": 2188,
                    "name": "wholePoo"
                  },
                  "property": {
                    "type": "Identifier",
                    "start": 2189,
                    "end": 2194,
                    "name": "slice"
                  },
                  "computed": false,
                  "optional": false
                },
                "arguments": [
                  {
                    "type": "Literal",
                    "start": 2195,
                    "end": 2196,
                    "value": 0
                  },
                  {
                    "type": "Literal",
                    "start": 2198,
                    "end": 2199,
                    "value": 1
                  }
                ],
                "optional": false
              },
              "property": {
                "type": "Identifier",
                "start": 2201,
                "end": 2213,
                "name": "toWellFormed"
              },
              "computed": false,
              "optional": false
            },
            "arguments": [],
            "optional": false
          },
          {
            "type": "Identifier",
            "start": 2217,
            "end": 2232,
            "name": "replacementChar"
          },
          {
            "type": "Literal",
            "start": 2234,
            "end": 2336,
            "value": "a surrogate pair sliced to the leading surrogate is replaced with the expected replacement character"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 2339,
      "end": 2512,
      "expression": {
        "type": "CallExpression",
        "start": 2339,
        "end": 2511,
        "callee": {
          "type": "MemberExpression",
          "start": 2339,
          "end": 2355,
          "object": {
            "type": "Identifier",
            "start": 2339,
            "end": 2345,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 2346,
            "end": 2355,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "CallExpression",
            "start": 2356,
            "end": 2388,
            "callee": {
              "type": "MemberExpression",
              "start": 2356,
              "end": 2386,
              "object": {
                "type": "CallExpression",
                "start": 2356,
                "end": 2373,
                "callee": {
                  "type": "MemberExpression",
                  "start": 2356,
                  "end": 2370,
                  "object": {
                    "type": "Identifier",
                    "start": 2356,
                    "end": 2364,
                    "name": "wholePoo"
                  },
                  "property": {
                    "type": "Identifier",
                    "start": 2365,
                    "end": 2370,
                    "name": "slice"
                  },
                  "computed": false,
                  "optional": false
                },
                "arguments": [
                  {
                    "type": "Literal",
                    "start": 2371,
                    "end": 2372,
                    "value": 1
                  }
                ],
                "optional": false
              },
              "property": {
                "type": "Identifier",
                "start": 2374,
                "end": 2386,
                "name": "toWellFormed"
              },
              "computed": false,
              "optional": false
            },
            "arguments": [],
            "optional": false
          },
          {
            "type": "Identifier",
            "start": 2390,
            "end": 2405,
            "name": "replacementChar"
          },
          {
            "type": "Literal",
            "start": 2407,
            "end": 2510,
            "value": "a surrogate pair sliced to the trailing surrogate is replaced with the expected replacement character"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 2513,
      "end": 2602,
      "expression": {
        "type": "CallExpression",
        "start": 2513,
        "end": 2601,
        "callee": {
          "type": "MemberExpression",
          "start": 2513,
          "end": 2529,
          "object": {
            "type": "Identifier",
            "start": 2513,
            "end": 2519,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 2520,
            "end": 2529,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "CallExpression",
            "start": 2530,
            "end": 2550,
            "callee": {
              "type": "MemberExpression",
              "start": 2530,
              "end": 2548,
              "object": {
                "type": "Literal",
                "start": 2530,
                "end": 2535,
                "value": "abc"
              },
              "property": {
                "type": "Identifier",
                "start": 2536,
                "end": 2548,
                "name": "toWellFormed"
              },
              "computed": false,
              "optional": false
            },
            "arguments": [],
            "optional": false
          },
          {
            "type": "Literal",
            "start": 2552,
            "end": 2557,
            "value": "abc"
          },
          {
            "type": "Literal",
            "start": 2559,
            "end": 2600,
            "value": "a latin-1 string is already well-formed"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 2603,
      "end": 2721,
      "expression": {
        "type": "CallExpression",
        "start": 2603,
        "end": 2720,
        "callee": {
          "type": "MemberExpression",
          "start": 2603,
          "end": 2619,
          "object": {
            "type": "Identifier",
            "start": 2603,
            "end": 2609,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 2610,
            "end": 2619,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "CallExpression",
            "start": 2620,
            "end": 2645,
            "callee": {
              "type": "MemberExpression",
              "start": 2620,
              "end": 2643,
              "object": {
                "type": "Literal",
                "start": 2620,
                "end": 2630,
                "value": "aâ¨c"
              },
              "property": {
                "type": "Identifier",
                "start": 2631,
                "end": 2643,
                "name": "toWellFormed"
              },
              "computed": false,
              "optional": false
            },
            "arguments": [],
            "optional": false
          },
          {
            "type": "Literal",
            "start": 2647,
            "end": 2657,
            "value": "aâ¨c"
          },
          {
            "type": "Literal",
            "start": 2659,
            "end": 2719,
            "value": "a string with a non-ASCII character is already well-formed"
          }
        ],
        "optional": false
      }
    }
  ],
  "sourceType": "script"
}