{
  "type": "Program",
  "start": 0,
  "end": 1056,
  "body": [
    {
      "type": "VariableDeclaration",
      "start": 355,
      "end": 401,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 361,
          "end": 400,
          "id": {
            "type": "Identifier",
            "start": 361,
            "end": 369,
            "name": "instance"
          },
          "init": {
            "type": "NewExpression",
            "start": 372,
            "end": 400,
            "callee": {
              "type": "MemberExpression",
              "start": 376,
              "end": 393,
              "object": {
                "type": "Identifier",
                "start": 376,
                "end": 384,
                "name": "Temporal"
              },
              "property": {
                "type": "Identifier",
                "start": 385,
                "end": 393,
                "name": "TimeZone"
              },
              "computed": false,
              "optional": false
            },
            "arguments": [
              {
                "type": "Literal",
                "start": 394,
                "end": 399,
                "value": "UTC"
              }
            ]
          }
        }
      ],
      "kind": "const"
    },
    {
      "type": "VariableDeclaration",
      "start": 403,
      "end": 572,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 409,
          "end": 571,
          "id": {
            "type": "Identifier",
            "start": 409,
            "end": 424,
            "name": "rangeErrorTests"
          },
          "init": {
            "type": "ArrayExpression",
            "start": 427,
            "end": 571,
            "elements": [
              {
                "type": "ArrayExpression",
                "start": 431,
                "end": 445,
                "elements": [
                  {
                    "type": "Literal",
                    "start": 432,
                    "end": 436,
                    "value": null
                  },
                  {
                    "type": "Literal",
                    "start": 438,
                    "end": 444,
                    "value": "null"
                  }
                ]
              },
              {
                "type": "ArrayExpression",
                "start": 449,
                "end": 466,
                "elements": [
                  {
                    "type": "Literal",
                    "start": 450,
                    "end": 454,
                    "value": true
                  },
                  {
                    "type": "Literal",
                    "start": 456,
                    "end": 465,
                    "value": "boolean"
                  }
                ]
              },
              {
                "type": "ArrayExpression",
                "start": 470,
                "end": 490,
                "elements": [
                  {
                    "type": "Literal",
                    "start": 471,
                    "end": 473,
                    "value": ""
                  },
                  {
                    "type": "Literal",
                    "start": 475,
                    "end": 489,
                    "value": "empty string"
                  }
                ]
              },
              {
                "type": "ArrayExpression",
                "start": 494,
                "end": 550,
                "elements": [
                  {
                    "type": "Literal",
                    "start": 495,
                    "end": 496,
                    "value": 1
                  },
                  {
                    "type": "Literal",
                    "start": 498,
                    "end": 549,
                    "value": "number that doesn't convert to a valid ISO string"
                  }
                ]
              },
              {
                "type": "ArrayExpression",
                "start": 554,
                "end": 568,
                "elements": [
                  {
                    "type": "Literal",
                    "start": 555,
                    "end": 557,
                    "value": "1n"
                  },
                  {
                    "type": "Literal",
                    "start": 559,
                    "end": 567,
                    "value": "bigint"
                  }
                ]
              }
            ]
          }
        }
      ],
      "kind": "const"
    },
    {
      "type": "ForOfStatement",
      "start": 574,
      "end": 780,
      "await": false,
      "left": {
        "type": "VariableDeclaration",
        "start": 579,
        "end": 603,
        "declarations": [
          {
            "type": "VariableDeclarator",
            "start": 585,
            "end": 603,
            "id": {
              "type": "ArrayPattern",
              "start": 585,
              "end": 603,
              "elements": [
                {
                  "type": "Identifier",
                  "start": 586,
                  "end": 589,
                  "name": "arg"
                },
                {
                  "type": "Identifier",
                  "start": 591,
                  "end": 602,
                  "name": "description"
                }
              ]
            },
            "init": null
          }
        ],
        "kind": "const"
      },
      "right": {
        "type": "Identifier",
        "start": 607,
        "end": 622,
        "name": "rangeErrorTests"
      },
      "body": {
        "type": "BlockStatement",
        "start": 624,
        "end": 780,
        "body": [
          {
            "type": "ExpressionStatement",
            "start": 628,
            "end": 778,
            "expression": {
              "type": "CallExpression",
              "start": 628,
              "end": 777,
              "callee": {
                "type": "MemberExpression",
                "start": 628,
                "end": 641,
                "object": {
                  "type": "Identifier",
                  "start": 628,
                  "end": 634,
                  "name": "assert"
                },
                "property": {
                  "type": "Identifier",
                  "start": 635,
                  "end": 641,
                  "name": "throws"
                },
                "computed": false,
                "optional": false
              },
              "arguments": [
                {
                  "type": "Identifier",
                  "start": 642,
                  "end": 652,
                  "name": "RangeError"
                },
                {
                  "type": "ArrowFunctionExpression",
                  "start": 654,
                  "end": 719,
                  "id": null,
                  "expression": true,
                  "generator": false,
                  "async": false,
                  "params": [],
                  "body": {
                    "type": "CallExpression",
                    "start": 660,
                    "end": 719,
                    "callee": {
                      "type": "MemberExpression",
                      "start": 660,
                      "end": 688,
                      "object": {
                        "type": "Identifier",
                        "start": 660,
                        "end": 668,
                        "name": "instance"
                      },
                      "property": {
                        "type": "Identifier",
                        "start": 669,
                        "end": 688,
                        "name": "getPlainDateTimeFor"
                      },
                      "computed": false,
                      "optional": false
                    },
                    "arguments": [
                      {
                        "type": "NewExpression",
                        "start": 689,
                        "end": 713,
                        "callee": {
                          "type": "MemberExpression",
                          "start": 693,
                          "end": 709,
                          "object": {
                            "type": "Identifier",
                            "start": 693,
                            "end": 701,
                            "name": "Temporal"
                          },
                          "property": {
                            "type": "Identifier",
                            "start": 702,
                            "end": 709,
                            "name": "Instant"
                          },
                          "computed": false,
                          "optional": false
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "start": 710,
                            "end": 712,
                            "value": "0n"
                          }
                        ]
                      },
                      {
                        "type": "Identifier",
                        "start": 715,
                        "end": 718,
                        "name": "arg"
                      }
                    ],
                    "optional": false
                  }
                },
                {
                  "type": "TemplateLiteral",
                  "start": 721,
                  "end": 776,
                  "expressions": [
                    {
                      "type": "Identifier",
                      "start": 724,
                      "end": 735,
                      "name": "description"
                    }
                  ],
                  "quasis": [
                    {
                      "type": "TemplateElement",
                      "start": 722,
                      "end": 722,
                      "value": {
                        "raw": "",
                        "cooked": ""
                      },
                      "tail": false
                    },
                    {
                      "type": "TemplateElement",
                      "start": 736,
                      "end": 775,
                      "value": {
                        "raw": " does not convert to a valid ISO string",
                        "cooked": " does not convert to a valid ISO string"
                      },
                      "tail": true
                    }
                  ]
                }
              ],
              "optional": false
            }
          }
        ]
      }
    },
    {
      "type": "VariableDeclaration",
      "start": 782,
      "end": 833,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 788,
          "end": 832,
          "id": {
            "type": "Identifier",
            "start": 788,
            "end": 802,
            "name": "typeErrorTests"
          },
          "init": {
            "type": "ArrayExpression",
            "start": 805,
            "end": 832,
            "elements": [
              {
                "type": "ArrayExpression",
                "start": 809,
                "end": 829,
                "elements": [
                  {
                    "type": "CallExpression",
                    "start": 810,
                    "end": 818,
                    "callee": {
                      "type": "Identifier",
                      "start": 810,
                      "end": 816,
                      "name": "Symbol"
                    },
                    "arguments": [],
                    "optional": false
                  },
                  {
                    "type": "Literal",
                    "start": 820,
                    "end": 828,
                    "value": "symbol"
                  }
                ]
              }
            ]
          }
        }
      ],
      "kind": "const"
    },
    {
      "type": "ForOfStatement",
      "start": 835,
      "end": 1055,
      "await": false,
      "left": {
        "type": "VariableDeclaration",
        "start": 840,
        "end": 864,
        "declarations": [
          {
            "type": "VariableDeclarator",
            "start": 846,
            "end": 864,
            "id": {
              "type": "ArrayPattern",
              "start": 846,
              "end": 864,
              "elements": [
                {
                  "type": "Identifier",
                  "start": 847,
                  "end": 850,
                  "name": "arg"
                },
                {
                  "type": "Identifier",
                  "start": 852,
                  "end": 863,
                  "name": "description"
                }
              ]
            },
            "init": null
          }
        ],
        "kind": "const"
      },
      "right": {
        "type": "Identifier",
        "start": 868,
        "end": 882,
        "name": "typeErrorTests"
      },
      "body": {
        "type": "BlockStatement",
        "start": 884,
        "end": 1055,
        "body": [
          {
            "type": "ExpressionStatement",
            "start": 888,
            "end": 1053,
            "expression": {
              "type": "CallExpression",
              "start": 888,
              "end": 1052,
              "callee": {
                "type": "MemberExpression",
                "start": 888,
                "end": 901,
                "object": {
                  "type": "Identifier",
                  "start": 888,
                  "end": 894,
                  "name": "assert"
                },
                "property": {
                  "type": "Identifier",
                  "start": 895,
                  "end": 901,
                  "name": "throws"
                },
                "computed": false,
                "optional": false
              },
              "arguments": [
                {
                  "type": "Identifier",
                  "start": 902,
                  "end": 911,
                  "name": "TypeError"
                },
                {
                  "type": "ArrowFunctionExpression",
                  "start": 913,
                  "end": 978,
                  "id": null,
                  "expression": true,
                  "generator": false,
                  "async": false,
                  "params": [],
                  "body": {
                    "type": "CallExpression",
                    "start": 919,
                    "end": 978,
                    "callee": {
                      "type": "MemberExpression",
                      "start": 919,
                      "end": 947,
                      "object": {
                        "type": "Identifier",
                        "start": 919,
                        "end": 927,
                        "name": "instance"
                      },
                      "property": {
                        "type": "Identifier",
                        "start": 928,
                        "end": 947,
                        "name": "getPlainDateTimeFor"
                      },
                      "computed": false,
                      "optional": false
                    },
                    "arguments": [
                      {
                        "type": "NewExpression",
                        "start": 948,
                        "end": 972,
                        "callee": {
                          "type": "MemberExpression",
                          "start": 952,
                          "end": 968,
                          "object": {
                            "type": "Identifier",
                            "start": 952,
                            "end": 960,
                            "name": "Temporal"
                          },
                          "property": {
                            "type": "Identifier",
                            "start": 961,
                            "end": 968,
                            "name": "Instant"
                          },
                          "computed": false,
                          "optional": false
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "start": 969,
                            "end": 971,
                            "value": "0n"
                          }
                        ]
                      },
                      {
                        "type": "Identifier",
                        "start": 974,
                        "end": 977,
                        "name": "arg"
                      }
                    ],
                    "optional": false
                  }
                },
                {
                  "type": "TemplateLiteral",
                  "start": 980,
                  "end": 1051,
                  "expressions": [
                    {
                      "type": "Identifier",
                      "start": 983,
                      "end": 994,
                      "name": "description"
                    }
                  ],
                  "quasis": [
                    {
                      "type": "TemplateElement",
                      "start": 981,
                      "end": 981,
                      "value": {
                        "raw": "",
                        "cooked": ""
                      },
                      "tail": false
                    },
                    {
                      "type": "TemplateElement",
                      "start": 995,
                      "end": 1050,
                      "value": {
                        "raw": " is not a valid object and does not convert to a string",
                        "cooked": " is not a valid object and does not convert to a string"
                      },
                      "tail": true
                    }
                  ]
                }
              ],
              "optional": false
            }
          }
        ]
      }
    }
  ],
  "sourceType": "script"
}