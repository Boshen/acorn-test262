{
  "type": "Program",
  "start": 0,
  "end": 1789,
  "body": [
    {
      "type": "VariableDeclaration",
      "start": 381,
      "end": 1552,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 387,
          "end": 1551,
          "id": {
            "type": "Identifier",
            "start": 387,
            "end": 401,
            "name": "invalidStrings"
          },
          "init": {
            "type": "ArrayExpression",
            "start": 404,
            "end": 1551,
            "elements": [
              {
                "type": "Literal",
                "start": 434,
                "end": 436,
                "value": ""
              },
              {
                "type": "Literal",
                "start": 440,
                "end": 457,
                "value": "invalid iso8601"
              },
              {
                "type": "Literal",
                "start": 461,
                "end": 480,
                "value": "2020-01-00T00:00Z"
              },
              {
                "type": "Literal",
                "start": 484,
                "end": 503,
                "value": "2020-01-32T00:00Z"
              },
              {
                "type": "Literal",
                "start": 507,
                "end": 526,
                "value": "2020-02-30T00:00Z"
              },
              {
                "type": "Literal",
                "start": 530,
                "end": 549,
                "value": "2021-02-29T00:00Z"
              },
              {
                "type": "Literal",
                "start": 553,
                "end": 572,
                "value": "2020-00-01T00:00Z"
              },
              {
                "type": "Literal",
                "start": 576,
                "end": 595,
                "value": "2020-13-01T00:00Z"
              },
              {
                "type": "Literal",
                "start": 599,
                "end": 613,
                "value": "2020-01-01TZ"
              },
              {
                "type": "Literal",
                "start": 617,
                "end": 639,
                "value": "2020-01-01T25:00:00Z"
              },
              {
                "type": "Literal",
                "start": 643,
                "end": 665,
                "value": "2020-01-01T01:60:00Z"
              },
              {
                "type": "Literal",
                "start": 669,
                "end": 691,
                "value": "2020-01-01T01:60:61Z"
              },
              {
                "type": "Literal",
                "start": 695,
                "end": 718,
                "value": "2020-01-01T00:00Zjunk"
              },
              {
                "type": "Literal",
                "start": 722,
                "end": 748,
                "value": "2020-01-01T00:00:00Zjunk"
              },
              {
                "type": "Literal",
                "start": 752,
                "end": 788,
                "value": "2020-01-01T00:00:00.000000000Zjunk"
              },
              {
                "type": "Literal",
                "start": 792,
                "end": 823,
                "value": "2020-01-01T00:00:00+00:00junk"
              },
              {
                "type": "Literal",
                "start": 827,
                "end": 863,
                "value": "2020-01-01T00:00:00+00:00[UTC]junk"
              },
              {
                "type": "Literal",
                "start": 867,
                "end": 917,
                "value": "2020-01-01T00:00:00+00:00[UTC][u-ca=iso8601]junk"
              },
              {
                "type": "Literal",
                "start": 921,
                "end": 941,
                "value": "02020-01-01T00:00Z"
              },
              {
                "type": "Literal",
                "start": 945,
                "end": 965,
                "value": "2020-001-01T00:00Z"
              },
              {
                "type": "Literal",
                "start": 969,
                "end": 989,
                "value": "2020-01-001T00:00Z"
              },
              {
                "type": "Literal",
                "start": 993,
                "end": 1010,
                "value": "2020-01-01T001Z"
              },
              {
                "type": "Literal",
                "start": 1014,
                "end": 1034,
                "value": "2020-01-01T01:001Z"
              },
              {
                "type": "Literal",
                "start": 1038,
                "end": 1061,
                "value": "2020-01-01T01:01:001Z"
              },
              {
                "type": "Literal",
                "start": 1114,
                "end": 1133,
                "value": "2020-W01-1T00:00Z"
              },
              {
                "type": "Literal",
                "start": 1137,
                "end": 1154,
                "value": "2020-001T00:00Z"
              },
              {
                "type": "Literal",
                "start": 1158,
                "end": 1181,
                "value": "+0002020-01-01T00:00Z"
              },
              {
                "type": "Literal",
                "start": 1264,
                "end": 1273,
                "value": "2020-01"
              },
              {
                "type": "Literal",
                "start": 1277,
                "end": 1289,
                "value": "+002020-01"
              },
              {
                "type": "Literal",
                "start": 1293,
                "end": 1300,
                "value": "01-01"
              },
              {
                "type": "Literal",
                "start": 1304,
                "end": 1314,
                "value": "2020-W01"
              },
              {
                "type": "Literal",
                "start": 1318,
                "end": 1323,
                "value": "P1Y"
              },
              {
                "type": "Literal",
                "start": 1327,
                "end": 1334,
                "value": "-P12Y"
              },
              {
                "type": "Literal",
                "start": 1338,
                "end": 1350,
                "value": "2020-01-01"
              },
              {
                "type": "Literal",
                "start": 1354,
                "end": 1369,
                "value": "2020-01-01T00"
              },
              {
                "type": "Literal",
                "start": 1373,
                "end": 1391,
                "value": "2020-01-01T00:00"
              },
              {
                "type": "Literal",
                "start": 1395,
                "end": 1416,
                "value": "2020-01-01T00:00:00"
              },
              {
                "type": "Literal",
                "start": 1420,
                "end": 1451,
                "value": "2020-01-01T00:00:00.000000000"
              },
              {
                "type": "Literal",
                "start": 1500,
                "end": 1522,
                "value": "-999999-01-01T00:00Z"
              },
              {
                "type": "Literal",
                "start": 1526,
                "end": 1548,
                "value": "+999999-01-01T00:00Z"
              }
            ]
          }
        }
      ],
      "kind": "const"
    },
    {
      "type": "VariableDeclaration",
      "start": 1554,
      "end": 1600,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 1560,
          "end": 1599,
          "id": {
            "type": "Identifier",
            "start": 1560,
            "end": 1568,
            "name": "instance"
          },
          "init": {
            "type": "NewExpression",
            "start": 1571,
            "end": 1599,
            "callee": {
              "type": "MemberExpression",
              "start": 1575,
              "end": 1592,
              "object": {
                "type": "Identifier",
                "start": 1575,
                "end": 1583,
                "name": "Temporal"
              },
              "property": {
                "type": "Identifier",
                "start": 1584,
                "end": 1592,
                "name": "TimeZone"
              },
              "computed": false,
              "optional": false
            },
            "arguments": [
              {
                "type": "Literal",
                "start": 1593,
                "end": 1598,
                "value": "UTC"
              }
            ]
          }
        }
      ],
      "kind": "const"
    },
    {
      "type": "ForOfStatement",
      "start": 1601,
      "end": 1788,
      "await": false,
      "left": {
        "type": "VariableDeclaration",
        "start": 1606,
        "end": 1615,
        "declarations": [
          {
            "type": "VariableDeclarator",
            "start": 1612,
            "end": 1615,
            "id": {
              "type": "Identifier",
              "start": 1612,
              "end": 1615,
              "name": "arg"
            },
            "init": null
          }
        ],
        "kind": "const"
      },
      "right": {
        "type": "Identifier",
        "start": 1619,
        "end": 1633,
        "name": "invalidStrings"
      },
      "body": {
        "type": "BlockStatement",
        "start": 1635,
        "end": 1788,
        "body": [
          {
            "type": "ExpressionStatement",
            "start": 1639,
            "end": 1786,
            "expression": {
              "type": "CallExpression",
              "start": 1639,
              "end": 1785,
              "callee": {
                "type": "MemberExpression",
                "start": 1639,
                "end": 1652,
                "object": {
                  "type": "Identifier",
                  "start": 1639,
                  "end": 1645,
                  "name": "assert"
                },
                "property": {
                  "type": "Identifier",
                  "start": 1646,
                  "end": 1652,
                  "name": "throws"
                },
                "computed": false,
                "optional": false
              },
              "arguments": [
                {
                  "type": "Identifier",
                  "start": 1658,
                  "end": 1668,
                  "name": "RangeError"
                },
                {
                  "type": "ArrowFunctionExpression",
                  "start": 1674,
                  "end": 1717,
                  "id": null,
                  "expression": true,
                  "generator": false,
                  "async": false,
                  "params": [],
                  "body": {
                    "type": "CallExpression",
                    "start": 1680,
                    "end": 1717,
                    "callee": {
                      "type": "MemberExpression",
                      "start": 1680,
                      "end": 1712,
                      "object": {
                        "type": "Identifier",
                        "start": 1680,
                        "end": 1688,
                        "name": "instance"
                      },
                      "property": {
                        "type": "Identifier",
                        "start": 1689,
                        "end": 1712,
                        "name": "getOffsetNanosecondsFor"
                      },
                      "computed": false,
                      "optional": false
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "start": 1713,
                        "end": 1716,
                        "name": "arg"
                      }
                    ],
                    "optional": false
                  }
                },
                {
                  "type": "TemplateLiteral",
                  "start": 1723,
                  "end": 1781,
                  "expressions": [
                    {
                      "type": "Identifier",
                      "start": 1727,
                      "end": 1730,
                      "name": "arg"
                    }
                  ],
                  "quasis": [
                    {
                      "type": "TemplateElement",
                      "start": 1724,
                      "end": 1725,
                      "value": {
                        "raw": "\"",
                        "cooked": "\""
                      },
                      "tail": false
                    },
                    {
                      "type": "TemplateElement",
                      "start": 1731,
                      "end": 1780,
                      "value": {
                        "raw": "\" should not be a valid ISO string for an Instant",
                        "cooked": "\" should not be a valid ISO string for an Instant"
                      },
                      "tail": true
                    }
                  ]
                }
              ],
              "optional": false
            }
          }
        ]
      }
    }
  ],
  "sourceType": "script"
}