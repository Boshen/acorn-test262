{
  "type": "Program",
  "start": 0,
  "end": 1779,
  "body": [
    {
      "type": "VariableDeclaration",
      "start": 376,
      "end": 1547,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 382,
          "end": 1546,
          "id": {
            "type": "Identifier",
            "start": 382,
            "end": 396,
            "name": "invalidStrings"
          },
          "init": {
            "type": "ArrayExpression",
            "start": 399,
            "end": 1546,
            "elements": [
              {
                "type": "Literal",
                "start": 429,
                "end": 431,
                "value": ""
              },
              {
                "type": "Literal",
                "start": 435,
                "end": 452,
                "value": "invalid iso8601"
              },
              {
                "type": "Literal",
                "start": 456,
                "end": 475,
                "value": "2020-01-00T00:00Z"
              },
              {
                "type": "Literal",
                "start": 479,
                "end": 498,
                "value": "2020-01-32T00:00Z"
              },
              {
                "type": "Literal",
                "start": 502,
                "end": 521,
                "value": "2020-02-30T00:00Z"
              },
              {
                "type": "Literal",
                "start": 525,
                "end": 544,
                "value": "2021-02-29T00:00Z"
              },
              {
                "type": "Literal",
                "start": 548,
                "end": 567,
                "value": "2020-00-01T00:00Z"
              },
              {
                "type": "Literal",
                "start": 571,
                "end": 590,
                "value": "2020-13-01T00:00Z"
              },
              {
                "type": "Literal",
                "start": 594,
                "end": 608,
                "value": "2020-01-01TZ"
              },
              {
                "type": "Literal",
                "start": 612,
                "end": 634,
                "value": "2020-01-01T25:00:00Z"
              },
              {
                "type": "Literal",
                "start": 638,
                "end": 660,
                "value": "2020-01-01T01:60:00Z"
              },
              {
                "type": "Literal",
                "start": 664,
                "end": 686,
                "value": "2020-01-01T01:60:61Z"
              },
              {
                "type": "Literal",
                "start": 690,
                "end": 713,
                "value": "2020-01-01T00:00Zjunk"
              },
              {
                "type": "Literal",
                "start": 717,
                "end": 743,
                "value": "2020-01-01T00:00:00Zjunk"
              },
              {
                "type": "Literal",
                "start": 747,
                "end": 783,
                "value": "2020-01-01T00:00:00.000000000Zjunk"
              },
              {
                "type": "Literal",
                "start": 787,
                "end": 818,
                "value": "2020-01-01T00:00:00+00:00junk"
              },
              {
                "type": "Literal",
                "start": 822,
                "end": 858,
                "value": "2020-01-01T00:00:00+00:00[UTC]junk"
              },
              {
                "type": "Literal",
                "start": 862,
                "end": 912,
                "value": "2020-01-01T00:00:00+00:00[UTC][u-ca=iso8601]junk"
              },
              {
                "type": "Literal",
                "start": 916,
                "end": 936,
                "value": "02020-01-01T00:00Z"
              },
              {
                "type": "Literal",
                "start": 940,
                "end": 960,
                "value": "2020-001-01T00:00Z"
              },
              {
                "type": "Literal",
                "start": 964,
                "end": 984,
                "value": "2020-01-001T00:00Z"
              },
              {
                "type": "Literal",
                "start": 988,
                "end": 1005,
                "value": "2020-01-01T001Z"
              },
              {
                "type": "Literal",
                "start": 1009,
                "end": 1029,
                "value": "2020-01-01T01:001Z"
              },
              {
                "type": "Literal",
                "start": 1033,
                "end": 1056,
                "value": "2020-01-01T01:01:001Z"
              },
              {
                "type": "Literal",
                "start": 1109,
                "end": 1128,
                "value": "2020-W01-1T00:00Z"
              },
              {
                "type": "Literal",
                "start": 1132,
                "end": 1149,
                "value": "2020-001T00:00Z"
              },
              {
                "type": "Literal",
                "start": 1153,
                "end": 1176,
                "value": "+0002020-01-01T00:00Z"
              },
              {
                "type": "Literal",
                "start": 1259,
                "end": 1268,
                "value": "2020-01"
              },
              {
                "type": "Literal",
                "start": 1272,
                "end": 1284,
                "value": "+002020-01"
              },
              {
                "type": "Literal",
                "start": 1288,
                "end": 1295,
                "value": "01-01"
              },
              {
                "type": "Literal",
                "start": 1299,
                "end": 1309,
                "value": "2020-W01"
              },
              {
                "type": "Literal",
                "start": 1313,
                "end": 1318,
                "value": "P1Y"
              },
              {
                "type": "Literal",
                "start": 1322,
                "end": 1329,
                "value": "-P12Y"
              },
              {
                "type": "Literal",
                "start": 1333,
                "end": 1345,
                "value": "2020-01-01"
              },
              {
                "type": "Literal",
                "start": 1349,
                "end": 1364,
                "value": "2020-01-01T00"
              },
              {
                "type": "Literal",
                "start": 1368,
                "end": 1386,
                "value": "2020-01-01T00:00"
              },
              {
                "type": "Literal",
                "start": 1390,
                "end": 1411,
                "value": "2020-01-01T00:00:00"
              },
              {
                "type": "Literal",
                "start": 1415,
                "end": 1446,
                "value": "2020-01-01T00:00:00.000000000"
              },
              {
                "type": "Literal",
                "start": 1495,
                "end": 1517,
                "value": "-999999-01-01T00:00Z"
              },
              {
                "type": "Literal",
                "start": 1521,
                "end": 1543,
                "value": "+999999-01-01T00:00Z"
              }
            ]
          }
        }
      ],
      "kind": "const"
    },
    {
      "type": "VariableDeclaration",
      "start": 1549,
      "end": 1595,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 1555,
          "end": 1594,
          "id": {
            "type": "Identifier",
            "start": 1555,
            "end": 1563,
            "name": "instance"
          },
          "init": {
            "type": "NewExpression",
            "start": 1566,
            "end": 1594,
            "callee": {
              "type": "MemberExpression",
              "start": 1570,
              "end": 1587,
              "object": {
                "type": "Identifier",
                "start": 1570,
                "end": 1578,
                "name": "Temporal"
              },
              "property": {
                "type": "Identifier",
                "start": 1579,
                "end": 1587,
                "name": "TimeZone"
              },
              "computed": false,
              "optional": false
            },
            "arguments": [
              {
                "type": "Literal",
                "start": 1588,
                "end": 1593,
                "value": "UTC"
              }
            ]
          }
        }
      ],
      "kind": "const"
    },
    {
      "type": "ForOfStatement",
      "start": 1596,
      "end": 1778,
      "await": false,
      "left": {
        "type": "VariableDeclaration",
        "start": 1601,
        "end": 1610,
        "declarations": [
          {
            "type": "VariableDeclarator",
            "start": 1607,
            "end": 1610,
            "id": {
              "type": "Identifier",
              "start": 1607,
              "end": 1610,
              "name": "arg"
            },
            "init": null
          }
        ],
        "kind": "const"
      },
      "right": {
        "type": "Identifier",
        "start": 1614,
        "end": 1628,
        "name": "invalidStrings"
      },
      "body": {
        "type": "BlockStatement",
        "start": 1630,
        "end": 1778,
        "body": [
          {
            "type": "ExpressionStatement",
            "start": 1634,
            "end": 1776,
            "expression": {
              "type": "CallExpression",
              "start": 1634,
              "end": 1775,
              "callee": {
                "type": "MemberExpression",
                "start": 1634,
                "end": 1647,
                "object": {
                  "type": "Identifier",
                  "start": 1634,
                  "end": 1640,
                  "name": "assert"
                },
                "property": {
                  "type": "Identifier",
                  "start": 1641,
                  "end": 1647,
                  "name": "throws"
                },
                "computed": false,
                "optional": false
              },
              "arguments": [
                {
                  "type": "Identifier",
                  "start": 1653,
                  "end": 1663,
                  "name": "RangeError"
                },
                {
                  "type": "ArrowFunctionExpression",
                  "start": 1669,
                  "end": 1707,
                  "id": null,
                  "expression": true,
                  "generator": false,
                  "async": false,
                  "params": [],
                  "body": {
                    "type": "CallExpression",
                    "start": 1675,
                    "end": 1707,
                    "callee": {
                      "type": "MemberExpression",
                      "start": 1675,
                      "end": 1702,
                      "object": {
                        "type": "Identifier",
                        "start": 1675,
                        "end": 1683,
                        "name": "instance"
                      },
                      "property": {
                        "type": "Identifier",
                        "start": 1684,
                        "end": 1702,
                        "name": "getOffsetStringFor"
                      },
                      "computed": false,
                      "optional": false
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "start": 1703,
                        "end": 1706,
                        "name": "arg"
                      }
                    ],
                    "optional": false
                  }
                },
                {
                  "type": "TemplateLiteral",
                  "start": 1713,
                  "end": 1771,
                  "expressions": [
                    {
                      "type": "Identifier",
                      "start": 1717,
                      "end": 1720,
                      "name": "arg"
                    }
                  ],
                  "quasis": [
                    {
                      "type": "TemplateElement",
                      "start": 1714,
                      "end": 1715,
                      "value": {
                        "raw": "\"",
                        "cooked": "\""
                      },
                      "tail": false
                    },
                    {
                      "type": "TemplateElement",
                      "start": 1721,
                      "end": 1770,
                      "value": {
                        "raw": "\" should not be a valid ISO string for an Instant",
                        "cooked": "\" should not be a valid ISO string for an Instant"
                      },
                      "tail": true
                    }
                  ]
                }
              ],
              "optional": false
            }
          }
        ]
      }
    }
  ],
  "sourceType": "script"
}