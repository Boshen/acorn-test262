{
  "type": "Program",
  "start": 0,
  "end": 1777,
  "body": [
    {
      "type": "VariableDeclaration",
      "start": 375,
      "end": 1546,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 381,
          "end": 1545,
          "id": {
            "type": "Identifier",
            "start": 381,
            "end": 395,
            "name": "invalidStrings"
          },
          "init": {
            "type": "ArrayExpression",
            "start": 398,
            "end": 1545,
            "elements": [
              {
                "type": "Literal",
                "start": 428,
                "end": 430,
                "value": ""
              },
              {
                "type": "Literal",
                "start": 434,
                "end": 451,
                "value": "invalid iso8601"
              },
              {
                "type": "Literal",
                "start": 455,
                "end": 474,
                "value": "2020-01-00T00:00Z"
              },
              {
                "type": "Literal",
                "start": 478,
                "end": 497,
                "value": "2020-01-32T00:00Z"
              },
              {
                "type": "Literal",
                "start": 501,
                "end": 520,
                "value": "2020-02-30T00:00Z"
              },
              {
                "type": "Literal",
                "start": 524,
                "end": 543,
                "value": "2021-02-29T00:00Z"
              },
              {
                "type": "Literal",
                "start": 547,
                "end": 566,
                "value": "2020-00-01T00:00Z"
              },
              {
                "type": "Literal",
                "start": 570,
                "end": 589,
                "value": "2020-13-01T00:00Z"
              },
              {
                "type": "Literal",
                "start": 593,
                "end": 607,
                "value": "2020-01-01TZ"
              },
              {
                "type": "Literal",
                "start": 611,
                "end": 633,
                "value": "2020-01-01T25:00:00Z"
              },
              {
                "type": "Literal",
                "start": 637,
                "end": 659,
                "value": "2020-01-01T01:60:00Z"
              },
              {
                "type": "Literal",
                "start": 663,
                "end": 685,
                "value": "2020-01-01T01:60:61Z"
              },
              {
                "type": "Literal",
                "start": 689,
                "end": 712,
                "value": "2020-01-01T00:00Zjunk"
              },
              {
                "type": "Literal",
                "start": 716,
                "end": 742,
                "value": "2020-01-01T00:00:00Zjunk"
              },
              {
                "type": "Literal",
                "start": 746,
                "end": 782,
                "value": "2020-01-01T00:00:00.000000000Zjunk"
              },
              {
                "type": "Literal",
                "start": 786,
                "end": 817,
                "value": "2020-01-01T00:00:00+00:00junk"
              },
              {
                "type": "Literal",
                "start": 821,
                "end": 857,
                "value": "2020-01-01T00:00:00+00:00[UTC]junk"
              },
              {
                "type": "Literal",
                "start": 861,
                "end": 911,
                "value": "2020-01-01T00:00:00+00:00[UTC][u-ca=iso8601]junk"
              },
              {
                "type": "Literal",
                "start": 915,
                "end": 935,
                "value": "02020-01-01T00:00Z"
              },
              {
                "type": "Literal",
                "start": 939,
                "end": 959,
                "value": "2020-001-01T00:00Z"
              },
              {
                "type": "Literal",
                "start": 963,
                "end": 983,
                "value": "2020-01-001T00:00Z"
              },
              {
                "type": "Literal",
                "start": 987,
                "end": 1004,
                "value": "2020-01-01T001Z"
              },
              {
                "type": "Literal",
                "start": 1008,
                "end": 1028,
                "value": "2020-01-01T01:001Z"
              },
              {
                "type": "Literal",
                "start": 1032,
                "end": 1055,
                "value": "2020-01-01T01:01:001Z"
              },
              {
                "type": "Literal",
                "start": 1108,
                "end": 1127,
                "value": "2020-W01-1T00:00Z"
              },
              {
                "type": "Literal",
                "start": 1131,
                "end": 1148,
                "value": "2020-001T00:00Z"
              },
              {
                "type": "Literal",
                "start": 1152,
                "end": 1175,
                "value": "+0002020-01-01T00:00Z"
              },
              {
                "type": "Literal",
                "start": 1258,
                "end": 1267,
                "value": "2020-01"
              },
              {
                "type": "Literal",
                "start": 1271,
                "end": 1283,
                "value": "+002020-01"
              },
              {
                "type": "Literal",
                "start": 1287,
                "end": 1294,
                "value": "01-01"
              },
              {
                "type": "Literal",
                "start": 1298,
                "end": 1308,
                "value": "2020-W01"
              },
              {
                "type": "Literal",
                "start": 1312,
                "end": 1317,
                "value": "P1Y"
              },
              {
                "type": "Literal",
                "start": 1321,
                "end": 1328,
                "value": "-P12Y"
              },
              {
                "type": "Literal",
                "start": 1332,
                "end": 1344,
                "value": "2020-01-01"
              },
              {
                "type": "Literal",
                "start": 1348,
                "end": 1363,
                "value": "2020-01-01T00"
              },
              {
                "type": "Literal",
                "start": 1367,
                "end": 1385,
                "value": "2020-01-01T00:00"
              },
              {
                "type": "Literal",
                "start": 1389,
                "end": 1410,
                "value": "2020-01-01T00:00:00"
              },
              {
                "type": "Literal",
                "start": 1414,
                "end": 1445,
                "value": "2020-01-01T00:00:00.000000000"
              },
              {
                "type": "Literal",
                "start": 1494,
                "end": 1516,
                "value": "-999999-01-01T00:00Z"
              },
              {
                "type": "Literal",
                "start": 1520,
                "end": 1542,
                "value": "+999999-01-01T00:00Z"
              }
            ]
          }
        }
      ],
      "kind": "const"
    },
    {
      "type": "VariableDeclaration",
      "start": 1548,
      "end": 1594,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 1554,
          "end": 1593,
          "id": {
            "type": "Identifier",
            "start": 1554,
            "end": 1562,
            "name": "instance"
          },
          "init": {
            "type": "NewExpression",
            "start": 1565,
            "end": 1593,
            "callee": {
              "type": "MemberExpression",
              "start": 1569,
              "end": 1586,
              "object": {
                "type": "Identifier",
                "start": 1569,
                "end": 1577,
                "name": "Temporal"
              },
              "property": {
                "type": "Identifier",
                "start": 1578,
                "end": 1586,
                "name": "TimeZone"
              },
              "computed": false,
              "optional": false
            },
            "arguments": [
              {
                "type": "Literal",
                "start": 1587,
                "end": 1592,
                "value": "UTC"
              }
            ]
          }
        }
      ],
      "kind": "const"
    },
    {
      "type": "ForOfStatement",
      "start": 1595,
      "end": 1776,
      "await": false,
      "left": {
        "type": "VariableDeclaration",
        "start": 1600,
        "end": 1609,
        "declarations": [
          {
            "type": "VariableDeclarator",
            "start": 1606,
            "end": 1609,
            "id": {
              "type": "Identifier",
              "start": 1606,
              "end": 1609,
              "name": "arg"
            },
            "init": null
          }
        ],
        "kind": "const"
      },
      "right": {
        "type": "Identifier",
        "start": 1613,
        "end": 1627,
        "name": "invalidStrings"
      },
      "body": {
        "type": "BlockStatement",
        "start": 1629,
        "end": 1776,
        "body": [
          {
            "type": "ExpressionStatement",
            "start": 1633,
            "end": 1774,
            "expression": {
              "type": "CallExpression",
              "start": 1633,
              "end": 1773,
              "callee": {
                "type": "MemberExpression",
                "start": 1633,
                "end": 1646,
                "object": {
                  "type": "Identifier",
                  "start": 1633,
                  "end": 1639,
                  "name": "assert"
                },
                "property": {
                  "type": "Identifier",
                  "start": 1640,
                  "end": 1646,
                  "name": "throws"
                },
                "computed": false,
                "optional": false
              },
              "arguments": [
                {
                  "type": "Identifier",
                  "start": 1652,
                  "end": 1662,
                  "name": "RangeError"
                },
                {
                  "type": "ArrowFunctionExpression",
                  "start": 1668,
                  "end": 1705,
                  "id": null,
                  "expression": true,
                  "generator": false,
                  "async": false,
                  "params": [],
                  "body": {
                    "type": "CallExpression",
                    "start": 1674,
                    "end": 1705,
                    "callee": {
                      "type": "MemberExpression",
                      "start": 1674,
                      "end": 1700,
                      "object": {
                        "type": "Identifier",
                        "start": 1674,
                        "end": 1682,
                        "name": "instance"
                      },
                      "property": {
                        "type": "Identifier",
                        "start": 1683,
                        "end": 1700,
                        "name": "getNextTransition"
                      },
                      "computed": false,
                      "optional": false
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "start": 1701,
                        "end": 1704,
                        "name": "arg"
                      }
                    ],
                    "optional": false
                  }
                },
                {
                  "type": "TemplateLiteral",
                  "start": 1711,
                  "end": 1769,
                  "expressions": [
                    {
                      "type": "Identifier",
                      "start": 1715,
                      "end": 1718,
                      "name": "arg"
                    }
                  ],
                  "quasis": [
                    {
                      "type": "TemplateElement",
                      "start": 1712,
                      "end": 1713,
                      "value": {
                        "raw": "\"",
                        "cooked": "\""
                      },
                      "tail": false
                    },
                    {
                      "type": "TemplateElement",
                      "start": 1719,
                      "end": 1768,
                      "value": {
                        "raw": "\" should not be a valid ISO string for an Instant",
                        "cooked": "\" should not be a valid ISO string for an Instant"
                      },
                      "tail": true
                    }
                  ]
                }
              ],
              "optional": false
            }
          }
        ]
      }
    }
  ],
  "sourceType": "script"
}