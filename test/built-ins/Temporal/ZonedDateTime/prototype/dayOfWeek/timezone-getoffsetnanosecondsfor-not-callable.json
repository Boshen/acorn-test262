{
  "type": "Program",
  "start": 0,
  "end": 800,
  "body": [
    {
      "type": "ExpressionStatement",
      "start": 333,
      "end": 799,
      "expression": {
        "type": "CallExpression",
        "start": 333,
        "end": 798,
        "callee": {
          "type": "MemberExpression",
          "start": 333,
          "end": 407,
          "object": {
            "type": "ArrayExpression",
            "start": 333,
            "end": 399,
            "elements": [
              {
                "type": "Identifier",
                "start": 334,
                "end": 343,
                "name": "undefined"
              },
              {
                "type": "Literal",
                "start": 345,
                "end": 349,
                "value": null
              },
              {
                "type": "Literal",
                "start": 351,
                "end": 355,
                "value": true
              },
              {
                "type": "MemberExpression",
                "start": 357,
                "end": 364,
                "object": {
                  "type": "Identifier",
                  "start": 357,
                  "end": 361,
                  "name": "Math"
                },
                "property": {
                  "type": "Identifier",
                  "start": 362,
                  "end": 364,
                  "name": "PI"
                },
                "computed": false,
                "optional": false
              },
              {
                "type": "Literal",
                "start": 366,
                "end": 374,
                "value": "string"
              },
              {
                "type": "CallExpression",
                "start": 376,
                "end": 389,
                "callee": {
                  "type": "Identifier",
                  "start": 376,
                  "end": 382,
                  "name": "Symbol"
                },
                "arguments": [
                  {
                    "type": "Literal",
                    "start": 383,
                    "end": 388,
                    "value": "sym"
                  }
                ],
                "optional": false
              },
              {
                "type": "Literal",
                "start": 391,
                "end": 394,
                "value": "42n"
              },
              {
                "type": "ObjectExpression",
                "start": 396,
                "end": 398,
                "properties": []
              }
            ]
          },
          "property": {
            "type": "Identifier",
            "start": 400,
            "end": 407,
            "name": "forEach"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "ArrowFunctionExpression",
            "start": 408,
            "end": 797,
            "id": null,
            "expression": false,
            "generator": false,
            "async": false,
            "params": [
              {
                "type": "Identifier",
                "start": 409,
                "end": 420,
                "name": "notCallable"
              }
            ],
            "body": {
              "type": "BlockStatement",
              "start": 425,
              "end": 797,
              "body": [
                {
                  "type": "VariableDeclaration",
                  "start": 429,
                  "end": 475,
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "start": 435,
                      "end": 474,
                      "id": {
                        "type": "Identifier",
                        "start": 435,
                        "end": 443,
                        "name": "timeZone"
                      },
                      "init": {
                        "type": "NewExpression",
                        "start": 446,
                        "end": 474,
                        "callee": {
                          "type": "MemberExpression",
                          "start": 450,
                          "end": 467,
                          "object": {
                            "type": "Identifier",
                            "start": 450,
                            "end": 458,
                            "name": "Temporal"
                          },
                          "property": {
                            "type": "Identifier",
                            "start": 459,
                            "end": 467,
                            "name": "TimeZone"
                          },
                          "computed": false,
                          "optional": false
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "start": 468,
                            "end": 473,
                            "value": "UTC"
                          }
                        ]
                      }
                    }
                  ],
                  "kind": "const"
                },
                {
                  "type": "VariableDeclaration",
                  "start": 478,
                  "end": 560,
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "start": 484,
                      "end": 559,
                      "id": {
                        "type": "Identifier",
                        "start": 484,
                        "end": 492,
                        "name": "datetime"
                      },
                      "init": {
                        "type": "NewExpression",
                        "start": 495,
                        "end": 559,
                        "callee": {
                          "type": "MemberExpression",
                          "start": 499,
                          "end": 521,
                          "object": {
                            "type": "Identifier",
                            "start": 499,
                            "end": 507,
                            "name": "Temporal"
                          },
                          "property": {
                            "type": "Identifier",
                            "start": 508,
                            "end": 521,
                            "name": "ZonedDateTime"
                          },
                          "computed": false,
                          "optional": false
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "start": 522,
                            "end": 548,
                            "value": "1000000000987654321n"
                          },
                          {
                            "type": "Identifier",
                            "start": 550,
                            "end": 558,
                            "name": "timeZone"
                          }
                        ]
                      }
                    }
                  ],
                  "kind": "const"
                },
                {
                  "type": "ExpressionStatement",
                  "start": 563,
                  "end": 610,
                  "expression": {
                    "type": "AssignmentExpression",
                    "start": 563,
                    "end": 609,
                    "operator": "=",
                    "left": {
                      "type": "MemberExpression",
                      "start": 563,
                      "end": 595,
                      "object": {
                        "type": "Identifier",
                        "start": 563,
                        "end": 571,
                        "name": "timeZone"
                      },
                      "property": {
                        "type": "Identifier",
                        "start": 572,
                        "end": 595,
                        "name": "getOffsetNanosecondsFor"
                      },
                      "computed": false,
                      "optional": false
                    },
                    "right": {
                      "type": "Identifier",
                      "start": 598,
                      "end": 609,
                      "name": "notCallable"
                    }
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "start": 613,
                  "end": 795,
                  "expression": {
                    "type": "CallExpression",
                    "start": 613,
                    "end": 794,
                    "callee": {
                      "type": "MemberExpression",
                      "start": 613,
                      "end": 626,
                      "object": {
                        "type": "Identifier",
                        "start": 613,
                        "end": 619,
                        "name": "assert"
                      },
                      "property": {
                        "type": "Identifier",
                        "start": 620,
                        "end": 626,
                        "name": "throws"
                      },
                      "computed": false,
                      "optional": false
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "start": 632,
                        "end": 641,
                        "name": "TypeError"
                      },
                      {
                        "type": "ArrowFunctionExpression",
                        "start": 647,
                        "end": 671,
                        "id": null,
                        "expression": true,
                        "generator": false,
                        "async": false,
                        "params": [],
                        "body": {
                          "type": "MemberExpression",
                          "start": 653,
                          "end": 671,
                          "object": {
                            "type": "Identifier",
                            "start": 653,
                            "end": 661,
                            "name": "datetime"
                          },
                          "property": {
                            "type": "Identifier",
                            "start": 662,
                            "end": 671,
                            "name": "dayOfWeek"
                          },
                          "computed": false,
                          "optional": false
                        }
                      },
                      {
                        "type": "TemplateLiteral",
                        "start": 677,
                        "end": 790,
                        "expressions": [
                          {
                            "type": "ConditionalExpression",
                            "start": 691,
                            "end": 741,
                            "test": {
                              "type": "BinaryExpression",
                              "start": 691,
                              "end": 711,
                              "left": {
                                "type": "Identifier",
                                "start": 691,
                                "end": 702,
                                "name": "notCallable"
                              },
                              "operator": "===",
                              "right": {
                                "type": "Literal",
                                "start": 707,
                                "end": 711,
                                "value": null
                              }
                            },
                            "consequent": {
                              "type": "Literal",
                              "start": 714,
                              "end": 720,
                              "value": "null"
                            },
                            "alternate": {
                              "type": "UnaryExpression",
                              "start": 723,
                              "end": 741,
                              "operator": "typeof",
                              "prefix": true,
                              "argument": {
                                "type": "Identifier",
                                "start": 730,
                                "end": 741,
                                "name": "notCallable"
                              }
                            }
                          }
                        ],
                        "quasis": [
                          {
                            "type": "TemplateElement",
                            "start": 678,
                            "end": 689,
                            "value": {
                              "raw": "Uncallable ",
                              "cooked": "Uncallable "
                            },
                            "tail": false
                          },
                          {
                            "type": "TemplateElement",
                            "start": 742,
                            "end": 789,
                            "value": {
                              "raw": " getOffsetNanosecondsFor should throw TypeError",
                              "cooked": " getOffsetNanosecondsFor should throw TypeError"
                            },
                            "tail": true
                          }
                        ]
                      }
                    ],
                    "optional": false
                  }
                }
              ]
            }
          }
        ],
        "optional": false
      }
    }
  ],
  "sourceType": "script"
}