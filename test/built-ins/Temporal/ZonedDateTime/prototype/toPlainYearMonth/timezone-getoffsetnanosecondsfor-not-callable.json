{
  "type": "Program",
  "start": 0,
  "end": 812,
  "body": [
    {
      "type": "ExpressionStatement",
      "start": 336,
      "end": 811,
      "expression": {
        "type": "CallExpression",
        "start": 336,
        "end": 810,
        "callee": {
          "type": "MemberExpression",
          "start": 336,
          "end": 410,
          "object": {
            "type": "ArrayExpression",
            "start": 336,
            "end": 402,
            "elements": [
              {
                "type": "Identifier",
                "start": 337,
                "end": 346,
                "name": "undefined"
              },
              {
                "type": "Literal",
                "start": 348,
                "end": 352,
                "value": null
              },
              {
                "type": "Literal",
                "start": 354,
                "end": 358,
                "value": true
              },
              {
                "type": "MemberExpression",
                "start": 360,
                "end": 367,
                "object": {
                  "type": "Identifier",
                  "start": 360,
                  "end": 364,
                  "name": "Math"
                },
                "property": {
                  "type": "Identifier",
                  "start": 365,
                  "end": 367,
                  "name": "PI"
                },
                "computed": false,
                "optional": false
              },
              {
                "type": "Literal",
                "start": 369,
                "end": 377,
                "value": "string"
              },
              {
                "type": "CallExpression",
                "start": 379,
                "end": 392,
                "callee": {
                  "type": "Identifier",
                  "start": 379,
                  "end": 385,
                  "name": "Symbol"
                },
                "arguments": [
                  {
                    "type": "Literal",
                    "start": 386,
                    "end": 391,
                    "value": "sym"
                  }
                ],
                "optional": false
              },
              {
                "type": "Literal",
                "start": 394,
                "end": 397,
                "value": "42n",
                "bigint": "42"
              },
              {
                "type": "ObjectExpression",
                "start": 399,
                "end": 401,
                "properties": []
              }
            ]
          },
          "property": {
            "type": "Identifier",
            "start": 403,
            "end": 410,
            "name": "forEach"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "ArrowFunctionExpression",
            "start": 411,
            "end": 809,
            "id": null,
            "expression": false,
            "generator": false,
            "async": false,
            "params": [
              {
                "type": "Identifier",
                "start": 412,
                "end": 423,
                "name": "notCallable"
              }
            ],
            "body": {
              "type": "BlockStatement",
              "start": 428,
              "end": 809,
              "body": [
                {
                  "type": "VariableDeclaration",
                  "start": 432,
                  "end": 478,
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "start": 438,
                      "end": 477,
                      "id": {
                        "type": "Identifier",
                        "start": 438,
                        "end": 446,
                        "name": "timeZone"
                      },
                      "init": {
                        "type": "NewExpression",
                        "start": 449,
                        "end": 477,
                        "callee": {
                          "type": "MemberExpression",
                          "start": 453,
                          "end": 470,
                          "object": {
                            "type": "Identifier",
                            "start": 453,
                            "end": 461,
                            "name": "Temporal"
                          },
                          "property": {
                            "type": "Identifier",
                            "start": 462,
                            "end": 470,
                            "name": "TimeZone"
                          },
                          "computed": false,
                          "optional": false
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "start": 471,
                            "end": 476,
                            "value": "UTC"
                          }
                        ]
                      }
                    }
                  ],
                  "kind": "const"
                },
                {
                  "type": "VariableDeclaration",
                  "start": 481,
                  "end": 563,
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "start": 487,
                      "end": 562,
                      "id": {
                        "type": "Identifier",
                        "start": 487,
                        "end": 495,
                        "name": "datetime"
                      },
                      "init": {
                        "type": "NewExpression",
                        "start": 498,
                        "end": 562,
                        "callee": {
                          "type": "MemberExpression",
                          "start": 502,
                          "end": 524,
                          "object": {
                            "type": "Identifier",
                            "start": 502,
                            "end": 510,
                            "name": "Temporal"
                          },
                          "property": {
                            "type": "Identifier",
                            "start": 511,
                            "end": 524,
                            "name": "ZonedDateTime"
                          },
                          "computed": false,
                          "optional": false
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "start": 525,
                            "end": 551,
                            "value": "1000000000987654321n",
                            "bigint": "1000000000987654321"
                          },
                          {
                            "type": "Identifier",
                            "start": 553,
                            "end": 561,
                            "name": "timeZone"
                          }
                        ]
                      }
                    }
                  ],
                  "kind": "const"
                },
                {
                  "type": "ExpressionStatement",
                  "start": 566,
                  "end": 613,
                  "expression": {
                    "type": "AssignmentExpression",
                    "start": 566,
                    "end": 612,
                    "operator": "=",
                    "left": {
                      "type": "MemberExpression",
                      "start": 566,
                      "end": 598,
                      "object": {
                        "type": "Identifier",
                        "start": 566,
                        "end": 574,
                        "name": "timeZone"
                      },
                      "property": {
                        "type": "Identifier",
                        "start": 575,
                        "end": 598,
                        "name": "getOffsetNanosecondsFor"
                      },
                      "computed": false,
                      "optional": false
                    },
                    "right": {
                      "type": "Identifier",
                      "start": 601,
                      "end": 612,
                      "name": "notCallable"
                    }
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "start": 616,
                  "end": 807,
                  "expression": {
                    "type": "CallExpression",
                    "start": 616,
                    "end": 806,
                    "callee": {
                      "type": "MemberExpression",
                      "start": 616,
                      "end": 629,
                      "object": {
                        "type": "Identifier",
                        "start": 616,
                        "end": 622,
                        "name": "assert"
                      },
                      "property": {
                        "type": "Identifier",
                        "start": 623,
                        "end": 629,
                        "name": "throws"
                      },
                      "computed": false,
                      "optional": false
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "start": 635,
                        "end": 644,
                        "name": "TypeError"
                      },
                      {
                        "type": "ArrowFunctionExpression",
                        "start": 650,
                        "end": 683,
                        "id": null,
                        "expression": true,
                        "generator": false,
                        "async": false,
                        "params": [],
                        "body": {
                          "type": "CallExpression",
                          "start": 656,
                          "end": 683,
                          "callee": {
                            "type": "MemberExpression",
                            "start": 656,
                            "end": 681,
                            "object": {
                              "type": "Identifier",
                              "start": 656,
                              "end": 664,
                              "name": "datetime"
                            },
                            "property": {
                              "type": "Identifier",
                              "start": 665,
                              "end": 681,
                              "name": "toPlainYearMonth"
                            },
                            "computed": false,
                            "optional": false
                          },
                          "arguments": [],
                          "optional": false
                        }
                      },
                      {
                        "type": "TemplateLiteral",
                        "start": 689,
                        "end": 802,
                        "expressions": [
                          {
                            "type": "ConditionalExpression",
                            "start": 703,
                            "end": 753,
                            "test": {
                              "type": "BinaryExpression",
                              "start": 703,
                              "end": 723,
                              "left": {
                                "type": "Identifier",
                                "start": 703,
                                "end": 714,
                                "name": "notCallable"
                              },
                              "operator": "===",
                              "right": {
                                "type": "Literal",
                                "start": 719,
                                "end": 723,
                                "value": null
                              }
                            },
                            "consequent": {
                              "type": "Literal",
                              "start": 726,
                              "end": 732,
                              "value": "null"
                            },
                            "alternate": {
                              "type": "UnaryExpression",
                              "start": 735,
                              "end": 753,
                              "operator": "typeof",
                              "prefix": true,
                              "argument": {
                                "type": "Identifier",
                                "start": 742,
                                "end": 753,
                                "name": "notCallable"
                              }
                            }
                          }
                        ],
                        "quasis": [
                          {
                            "type": "TemplateElement",
                            "start": 690,
                            "end": 701,
                            "value": {
                              "raw": "Uncallable ",
                              "cooked": "Uncallable "
                            },
                            "tail": false
                          },
                          {
                            "type": "TemplateElement",
                            "start": 754,
                            "end": 801,
                            "value": {
                              "raw": " getOffsetNanosecondsFor should throw TypeError",
                              "cooked": " getOffsetNanosecondsFor should throw TypeError"
                            },
                            "tail": true
                          }
                        ]
                      }
                    ],
                    "optional": false
                  }
                }
              ]
            }
          }
        ],
        "optional": false
      }
    }
  ],
  "sourceType": "script"
}