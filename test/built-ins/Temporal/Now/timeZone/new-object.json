{
  "type": "Program",
  "start": 0,
  "end": 437,
  "body": [
    {
      "type": "VariableDeclaration",
      "start": 272,
      "end": 305,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 278,
          "end": 304,
          "id": {
            "type": "Identifier",
            "start": 278,
            "end": 280,
            "name": "tz"
          },
          "init": {
            "type": "MemberExpression",
            "start": 283,
            "end": 304,
            "object": {
              "type": "MemberExpression",
              "start": 283,
              "end": 295,
              "object": {
                "type": "Identifier",
                "start": 283,
                "end": 291,
                "name": "Temporal"
              },
              "property": {
                "type": "Identifier",
                "start": 292,
                "end": 295,
                "name": "Now"
              },
              "computed": false,
              "optional": false
            },
            "property": {
              "type": "Identifier",
              "start": 296,
              "end": 304,
              "name": "timeZone"
            },
            "computed": false,
            "optional": false
          }
        }
      ],
      "kind": "const"
    },
    {
      "type": "VariableDeclaration",
      "start": 306,
      "end": 323,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 312,
          "end": 322,
          "id": {
            "type": "Identifier",
            "start": 312,
            "end": 315,
            "name": "tz1"
          },
          "init": {
            "type": "CallExpression",
            "start": 318,
            "end": 322,
            "callee": {
              "type": "Identifier",
              "start": 318,
              "end": 320,
              "name": "tz"
            },
            "arguments": [],
            "optional": false
          }
        }
      ],
      "kind": "const"
    },
    {
      "type": "VariableDeclaration",
      "start": 324,
      "end": 341,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 330,
          "end": 340,
          "id": {
            "type": "Identifier",
            "start": 330,
            "end": 333,
            "name": "tz2"
          },
          "init": {
            "type": "CallExpression",
            "start": 336,
            "end": 340,
            "callee": {
              "type": "Identifier",
              "start": 336,
              "end": 338,
              "name": "tz"
            },
            "arguments": [],
            "optional": false
          }
        }
      ],
      "kind": "const"
    },
    {
      "type": "ExpressionStatement",
      "start": 342,
      "end": 436,
      "expression": {
        "type": "CallExpression",
        "start": 342,
        "end": 435,
        "callee": {
          "type": "MemberExpression",
          "start": 342,
          "end": 361,
          "object": {
            "type": "Identifier",
            "start": 342,
            "end": 348,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 349,
            "end": 361,
            "name": "notSameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "Identifier",
            "start": 362,
            "end": 365,
            "name": "tz1"
          },
          {
            "type": "Identifier",
            "start": 367,
            "end": 370,
            "name": "tz2"
          },
          {
            "type": "Literal",
            "start": 372,
            "end": 434,
            "value": "The value of tz1 is expected to not equal the value of `tz2`",
            "raw": "'The value of tz1 is expected to not equal the value of `tz2`'"
          }
        ],
        "optional": false
      }
    }
  ],
  "sourceType": "script"
}