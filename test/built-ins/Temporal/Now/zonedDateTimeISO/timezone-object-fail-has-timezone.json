{
  "type": "Program",
  "start": 0,
  "end": 611,
  "body": [
    {
      "type": "VariableDeclaration",
      "start": 298,
      "end": 446,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 302,
          "end": 445,
          "id": {
            "type": "Identifier",
            "start": 302,
            "end": 310,
            "name": "timeZone"
          },
          "init": {
            "type": "NewExpression",
            "start": 313,
            "end": 445,
            "callee": {
              "type": "Identifier",
              "start": 317,
              "end": 322,
              "name": "Proxy"
            },
            "arguments": [
              {
                "type": "ObjectExpression",
                "start": 323,
                "end": 325,
                "properties": []
              },
              {
                "type": "ObjectExpression",
                "start": 327,
                "end": 444,
                "properties": [
                  {
                    "type": "Property",
                    "start": 331,
                    "end": 441,
                    "method": false,
                    "shorthand": false,
                    "computed": false,
                    "key": {
                      "type": "Identifier",
                      "start": 331,
                      "end": 334,
                      "name": "has"
                    },
                    "value": {
                      "type": "FunctionExpression",
                      "start": 336,
                      "end": 441,
                      "id": null,
                      "expression": false,
                      "generator": false,
                      "async": false,
                      "params": [
                        {
                          "type": "Identifier",
                          "start": 345,
                          "end": 351,
                          "name": "target"
                        },
                        {
                          "type": "Identifier",
                          "start": 353,
                          "end": 361,
                          "name": "property"
                        }
                      ],
                      "body": {
                        "type": "BlockStatement",
                        "start": 363,
                        "end": 441,
                        "body": [
                          {
                            "type": "IfStatement",
                            "start": 369,
                            "end": 437,
                            "test": {
                              "type": "BinaryExpression",
                              "start": 373,
                              "end": 396,
                              "left": {
                                "type": "Identifier",
                                "start": 373,
                                "end": 381,
                                "name": "property"
                              },
                              "operator": "===",
                              "right": {
                                "type": "Literal",
                                "start": 386,
                                "end": 396,
                                "value": "timeZone"
                              }
                            },
                            "consequent": {
                              "type": "BlockStatement",
                              "start": 398,
                              "end": 437,
                              "body": [
                                {
                                  "type": "ThrowStatement",
                                  "start": 406,
                                  "end": 431,
                                  "argument": {
                                    "type": "NewExpression",
                                    "start": 412,
                                    "end": 430,
                                    "callee": {
                                      "type": "Identifier",
                                      "start": 416,
                                      "end": 428,
                                      "name": "Test262Error"
                                    },
                                    "arguments": []
                                  }
                                }
                              ]
                            },
                            "alternate": null
                          }
                        ]
                      }
                    },
                    "kind": "init"
                  }
                ]
              }
            ]
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "ExpressionStatement",
      "start": 448,
      "end": 610,
      "expression": {
        "type": "CallExpression",
        "start": 448,
        "end": 609,
        "callee": {
          "type": "MemberExpression",
          "start": 448,
          "end": 461,
          "object": {
            "type": "Identifier",
            "start": 448,
            "end": 454,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 455,
            "end": 461,
            "name": "throws"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "Identifier",
            "start": 462,
            "end": 474,
            "name": "Test262Error"
          },
          {
            "type": "FunctionExpression",
            "start": 476,
            "end": 533,
            "id": null,
            "expression": false,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "start": 487,
              "end": 533,
              "body": [
                {
                  "type": "ExpressionStatement",
                  "start": 491,
                  "end": 531,
                  "expression": {
                    "type": "CallExpression",
                    "start": 491,
                    "end": 530,
                    "callee": {
                      "type": "MemberExpression",
                      "start": 491,
                      "end": 520,
                      "object": {
                        "type": "MemberExpression",
                        "start": 491,
                        "end": 503,
                        "object": {
                          "type": "Identifier",
                          "start": 491,
                          "end": 499,
                          "name": "Temporal"
                        },
                        "property": {
                          "type": "Identifier",
                          "start": 500,
                          "end": 503,
                          "name": "Now"
                        },
                        "computed": false,
                        "optional": false
                      },
                      "property": {
                        "type": "Identifier",
                        "start": 504,
                        "end": 520,
                        "name": "zonedDateTimeISO"
                      },
                      "computed": false,
                      "optional": false
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "start": 521,
                        "end": 529,
                        "name": "timeZone"
                      }
                    ],
                    "optional": false
                  }
                }
              ]
            }
          },
          {
            "type": "Literal",
            "start": 535,
            "end": 608,
            "value": "Temporal.Now.zonedDateTimeISO(timeZone) throws a Test262Error exception"
          }
        ],
        "optional": false
      }
    }
  ],
  "sourceType": "script"
}