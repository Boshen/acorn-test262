{
  "type": "Program",
  "start": 0,
  "end": 1938,
  "body": [
    {
      "type": "VariableDeclaration",
      "start": 354,
      "end": 1525,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 360,
          "end": 1524,
          "id": {
            "type": "Identifier",
            "start": 360,
            "end": 374,
            "name": "invalidStrings"
          },
          "init": {
            "type": "ArrayExpression",
            "start": 377,
            "end": 1524,
            "elements": [
              {
                "type": "Literal",
                "start": 407,
                "end": 409,
                "value": ""
              },
              {
                "type": "Literal",
                "start": 413,
                "end": 430,
                "value": "invalid iso8601"
              },
              {
                "type": "Literal",
                "start": 434,
                "end": 453,
                "value": "2020-01-00T00:00Z"
              },
              {
                "type": "Literal",
                "start": 457,
                "end": 476,
                "value": "2020-01-32T00:00Z"
              },
              {
                "type": "Literal",
                "start": 480,
                "end": 499,
                "value": "2020-02-30T00:00Z"
              },
              {
                "type": "Literal",
                "start": 503,
                "end": 522,
                "value": "2021-02-29T00:00Z"
              },
              {
                "type": "Literal",
                "start": 526,
                "end": 545,
                "value": "2020-00-01T00:00Z"
              },
              {
                "type": "Literal",
                "start": 549,
                "end": 568,
                "value": "2020-13-01T00:00Z"
              },
              {
                "type": "Literal",
                "start": 572,
                "end": 586,
                "value": "2020-01-01TZ"
              },
              {
                "type": "Literal",
                "start": 590,
                "end": 612,
                "value": "2020-01-01T25:00:00Z"
              },
              {
                "type": "Literal",
                "start": 616,
                "end": 638,
                "value": "2020-01-01T01:60:00Z"
              },
              {
                "type": "Literal",
                "start": 642,
                "end": 664,
                "value": "2020-01-01T01:60:61Z"
              },
              {
                "type": "Literal",
                "start": 668,
                "end": 691,
                "value": "2020-01-01T00:00Zjunk"
              },
              {
                "type": "Literal",
                "start": 695,
                "end": 721,
                "value": "2020-01-01T00:00:00Zjunk"
              },
              {
                "type": "Literal",
                "start": 725,
                "end": 761,
                "value": "2020-01-01T00:00:00.000000000Zjunk"
              },
              {
                "type": "Literal",
                "start": 765,
                "end": 796,
                "value": "2020-01-01T00:00:00+00:00junk"
              },
              {
                "type": "Literal",
                "start": 800,
                "end": 836,
                "value": "2020-01-01T00:00:00+00:00[UTC]junk"
              },
              {
                "type": "Literal",
                "start": 840,
                "end": 890,
                "value": "2020-01-01T00:00:00+00:00[UTC][u-ca=iso8601]junk"
              },
              {
                "type": "Literal",
                "start": 894,
                "end": 914,
                "value": "02020-01-01T00:00Z"
              },
              {
                "type": "Literal",
                "start": 918,
                "end": 938,
                "value": "2020-001-01T00:00Z"
              },
              {
                "type": "Literal",
                "start": 942,
                "end": 962,
                "value": "2020-01-001T00:00Z"
              },
              {
                "type": "Literal",
                "start": 966,
                "end": 983,
                "value": "2020-01-01T001Z"
              },
              {
                "type": "Literal",
                "start": 987,
                "end": 1007,
                "value": "2020-01-01T01:001Z"
              },
              {
                "type": "Literal",
                "start": 1011,
                "end": 1034,
                "value": "2020-01-01T01:01:001Z"
              },
              {
                "type": "Literal",
                "start": 1087,
                "end": 1106,
                "value": "2020-W01-1T00:00Z"
              },
              {
                "type": "Literal",
                "start": 1110,
                "end": 1127,
                "value": "2020-001T00:00Z"
              },
              {
                "type": "Literal",
                "start": 1131,
                "end": 1154,
                "value": "+0002020-01-01T00:00Z"
              },
              {
                "type": "Literal",
                "start": 1237,
                "end": 1246,
                "value": "2020-01"
              },
              {
                "type": "Literal",
                "start": 1250,
                "end": 1262,
                "value": "+002020-01"
              },
              {
                "type": "Literal",
                "start": 1266,
                "end": 1273,
                "value": "01-01"
              },
              {
                "type": "Literal",
                "start": 1277,
                "end": 1287,
                "value": "2020-W01"
              },
              {
                "type": "Literal",
                "start": 1291,
                "end": 1296,
                "value": "P1Y"
              },
              {
                "type": "Literal",
                "start": 1300,
                "end": 1307,
                "value": "-P12Y"
              },
              {
                "type": "Literal",
                "start": 1311,
                "end": 1323,
                "value": "2020-01-01"
              },
              {
                "type": "Literal",
                "start": 1327,
                "end": 1342,
                "value": "2020-01-01T00"
              },
              {
                "type": "Literal",
                "start": 1346,
                "end": 1364,
                "value": "2020-01-01T00:00"
              },
              {
                "type": "Literal",
                "start": 1368,
                "end": 1389,
                "value": "2020-01-01T00:00:00"
              },
              {
                "type": "Literal",
                "start": 1393,
                "end": 1424,
                "value": "2020-01-01T00:00:00.000000000"
              },
              {
                "type": "Literal",
                "start": 1473,
                "end": 1495,
                "value": "-999999-01-01T00:00Z"
              },
              {
                "type": "Literal",
                "start": 1499,
                "end": 1521,
                "value": "+999999-01-01T00:00Z"
              }
            ]
          }
        }
      ],
      "kind": "const"
    },
    {
      "type": "VariableDeclaration",
      "start": 1527,
      "end": 1566,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 1533,
          "end": 1565,
          "id": {
            "type": "Identifier",
            "start": 1533,
            "end": 1538,
            "name": "epoch"
          },
          "init": {
            "type": "NewExpression",
            "start": 1541,
            "end": 1565,
            "callee": {
              "type": "MemberExpression",
              "start": 1545,
              "end": 1561,
              "object": {
                "type": "Identifier",
                "start": 1545,
                "end": 1553,
                "name": "Temporal"
              },
              "property": {
                "type": "Identifier",
                "start": 1554,
                "end": 1561,
                "name": "Instant"
              },
              "computed": false,
              "optional": false
            },
            "arguments": [
              {
                "type": "Literal",
                "start": 1562,
                "end": 1564,
                "value": "0n"
              }
            ]
          }
        }
      ],
      "kind": "const"
    },
    {
      "type": "ForOfStatement",
      "start": 1567,
      "end": 1937,
      "await": false,
      "left": {
        "type": "VariableDeclaration",
        "start": 1572,
        "end": 1581,
        "declarations": [
          {
            "type": "VariableDeclarator",
            "start": 1578,
            "end": 1581,
            "id": {
              "type": "Identifier",
              "start": 1578,
              "end": 1581,
              "name": "arg"
            },
            "init": null
          }
        ],
        "kind": "const"
      },
      "right": {
        "type": "Identifier",
        "start": 1585,
        "end": 1599,
        "name": "invalidStrings"
      },
      "body": {
        "type": "BlockStatement",
        "start": 1601,
        "end": 1937,
        "body": [
          {
            "type": "ExpressionStatement",
            "start": 1605,
            "end": 1768,
            "expression": {
              "type": "CallExpression",
              "start": 1605,
              "end": 1767,
              "callee": {
                "type": "MemberExpression",
                "start": 1605,
                "end": 1618,
                "object": {
                  "type": "Identifier",
                  "start": 1605,
                  "end": 1611,
                  "name": "assert"
                },
                "property": {
                  "type": "Identifier",
                  "start": 1612,
                  "end": 1618,
                  "name": "throws"
                },
                "computed": false,
                "optional": false
              },
              "arguments": [
                {
                  "type": "Identifier",
                  "start": 1624,
                  "end": 1634,
                  "name": "RangeError"
                },
                {
                  "type": "ArrowFunctionExpression",
                  "start": 1640,
                  "end": 1682,
                  "id": null,
                  "expression": true,
                  "generator": false,
                  "async": false,
                  "params": [],
                  "body": {
                    "type": "CallExpression",
                    "start": 1646,
                    "end": 1682,
                    "callee": {
                      "type": "MemberExpression",
                      "start": 1646,
                      "end": 1670,
                      "object": {
                        "type": "MemberExpression",
                        "start": 1646,
                        "end": 1662,
                        "object": {
                          "type": "Identifier",
                          "start": 1646,
                          "end": 1654,
                          "name": "Temporal"
                        },
                        "property": {
                          "type": "Identifier",
                          "start": 1655,
                          "end": 1662,
                          "name": "Instant"
                        },
                        "computed": false,
                        "optional": false
                      },
                      "property": {
                        "type": "Identifier",
                        "start": 1663,
                        "end": 1670,
                        "name": "compare"
                      },
                      "computed": false,
                      "optional": false
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "start": 1671,
                        "end": 1674,
                        "name": "arg"
                      },
                      {
                        "type": "Identifier",
                        "start": 1676,
                        "end": 1681,
                        "name": "epoch"
                      }
                    ],
                    "optional": false
                  }
                },
                {
                  "type": "TemplateLiteral",
                  "start": 1688,
                  "end": 1763,
                  "expressions": [
                    {
                      "type": "Identifier",
                      "start": 1692,
                      "end": 1695,
                      "name": "arg"
                    }
                  ],
                  "quasis": [
                    {
                      "type": "TemplateElement",
                      "start": 1689,
                      "end": 1690,
                      "value": {
                        "raw": "\"",
                        "cooked": "\""
                      },
                      "tail": false
                    },
                    {
                      "type": "TemplateElement",
                      "start": 1696,
                      "end": 1762,
                      "value": {
                        "raw": "\" should not be a valid ISO string for an Instant (first argument)",
                        "cooked": "\" should not be a valid ISO string for an Instant (first argument)"
                      },
                      "tail": true
                    }
                  ]
                }
              ],
              "optional": false
            }
          },
          {
            "type": "ExpressionStatement",
            "start": 1771,
            "end": 1935,
            "expression": {
              "type": "CallExpression",
              "start": 1771,
              "end": 1934,
              "callee": {
                "type": "MemberExpression",
                "start": 1771,
                "end": 1784,
                "object": {
                  "type": "Identifier",
                  "start": 1771,
                  "end": 1777,
                  "name": "assert"
                },
                "property": {
                  "type": "Identifier",
                  "start": 1778,
                  "end": 1784,
                  "name": "throws"
                },
                "computed": false,
                "optional": false
              },
              "arguments": [
                {
                  "type": "Identifier",
                  "start": 1790,
                  "end": 1800,
                  "name": "RangeError"
                },
                {
                  "type": "ArrowFunctionExpression",
                  "start": 1806,
                  "end": 1848,
                  "id": null,
                  "expression": true,
                  "generator": false,
                  "async": false,
                  "params": [],
                  "body": {
                    "type": "CallExpression",
                    "start": 1812,
                    "end": 1848,
                    "callee": {
                      "type": "MemberExpression",
                      "start": 1812,
                      "end": 1836,
                      "object": {
                        "type": "MemberExpression",
                        "start": 1812,
                        "end": 1828,
                        "object": {
                          "type": "Identifier",
                          "start": 1812,
                          "end": 1820,
                          "name": "Temporal"
                        },
                        "property": {
                          "type": "Identifier",
                          "start": 1821,
                          "end": 1828,
                          "name": "Instant"
                        },
                        "computed": false,
                        "optional": false
                      },
                      "property": {
                        "type": "Identifier",
                        "start": 1829,
                        "end": 1836,
                        "name": "compare"
                      },
                      "computed": false,
                      "optional": false
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "start": 1837,
                        "end": 1842,
                        "name": "epoch"
                      },
                      {
                        "type": "Identifier",
                        "start": 1844,
                        "end": 1847,
                        "name": "arg"
                      }
                    ],
                    "optional": false
                  }
                },
                {
                  "type": "TemplateLiteral",
                  "start": 1854,
                  "end": 1930,
                  "expressions": [
                    {
                      "type": "Identifier",
                      "start": 1858,
                      "end": 1861,
                      "name": "arg"
                    }
                  ],
                  "quasis": [
                    {
                      "type": "TemplateElement",
                      "start": 1855,
                      "end": 1856,
                      "value": {
                        "raw": "\"",
                        "cooked": "\""
                      },
                      "tail": false
                    },
                    {
                      "type": "TemplateElement",
                      "start": 1862,
                      "end": 1929,
                      "value": {
                        "raw": "\" should not be a valid ISO string for an Instant (second argument)",
                        "cooked": "\" should not be a valid ISO string for an Instant (second argument)"
                      },
                      "tail": true
                    }
                  ]
                }
              ],
              "optional": false
            }
          }
        ]
      }
    }
  ],
  "sourceType": "script"
}