{
  "type": "Program",
  "start": 0,
  "end": 1750,
  "body": [
    {
      "type": "VariableDeclaration",
      "start": 363,
      "end": 1534,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 369,
          "end": 1533,
          "id": {
            "type": "Identifier",
            "start": 369,
            "end": 383,
            "name": "invalidStrings"
          },
          "init": {
            "type": "ArrayExpression",
            "start": 386,
            "end": 1533,
            "elements": [
              {
                "type": "Literal",
                "start": 416,
                "end": 418,
                "value": ""
              },
              {
                "type": "Literal",
                "start": 422,
                "end": 439,
                "value": "invalid iso8601"
              },
              {
                "type": "Literal",
                "start": 443,
                "end": 462,
                "value": "2020-01-00T00:00Z"
              },
              {
                "type": "Literal",
                "start": 466,
                "end": 485,
                "value": "2020-01-32T00:00Z"
              },
              {
                "type": "Literal",
                "start": 489,
                "end": 508,
                "value": "2020-02-30T00:00Z"
              },
              {
                "type": "Literal",
                "start": 512,
                "end": 531,
                "value": "2021-02-29T00:00Z"
              },
              {
                "type": "Literal",
                "start": 535,
                "end": 554,
                "value": "2020-00-01T00:00Z"
              },
              {
                "type": "Literal",
                "start": 558,
                "end": 577,
                "value": "2020-13-01T00:00Z"
              },
              {
                "type": "Literal",
                "start": 581,
                "end": 595,
                "value": "2020-01-01TZ"
              },
              {
                "type": "Literal",
                "start": 599,
                "end": 621,
                "value": "2020-01-01T25:00:00Z"
              },
              {
                "type": "Literal",
                "start": 625,
                "end": 647,
                "value": "2020-01-01T01:60:00Z"
              },
              {
                "type": "Literal",
                "start": 651,
                "end": 673,
                "value": "2020-01-01T01:60:61Z"
              },
              {
                "type": "Literal",
                "start": 677,
                "end": 700,
                "value": "2020-01-01T00:00Zjunk"
              },
              {
                "type": "Literal",
                "start": 704,
                "end": 730,
                "value": "2020-01-01T00:00:00Zjunk"
              },
              {
                "type": "Literal",
                "start": 734,
                "end": 770,
                "value": "2020-01-01T00:00:00.000000000Zjunk"
              },
              {
                "type": "Literal",
                "start": 774,
                "end": 805,
                "value": "2020-01-01T00:00:00+00:00junk"
              },
              {
                "type": "Literal",
                "start": 809,
                "end": 845,
                "value": "2020-01-01T00:00:00+00:00[UTC]junk"
              },
              {
                "type": "Literal",
                "start": 849,
                "end": 899,
                "value": "2020-01-01T00:00:00+00:00[UTC][u-ca=iso8601]junk"
              },
              {
                "type": "Literal",
                "start": 903,
                "end": 923,
                "value": "02020-01-01T00:00Z"
              },
              {
                "type": "Literal",
                "start": 927,
                "end": 947,
                "value": "2020-001-01T00:00Z"
              },
              {
                "type": "Literal",
                "start": 951,
                "end": 971,
                "value": "2020-01-001T00:00Z"
              },
              {
                "type": "Literal",
                "start": 975,
                "end": 992,
                "value": "2020-01-01T001Z"
              },
              {
                "type": "Literal",
                "start": 996,
                "end": 1016,
                "value": "2020-01-01T01:001Z"
              },
              {
                "type": "Literal",
                "start": 1020,
                "end": 1043,
                "value": "2020-01-01T01:01:001Z"
              },
              {
                "type": "Literal",
                "start": 1096,
                "end": 1115,
                "value": "2020-W01-1T00:00Z"
              },
              {
                "type": "Literal",
                "start": 1119,
                "end": 1136,
                "value": "2020-001T00:00Z"
              },
              {
                "type": "Literal",
                "start": 1140,
                "end": 1163,
                "value": "+0002020-01-01T00:00Z"
              },
              {
                "type": "Literal",
                "start": 1246,
                "end": 1255,
                "value": "2020-01"
              },
              {
                "type": "Literal",
                "start": 1259,
                "end": 1271,
                "value": "+002020-01"
              },
              {
                "type": "Literal",
                "start": 1275,
                "end": 1282,
                "value": "01-01"
              },
              {
                "type": "Literal",
                "start": 1286,
                "end": 1296,
                "value": "2020-W01"
              },
              {
                "type": "Literal",
                "start": 1300,
                "end": 1305,
                "value": "P1Y"
              },
              {
                "type": "Literal",
                "start": 1309,
                "end": 1316,
                "value": "-P12Y"
              },
              {
                "type": "Literal",
                "start": 1320,
                "end": 1332,
                "value": "2020-01-01"
              },
              {
                "type": "Literal",
                "start": 1336,
                "end": 1351,
                "value": "2020-01-01T00"
              },
              {
                "type": "Literal",
                "start": 1355,
                "end": 1373,
                "value": "2020-01-01T00:00"
              },
              {
                "type": "Literal",
                "start": 1377,
                "end": 1398,
                "value": "2020-01-01T00:00:00"
              },
              {
                "type": "Literal",
                "start": 1402,
                "end": 1433,
                "value": "2020-01-01T00:00:00.000000000"
              },
              {
                "type": "Literal",
                "start": 1482,
                "end": 1504,
                "value": "-999999-01-01T00:00Z"
              },
              {
                "type": "Literal",
                "start": 1508,
                "end": 1530,
                "value": "+999999-01-01T00:00Z"
              }
            ]
          }
        }
      ],
      "kind": "const"
    },
    {
      "type": "VariableDeclaration",
      "start": 1536,
      "end": 1578,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 1542,
          "end": 1577,
          "id": {
            "type": "Identifier",
            "start": 1542,
            "end": 1550,
            "name": "instance"
          },
          "init": {
            "type": "NewExpression",
            "start": 1553,
            "end": 1577,
            "callee": {
              "type": "MemberExpression",
              "start": 1557,
              "end": 1573,
              "object": {
                "type": "Identifier",
                "start": 1557,
                "end": 1565,
                "name": "Temporal"
              },
              "property": {
                "type": "Identifier",
                "start": 1566,
                "end": 1573,
                "name": "Instant"
              },
              "computed": false,
              "optional": false
            },
            "arguments": [
              {
                "type": "Literal",
                "start": 1574,
                "end": 1576,
                "value": "0n"
              }
            ]
          }
        }
      ],
      "kind": "const"
    },
    {
      "type": "ForOfStatement",
      "start": 1579,
      "end": 1749,
      "await": false,
      "left": {
        "type": "VariableDeclaration",
        "start": 1584,
        "end": 1593,
        "declarations": [
          {
            "type": "VariableDeclarator",
            "start": 1590,
            "end": 1593,
            "id": {
              "type": "Identifier",
              "start": 1590,
              "end": 1593,
              "name": "arg"
            },
            "init": null
          }
        ],
        "kind": "const"
      },
      "right": {
        "type": "Identifier",
        "start": 1597,
        "end": 1611,
        "name": "invalidStrings"
      },
      "body": {
        "type": "BlockStatement",
        "start": 1613,
        "end": 1749,
        "body": [
          {
            "type": "ExpressionStatement",
            "start": 1617,
            "end": 1747,
            "expression": {
              "type": "CallExpression",
              "start": 1617,
              "end": 1746,
              "callee": {
                "type": "MemberExpression",
                "start": 1617,
                "end": 1630,
                "object": {
                  "type": "Identifier",
                  "start": 1617,
                  "end": 1623,
                  "name": "assert"
                },
                "property": {
                  "type": "Identifier",
                  "start": 1624,
                  "end": 1630,
                  "name": "throws"
                },
                "computed": false,
                "optional": false
              },
              "arguments": [
                {
                  "type": "Identifier",
                  "start": 1636,
                  "end": 1646,
                  "name": "RangeError"
                },
                {
                  "type": "ArrowFunctionExpression",
                  "start": 1652,
                  "end": 1678,
                  "id": null,
                  "expression": true,
                  "generator": false,
                  "async": false,
                  "params": [],
                  "body": {
                    "type": "CallExpression",
                    "start": 1658,
                    "end": 1678,
                    "callee": {
                      "type": "MemberExpression",
                      "start": 1658,
                      "end": 1673,
                      "object": {
                        "type": "Identifier",
                        "start": 1658,
                        "end": 1666,
                        "name": "instance"
                      },
                      "property": {
                        "type": "Identifier",
                        "start": 1667,
                        "end": 1673,
                        "name": "equals"
                      },
                      "computed": false,
                      "optional": false
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "start": 1674,
                        "end": 1677,
                        "name": "arg"
                      }
                    ],
                    "optional": false
                  }
                },
                {
                  "type": "TemplateLiteral",
                  "start": 1684,
                  "end": 1742,
                  "expressions": [
                    {
                      "type": "Identifier",
                      "start": 1688,
                      "end": 1691,
                      "name": "arg"
                    }
                  ],
                  "quasis": [
                    {
                      "type": "TemplateElement",
                      "start": 1685,
                      "end": 1686,
                      "value": {
                        "raw": "\"",
                        "cooked": "\""
                      },
                      "tail": false
                    },
                    {
                      "type": "TemplateElement",
                      "start": 1692,
                      "end": 1741,
                      "value": {
                        "raw": "\" should not be a valid ISO string for an Instant",
                        "cooked": "\" should not be a valid ISO string for an Instant"
                      },
                      "tail": true
                    }
                  ]
                }
              ],
              "optional": false
            }
          }
        ]
      }
    }
  ],
  "sourceType": "script"
}