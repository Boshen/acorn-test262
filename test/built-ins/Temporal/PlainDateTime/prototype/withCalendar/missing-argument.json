{
  "type": "Program",
  "start": 0,
  "end": 533,
  "body": [
    {
      "type": "VariableDeclaration",
      "start": 282,
      "end": 355,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 288,
          "end": 354,
          "id": {
            "type": "Identifier",
            "start": 288,
            "end": 301,
            "name": "plainDateTime"
          },
          "init": {
            "type": "CallExpression",
            "start": 304,
            "end": 354,
            "callee": {
              "type": "MemberExpression",
              "start": 304,
              "end": 331,
              "object": {
                "type": "MemberExpression",
                "start": 304,
                "end": 326,
                "object": {
                  "type": "Identifier",
                  "start": 304,
                  "end": 312,
                  "name": "Temporal"
                },
                "property": {
                  "type": "Identifier",
                  "start": 313,
                  "end": 326,
                  "name": "PlainDateTime"
                },
                "computed": false,
                "optional": false
              },
              "property": {
                "type": "Identifier",
                "start": 327,
                "end": 331,
                "name": "from"
              },
              "computed": false,
              "optional": false
            },
            "arguments": [
              {
                "type": "Literal",
                "start": 332,
                "end": 353,
                "value": "1976-11-18T14:00:00"
              }
            ],
            "optional": false
          }
        }
      ],
      "kind": "const"
    },
    {
      "type": "ExpressionStatement",
      "start": 356,
      "end": 438,
      "expression": {
        "type": "CallExpression",
        "start": 356,
        "end": 437,
        "callee": {
          "type": "MemberExpression",
          "start": 356,
          "end": 369,
          "object": {
            "type": "Identifier",
            "start": 356,
            "end": 362,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 363,
            "end": 369,
            "name": "throws"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "Identifier",
            "start": 370,
            "end": 380,
            "name": "RangeError"
          },
          {
            "type": "ArrowFunctionExpression",
            "start": 382,
            "end": 416,
            "id": null,
            "expression": true,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "CallExpression",
              "start": 388,
              "end": 416,
              "callee": {
                "type": "MemberExpression",
                "start": 388,
                "end": 414,
                "object": {
                  "type": "Identifier",
                  "start": 388,
                  "end": 401,
                  "name": "plainDateTime"
                },
                "property": {
                  "type": "Identifier",
                  "start": 402,
                  "end": 414,
                  "name": "withCalendar"
                },
                "computed": false,
                "optional": false
              },
              "arguments": [],
              "optional": false
            }
          },
          {
            "type": "Literal",
            "start": 418,
            "end": 436,
            "value": "missing argument"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 439,
      "end": 532,
      "expression": {
        "type": "CallExpression",
        "start": 439,
        "end": 531,
        "callee": {
          "type": "MemberExpression",
          "start": 439,
          "end": 452,
          "object": {
            "type": "Identifier",
            "start": 439,
            "end": 445,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 446,
            "end": 452,
            "name": "throws"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "Identifier",
            "start": 453,
            "end": 463,
            "name": "RangeError"
          },
          {
            "type": "ArrowFunctionExpression",
            "start": 465,
            "end": 508,
            "id": null,
            "expression": true,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "CallExpression",
              "start": 471,
              "end": 508,
              "callee": {
                "type": "MemberExpression",
                "start": 471,
                "end": 497,
                "object": {
                  "type": "Identifier",
                  "start": 471,
                  "end": 484,
                  "name": "plainDateTime"
                },
                "property": {
                  "type": "Identifier",
                  "start": 485,
                  "end": 497,
                  "name": "withCalendar"
                },
                "computed": false,
                "optional": false
              },
              "arguments": [
                {
                  "type": "Identifier",
                  "start": 498,
                  "end": 507,
                  "name": "undefined"
                }
              ],
              "optional": false
            }
          },
          {
            "type": "Literal",
            "start": 510,
            "end": 530,
            "value": "undefined argument"
          }
        ],
        "optional": false
      }
    }
  ],
  "sourceType": "script"
}