{
  "type": "Program",
  "start": 0,
  "end": 809,
  "body": [
    {
      "type": "VariableDeclaration",
      "start": 520,
      "end": 539,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 524,
          "end": 538,
          "id": {
            "type": "Identifier",
            "start": 524,
            "end": 530,
            "name": "called"
          },
          "init": {
            "type": "Literal",
            "start": 533,
            "end": 538,
            "value": false
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "VariableDeclaration",
      "start": 541,
      "end": 604,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 545,
          "end": 603,
          "id": {
            "type": "Identifier",
            "start": 545,
            "end": 554,
            "name": "predicate"
          },
          "init": {
            "type": "FunctionExpression",
            "start": 557,
            "end": 603,
            "id": null,
            "expression": false,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "start": 568,
              "end": 603,
              "body": [
                {
                  "type": "ExpressionStatement",
                  "start": 572,
                  "end": 586,
                  "expression": {
                    "type": "AssignmentExpression",
                    "start": 572,
                    "end": 585,
                    "operator": "=",
                    "left": {
                      "type": "Identifier",
                      "start": 572,
                      "end": 578,
                      "name": "called"
                    },
                    "right": {
                      "type": "Literal",
                      "start": 581,
                      "end": 585,
                      "value": true
                    }
                  }
                },
                {
                  "type": "ReturnStatement",
                  "start": 589,
                  "end": 601,
                  "argument": {
                    "type": "Literal",
                    "start": 596,
                    "end": 600,
                    "value": true
                  }
                }
              ]
            }
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "VariableDeclaration",
      "start": 606,
      "end": 642,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 610,
          "end": 641,
          "id": {
            "type": "Identifier",
            "start": 610,
            "end": 616,
            "name": "result"
          },
          "init": {
            "type": "CallExpression",
            "start": 619,
            "end": 641,
            "callee": {
              "type": "MemberExpression",
              "start": 619,
              "end": 630,
              "object": {
                "type": "ArrayExpression",
                "start": 619,
                "end": 621,
                "elements": []
              },
              "property": {
                "type": "Identifier",
                "start": 622,
                "end": 630,
                "name": "findLast"
              },
              "computed": false,
              "optional": false
            },
            "arguments": [
              {
                "type": "Identifier",
                "start": 631,
                "end": 640,
                "name": "predicate"
              }
            ],
            "optional": false
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "ExpressionStatement",
      "start": 644,
      "end": 726,
      "expression": {
        "type": "CallExpression",
        "start": 644,
        "end": 725,
        "callee": {
          "type": "MemberExpression",
          "start": 644,
          "end": 660,
          "object": {
            "type": "Identifier",
            "start": 644,
            "end": 650,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 651,
            "end": 660,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "Identifier",
            "start": 661,
            "end": 667,
            "name": "called"
          },
          {
            "type": "Literal",
            "start": 669,
            "end": 674,
            "value": false
          },
          {
            "type": "Literal",
            "start": 676,
            "end": 724,
            "value": "[].findLast(predicate) does not call predicate"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 727,
      "end": 808,
      "expression": {
        "type": "CallExpression",
        "start": 727,
        "end": 807,
        "callee": {
          "type": "MemberExpression",
          "start": 727,
          "end": 743,
          "object": {
            "type": "Identifier",
            "start": 727,
            "end": 733,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 734,
            "end": 743,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "Identifier",
            "start": 744,
            "end": 750,
            "name": "result"
          },
          {
            "type": "Identifier",
            "start": 752,
            "end": 761,
            "name": "undefined"
          },
          {
            "type": "Literal",
            "start": 763,
            "end": 806,
            "value": "[].findLast(predicate) returned undefined"
          }
        ],
        "optional": false
      }
    }
  ],
  "sourceType": "script"
}