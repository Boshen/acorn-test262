{
  "type": "Program",
  "start": 0,
  "end": 753,
  "body": [
    {
      "type": "VariableDeclaration",
      "start": 476,
      "end": 495,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 480,
          "end": 494,
          "id": {
            "type": "Identifier",
            "start": 480,
            "end": 486,
            "name": "called"
          },
          "init": {
            "type": "Literal",
            "start": 489,
            "end": 494,
            "value": false
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "VariableDeclaration",
      "start": 497,
      "end": 560,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 501,
          "end": 559,
          "id": {
            "type": "Identifier",
            "start": 501,
            "end": 510,
            "name": "predicate"
          },
          "init": {
            "type": "FunctionExpression",
            "start": 513,
            "end": 559,
            "id": null,
            "expression": false,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "start": 524,
              "end": 559,
              "body": [
                {
                  "type": "ExpressionStatement",
                  "start": 528,
                  "end": 542,
                  "expression": {
                    "type": "AssignmentExpression",
                    "start": 528,
                    "end": 541,
                    "operator": "=",
                    "left": {
                      "type": "Identifier",
                      "start": 528,
                      "end": 534,
                      "name": "called"
                    },
                    "right": {
                      "type": "Literal",
                      "start": 537,
                      "end": 541,
                      "value": true
                    }
                  }
                },
                {
                  "type": "ReturnStatement",
                  "start": 545,
                  "end": 557,
                  "argument": {
                    "type": "Literal",
                    "start": 552,
                    "end": 556,
                    "value": true
                  }
                }
              ]
            }
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "VariableDeclaration",
      "start": 562,
      "end": 594,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 566,
          "end": 593,
          "id": {
            "type": "Identifier",
            "start": 566,
            "end": 572,
            "name": "result"
          },
          "init": {
            "type": "CallExpression",
            "start": 575,
            "end": 593,
            "callee": {
              "type": "MemberExpression",
              "start": 575,
              "end": 582,
              "object": {
                "type": "ArrayExpression",
                "start": 575,
                "end": 577,
                "elements": []
              },
              "property": {
                "type": "Identifier",
                "start": 578,
                "end": 582,
                "name": "find"
              },
              "computed": false,
              "optional": false
            },
            "arguments": [
              {
                "type": "Identifier",
                "start": 583,
                "end": 592,
                "name": "predicate"
              }
            ],
            "optional": false
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "ExpressionStatement",
      "start": 596,
      "end": 674,
      "expression": {
        "type": "CallExpression",
        "start": 596,
        "end": 673,
        "callee": {
          "type": "MemberExpression",
          "start": 596,
          "end": 612,
          "object": {
            "type": "Identifier",
            "start": 596,
            "end": 602,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 603,
            "end": 612,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "Identifier",
            "start": 613,
            "end": 619,
            "name": "called"
          },
          {
            "type": "Literal",
            "start": 621,
            "end": 626,
            "value": false
          },
          {
            "type": "Literal",
            "start": 628,
            "end": 672,
            "value": "[].find(predicate) does not call predicate"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 675,
      "end": 752,
      "expression": {
        "type": "CallExpression",
        "start": 675,
        "end": 751,
        "callee": {
          "type": "MemberExpression",
          "start": 675,
          "end": 691,
          "object": {
            "type": "Identifier",
            "start": 675,
            "end": 681,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 682,
            "end": 691,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "Identifier",
            "start": 692,
            "end": 698,
            "name": "result"
          },
          {
            "type": "Identifier",
            "start": 700,
            "end": 709,
            "name": "undefined"
          },
          {
            "type": "Literal",
            "start": 711,
            "end": 750,
            "value": "[].find(predicate) returned undefined"
          }
        ],
        "optional": false
      }
    }
  ],
  "sourceType": "script"
}