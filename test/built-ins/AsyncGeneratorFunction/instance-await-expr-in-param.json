{
  "type": "Program",
  "start": 0,
  "end": 1347,
  "body": [
    {
      "type": "VariableDeclaration",
      "start": 627,
      "end": 713,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 631,
          "end": 712,
          "id": {
            "type": "Identifier",
            "start": 631,
            "end": 653,
            "name": "AsyncGeneratorFunction"
          },
          "init": {
            "type": "MemberExpression",
            "start": 656,
            "end": 712,
            "object": {
              "type": "CallExpression",
              "start": 656,
              "end": 700,
              "callee": {
                "type": "MemberExpression",
                "start": 656,
                "end": 677,
                "object": {
                  "type": "Identifier",
                  "start": 656,
                  "end": 662,
                  "name": "Object"
                },
                "property": {
                  "type": "Identifier",
                  "start": 663,
                  "end": 677,
                  "name": "getPrototypeOf"
                },
                "computed": false,
                "optional": false
              },
              "arguments": [
                {
                  "type": "FunctionExpression",
                  "start": 678,
                  "end": 699,
                  "id": null,
                  "expression": false,
                  "generator": true,
                  "async": true,
                  "params": [],
                  "body": {
                    "type": "BlockStatement",
                    "start": 697,
                    "end": 699,
                    "body": []
                  }
                }
              ],
              "optional": false
            },
            "property": {
              "type": "Identifier",
              "start": 701,
              "end": 712,
              "name": "constructor"
            },
            "computed": false,
            "optional": false
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "ExpressionStatement",
      "start": 765,
      "end": 804,
      "expression": {
        "type": "CallExpression",
        "start": 765,
        "end": 803,
        "callee": {
          "type": "Identifier",
          "start": 765,
          "end": 787,
          "name": "AsyncGeneratorFunction"
        },
        "arguments": [
          {
            "type": "Literal",
            "start": 788,
            "end": 802,
            "value": "x = await 42"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 806,
      "end": 942,
      "expression": {
        "type": "CallExpression",
        "start": 806,
        "end": 941,
        "callee": {
          "type": "MemberExpression",
          "start": 806,
          "end": 819,
          "object": {
            "type": "Identifier",
            "start": 806,
            "end": 812,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 813,
            "end": 819,
            "name": "throws"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "Identifier",
            "start": 820,
            "end": 831,
            "name": "SyntaxError"
          },
          {
            "type": "FunctionExpression",
            "start": 833,
            "end": 893,
            "id": null,
            "expression": false,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "start": 844,
              "end": 893,
              "body": [
                {
                  "type": "ExpressionStatement",
                  "start": 848,
                  "end": 891,
                  "expression": {
                    "type": "CallExpression",
                    "start": 848,
                    "end": 890,
                    "callee": {
                      "type": "Identifier",
                      "start": 848,
                      "end": 870,
                      "name": "AsyncGeneratorFunction"
                    },
                    "arguments": [
                      {
                        "type": "Literal",
                        "start": 871,
                        "end": 885,
                        "value": "x = await 42"
                      },
                      {
                        "type": "Literal",
                        "start": 887,
                        "end": 889,
                        "value": ""
                      }
                    ],
                    "optional": false
                  }
                }
              ]
            }
          },
          {
            "type": "Literal",
            "start": 895,
            "end": 940,
            "value": "AwaitExpression not permitted in parameters"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "VariableDeclaration",
      "start": 944,
      "end": 1039,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 948,
          "end": 1038,
          "id": {
            "type": "Identifier",
            "start": 948,
            "end": 968,
            "name": "withinAsyncGenerator"
          },
          "init": {
            "type": "FunctionExpression",
            "start": 971,
            "end": 1038,
            "id": null,
            "expression": false,
            "generator": true,
            "async": true,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "start": 989,
              "end": 1038,
              "body": [
                {
                  "type": "ExpressionStatement",
                  "start": 993,
                  "end": 1036,
                  "expression": {
                    "type": "CallExpression",
                    "start": 993,
                    "end": 1035,
                    "callee": {
                      "type": "Identifier",
                      "start": 993,
                      "end": 1015,
                      "name": "AsyncGeneratorFunction"
                    },
                    "arguments": [
                      {
                        "type": "Literal",
                        "start": 1016,
                        "end": 1030,
                        "value": "x = await 42"
                      },
                      {
                        "type": "Literal",
                        "start": 1032,
                        "end": 1034,
                        "value": ""
                      }
                    ],
                    "optional": false
                  }
                }
              ]
            }
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "ExpressionStatement",
      "start": 1041,
      "end": 1346,
      "expression": {
        "type": "CallExpression",
        "start": 1041,
        "end": 1345,
        "callee": {
          "type": "MemberExpression",
          "start": 1041,
          "end": 1331,
          "object": {
            "type": "CallExpression",
            "start": 1041,
            "end": 1326,
            "callee": {
              "type": "MemberExpression",
              "start": 1041,
              "end": 1075,
              "object": {
                "type": "CallExpression",
                "start": 1041,
                "end": 1070,
                "callee": {
                  "type": "MemberExpression",
                  "start": 1041,
                  "end": 1068,
                  "object": {
                    "type": "CallExpression",
                    "start": 1041,
                    "end": 1063,
                    "callee": {
                      "type": "Identifier",
                      "start": 1041,
                      "end": 1061,
                      "name": "withinAsyncGenerator"
                    },
                    "arguments": [],
                    "optional": false
                  },
                  "property": {
                    "type": "Identifier",
                    "start": 1064,
                    "end": 1068,
                    "name": "next"
                  },
                  "computed": false,
                  "optional": false
                },
                "arguments": [],
                "optional": false
              },
              "property": {
                "type": "Identifier",
                "start": 1071,
                "end": 1075,
                "name": "then"
              },
              "computed": false,
              "optional": false
            },
            "arguments": [
              {
                "type": "FunctionExpression",
                "start": 1078,
                "end": 1196,
                "id": null,
                "expression": false,
                "generator": false,
                "async": false,
                "params": [],
                "body": {
                  "type": "BlockStatement",
                  "start": 1090,
                  "end": 1196,
                  "body": [
                    {
                      "type": "ThrowStatement",
                      "start": 1095,
                      "end": 1193,
                      "argument": {
                        "type": "NewExpression",
                        "start": 1101,
                        "end": 1192,
                        "callee": {
                          "type": "Identifier",
                          "start": 1105,
                          "end": 1117,
                          "name": "Test262Error"
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "start": 1118,
                            "end": 1191,
                            "value": "AwaitExpression not permitted when calling context is a async generator"
                          }
                        ]
                      }
                    }
                  ]
                }
              },
              {
                "type": "FunctionExpression",
                "start": 1199,
                "end": 1324,
                "id": null,
                "expression": false,
                "generator": false,
                "async": false,
                "params": [
                  {
                    "type": "Identifier",
                    "start": 1209,
                    "end": 1210,
                    "name": "e"
                  }
                ],
                "body": {
                  "type": "BlockStatement",
                  "start": 1212,
                  "end": 1324,
                  "body": [
                    {
                      "type": "IfStatement",
                      "start": 1217,
                      "end": 1321,
                      "test": {
                        "type": "UnaryExpression",
                        "start": 1221,
                        "end": 1248,
                        "operator": "!",
                        "prefix": true,
                        "argument": {
                          "type": "ParenthesizedExpression",
                          "start": 1222,
                          "end": 1248,
                          "expression": {
                            "type": "BinaryExpression",
                            "start": 1223,
                            "end": 1247,
                            "left": {
                              "type": "Identifier",
                              "start": 1223,
                              "end": 1224,
                              "name": "e"
                            },
                            "operator": "instanceof",
                            "right": {
                              "type": "Identifier",
                              "start": 1236,
                              "end": 1247,
                              "name": "SyntaxError"
                            }
                          }
                        }
                      },
                      "consequent": {
                        "type": "BlockStatement",
                        "start": 1250,
                        "end": 1321,
                        "body": [
                          {
                            "type": "ThrowStatement",
                            "start": 1256,
                            "end": 1316,
                            "argument": {
                              "type": "NewExpression",
                              "start": 1262,
                              "end": 1315,
                              "callee": {
                                "type": "Identifier",
                                "start": 1266,
                                "end": 1278,
                                "name": "Test262Error"
                              },
                              "arguments": [
                                {
                                  "type": "BinaryExpression",
                                  "start": 1279,
                                  "end": 1314,
                                  "left": {
                                    "type": "Literal",
                                    "start": 1279,
                                    "end": 1310,
                                    "value": "Expected SyntaxError but got "
                                  },
                                  "operator": "+",
                                  "right": {
                                    "type": "Identifier",
                                    "start": 1313,
                                    "end": 1314,
                                    "name": "e"
                                  }
                                }
                              ]
                            }
                          }
                        ]
                      },
                      "alternate": null
                    }
                  ]
                }
              }
            ],
            "optional": false
          },
          "property": {
            "type": "Identifier",
            "start": 1327,
            "end": 1331,
            "name": "then"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "Identifier",
            "start": 1332,
            "end": 1337,
            "name": "$DONE"
          },
          {
            "type": "Identifier",
            "start": 1339,
            "end": 1344,
            "name": "$DONE"
          }
        ],
        "optional": false
      }
    }
  ],
  "sourceType": "script"
}