{
  "type": "Program",
  "start": 0,
  "end": 1338,
  "body": [
    {
      "type": "VariableDeclaration",
      "start": 631,
      "end": 717,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 635,
          "end": 716,
          "id": {
            "type": "Identifier",
            "start": 635,
            "end": 657,
            "name": "AsyncGeneratorFunction"
          },
          "init": {
            "type": "MemberExpression",
            "start": 660,
            "end": 716,
            "object": {
              "type": "CallExpression",
              "start": 660,
              "end": 704,
              "callee": {
                "type": "MemberExpression",
                "start": 660,
                "end": 681,
                "object": {
                  "type": "Identifier",
                  "start": 660,
                  "end": 666,
                  "name": "Object"
                },
                "property": {
                  "type": "Identifier",
                  "start": 667,
                  "end": 681,
                  "name": "getPrototypeOf"
                },
                "computed": false,
                "optional": false
              },
              "arguments": [
                {
                  "type": "FunctionExpression",
                  "start": 682,
                  "end": 703,
                  "id": null,
                  "expression": false,
                  "generator": true,
                  "async": true,
                  "params": [],
                  "body": {
                    "type": "BlockStatement",
                    "start": 701,
                    "end": 703,
                    "body": []
                  }
                }
              ],
              "optional": false
            },
            "property": {
              "type": "Identifier",
              "start": 705,
              "end": 716,
              "name": "constructor"
            },
            "computed": false,
            "optional": false
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "ExpressionStatement",
      "start": 769,
      "end": 805,
      "expression": {
        "type": "CallExpression",
        "start": 769,
        "end": 804,
        "callee": {
          "type": "Identifier",
          "start": 769,
          "end": 791,
          "name": "AsyncGeneratorFunction"
        },
        "arguments": [
          {
            "type": "Literal",
            "start": 792,
            "end": 803,
            "value": "x = yield"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 807,
      "end": 936,
      "expression": {
        "type": "CallExpression",
        "start": 807,
        "end": 935,
        "callee": {
          "type": "MemberExpression",
          "start": 807,
          "end": 820,
          "object": {
            "type": "Identifier",
            "start": 807,
            "end": 813,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 814,
            "end": 820,
            "name": "throws"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "Identifier",
            "start": 821,
            "end": 832,
            "name": "SyntaxError"
          },
          {
            "type": "FunctionExpression",
            "start": 834,
            "end": 891,
            "id": null,
            "expression": false,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "start": 845,
              "end": 891,
              "body": [
                {
                  "type": "ExpressionStatement",
                  "start": 849,
                  "end": 889,
                  "expression": {
                    "type": "CallExpression",
                    "start": 849,
                    "end": 888,
                    "callee": {
                      "type": "Identifier",
                      "start": 849,
                      "end": 871,
                      "name": "AsyncGeneratorFunction"
                    },
                    "arguments": [
                      {
                        "type": "Literal",
                        "start": 872,
                        "end": 883,
                        "value": "x = yield"
                      },
                      {
                        "type": "Literal",
                        "start": 885,
                        "end": 887,
                        "value": ""
                      }
                    ],
                    "optional": false
                  }
                }
              ]
            }
          },
          {
            "type": "Literal",
            "start": 893,
            "end": 934,
            "value": "YieldExpression not permitted generally"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "VariableDeclaration",
      "start": 938,
      "end": 1030,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 942,
          "end": 1029,
          "id": {
            "type": "Identifier",
            "start": 942,
            "end": 962,
            "name": "withinAsyncGenerator"
          },
          "init": {
            "type": "FunctionExpression",
            "start": 965,
            "end": 1029,
            "id": null,
            "expression": false,
            "generator": true,
            "async": true,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "start": 983,
              "end": 1029,
              "body": [
                {
                  "type": "ExpressionStatement",
                  "start": 987,
                  "end": 1027,
                  "expression": {
                    "type": "CallExpression",
                    "start": 987,
                    "end": 1026,
                    "callee": {
                      "type": "Identifier",
                      "start": 987,
                      "end": 1009,
                      "name": "AsyncGeneratorFunction"
                    },
                    "arguments": [
                      {
                        "type": "Literal",
                        "start": 1010,
                        "end": 1021,
                        "value": "x = yield"
                      },
                      {
                        "type": "Literal",
                        "start": 1023,
                        "end": 1025,
                        "value": ""
                      }
                    ],
                    "optional": false
                  }
                }
              ]
            }
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "ExpressionStatement",
      "start": 1032,
      "end": 1337,
      "expression": {
        "type": "CallExpression",
        "start": 1032,
        "end": 1336,
        "callee": {
          "type": "MemberExpression",
          "start": 1032,
          "end": 1322,
          "object": {
            "type": "CallExpression",
            "start": 1032,
            "end": 1317,
            "callee": {
              "type": "MemberExpression",
              "start": 1032,
              "end": 1066,
              "object": {
                "type": "CallExpression",
                "start": 1032,
                "end": 1061,
                "callee": {
                  "type": "MemberExpression",
                  "start": 1032,
                  "end": 1059,
                  "object": {
                    "type": "CallExpression",
                    "start": 1032,
                    "end": 1054,
                    "callee": {
                      "type": "Identifier",
                      "start": 1032,
                      "end": 1052,
                      "name": "withinAsyncGenerator"
                    },
                    "arguments": [],
                    "optional": false
                  },
                  "property": {
                    "type": "Identifier",
                    "start": 1055,
                    "end": 1059,
                    "name": "next"
                  },
                  "computed": false,
                  "optional": false
                },
                "arguments": [],
                "optional": false
              },
              "property": {
                "type": "Identifier",
                "start": 1062,
                "end": 1066,
                "name": "then"
              },
              "computed": false,
              "optional": false
            },
            "arguments": [
              {
                "type": "FunctionExpression",
                "start": 1069,
                "end": 1187,
                "id": null,
                "expression": false,
                "generator": false,
                "async": false,
                "params": [],
                "body": {
                  "type": "BlockStatement",
                  "start": 1081,
                  "end": 1187,
                  "body": [
                    {
                      "type": "ThrowStatement",
                      "start": 1086,
                      "end": 1184,
                      "argument": {
                        "type": "NewExpression",
                        "start": 1092,
                        "end": 1183,
                        "callee": {
                          "type": "Identifier",
                          "start": 1096,
                          "end": 1108,
                          "name": "Test262Error"
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "start": 1109,
                            "end": 1182,
                            "value": "YieldExpression not permitted when calling context is a async generator"
                          }
                        ]
                      }
                    }
                  ]
                }
              },
              {
                "type": "FunctionExpression",
                "start": 1190,
                "end": 1315,
                "id": null,
                "expression": false,
                "generator": false,
                "async": false,
                "params": [
                  {
                    "type": "Identifier",
                    "start": 1200,
                    "end": 1201,
                    "name": "e"
                  }
                ],
                "body": {
                  "type": "BlockStatement",
                  "start": 1203,
                  "end": 1315,
                  "body": [
                    {
                      "type": "IfStatement",
                      "start": 1208,
                      "end": 1312,
                      "test": {
                        "type": "UnaryExpression",
                        "start": 1212,
                        "end": 1239,
                        "operator": "!",
                        "prefix": true,
                        "argument": {
                          "type": "ParenthesizedExpression",
                          "start": 1213,
                          "end": 1239,
                          "expression": {
                            "type": "BinaryExpression",
                            "start": 1214,
                            "end": 1238,
                            "left": {
                              "type": "Identifier",
                              "start": 1214,
                              "end": 1215,
                              "name": "e"
                            },
                            "operator": "instanceof",
                            "right": {
                              "type": "Identifier",
                              "start": 1227,
                              "end": 1238,
                              "name": "SyntaxError"
                            }
                          }
                        }
                      },
                      "consequent": {
                        "type": "BlockStatement",
                        "start": 1241,
                        "end": 1312,
                        "body": [
                          {
                            "type": "ThrowStatement",
                            "start": 1247,
                            "end": 1307,
                            "argument": {
                              "type": "NewExpression",
                              "start": 1253,
                              "end": 1306,
                              "callee": {
                                "type": "Identifier",
                                "start": 1257,
                                "end": 1269,
                                "name": "Test262Error"
                              },
                              "arguments": [
                                {
                                  "type": "BinaryExpression",
                                  "start": 1270,
                                  "end": 1305,
                                  "left": {
                                    "type": "Literal",
                                    "start": 1270,
                                    "end": 1301,
                                    "value": "Expected SyntaxError but got "
                                  },
                                  "operator": "+",
                                  "right": {
                                    "type": "Identifier",
                                    "start": 1304,
                                    "end": 1305,
                                    "name": "e"
                                  }
                                }
                              ]
                            }
                          }
                        ]
                      },
                      "alternate": null
                    }
                  ]
                }
              }
            ],
            "optional": false
          },
          "property": {
            "type": "Identifier",
            "start": 1318,
            "end": 1322,
            "name": "then"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "Identifier",
            "start": 1323,
            "end": 1328,
            "name": "$DONE"
          },
          {
            "type": "Identifier",
            "start": 1330,
            "end": 1335,
            "name": "$DONE"
          }
        ],
        "optional": false
      }
    }
  ],
  "sourceType": "script"
}