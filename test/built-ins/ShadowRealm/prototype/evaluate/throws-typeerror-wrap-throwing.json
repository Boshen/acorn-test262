{
  "type": "Program",
  "start": 0,
  "end": 1854,
  "body": [
    {
      "type": "ExpressionStatement",
      "start": 803,
      "end": 954,
      "expression": {
        "type": "CallExpression",
        "start": 803,
        "end": 953,
        "callee": {
          "type": "MemberExpression",
          "start": 803,
          "end": 819,
          "object": {
            "type": "Identifier",
            "start": 803,
            "end": 809,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 810,
            "end": 819,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "UnaryExpression",
            "start": 823,
            "end": 860,
            "operator": "typeof",
            "prefix": true,
            "argument": {
              "type": "MemberExpression",
              "start": 830,
              "end": 860,
              "object": {
                "type": "MemberExpression",
                "start": 830,
                "end": 851,
                "object": {
                  "type": "Identifier",
                  "start": 830,
                  "end": 841,
                  "name": "ShadowRealm"
                },
                "property": {
                  "type": "Identifier",
                  "start": 842,
                  "end": 851,
                  "name": "prototype"
                },
                "computed": false,
                "optional": false
              },
              "property": {
                "type": "Identifier",
                "start": 852,
                "end": 860,
                "name": "evaluate"
              },
              "computed": false,
              "optional": false
            }
          },
          {
            "type": "Literal",
            "start": 864,
            "end": 874,
            "value": "function"
          },
          {
            "type": "Literal",
            "start": 878,
            "end": 951,
            "value": "This test must fail if ShadowRealm.prototype.evaluate is not a function"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "VariableDeclaration",
      "start": 956,
      "end": 984,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 962,
          "end": 983,
          "id": {
            "type": "Identifier",
            "start": 962,
            "end": 963,
            "name": "r"
          },
          "init": {
            "type": "NewExpression",
            "start": 966,
            "end": 983,
            "callee": {
              "type": "Identifier",
              "start": 970,
              "end": 981,
              "name": "ShadowRealm"
            },
            "arguments": []
          }
        }
      ],
      "kind": "const"
    },
    {
      "type": "ExpressionStatement",
      "start": 986,
      "end": 1171,
      "expression": {
        "type": "CallExpression",
        "start": 986,
        "end": 1170,
        "callee": {
          "type": "MemberExpression",
          "start": 986,
          "end": 999,
          "object": {
            "type": "Identifier",
            "start": 986,
            "end": 992,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 993,
            "end": 999,
            "name": "throws"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "Identifier",
            "start": 1000,
            "end": 1009,
            "name": "TypeError"
          },
          {
            "type": "ArrowFunctionExpression",
            "start": 1011,
            "end": 1119,
            "id": null,
            "expression": true,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "CallExpression",
              "start": 1017,
              "end": 1119,
              "callee": {
                "type": "MemberExpression",
                "start": 1017,
                "end": 1027,
                "object": {
                  "type": "Identifier",
                  "start": 1017,
                  "end": 1018,
                  "name": "r"
                },
                "property": {
                  "type": "Identifier",
                  "start": 1019,
                  "end": 1027,
                  "name": "evaluate"
                },
                "computed": false,
                "optional": false
              },
              "arguments": [
                {
                  "type": "TemplateLiteral",
                  "start": 1028,
                  "end": 1118,
                  "expressions": [],
                  "quasis": [
                    {
                      "type": "TemplateElement",
                      "start": 1029,
                      "end": 1117,
                      "value": {
                        "raw": "\nconst revocable = Proxy.revocable(() => {}, {});\nrevocable.revoke();\n\nrevocable.proxy;\n",
                        "cooked": "\nconst revocable = Proxy.revocable(() => {}, {});\nrevocable.revoke();\n\nrevocable.proxy;\n"
                      },
                      "tail": true
                    }
                  ]
                }
              ],
              "optional": false
            }
          },
          {
            "type": "Literal",
            "start": 1121,
            "end": 1169,
            "value": "TypeError on wrapping a revoked callable proxy"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1173,
      "end": 1383,
      "expression": {
        "type": "CallExpression",
        "start": 1173,
        "end": 1382,
        "callee": {
          "type": "MemberExpression",
          "start": 1173,
          "end": 1186,
          "object": {
            "type": "Identifier",
            "start": 1173,
            "end": 1179,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1180,
            "end": 1186,
            "name": "throws"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "Identifier",
            "start": 1187,
            "end": 1196,
            "name": "TypeError"
          },
          {
            "type": "ArrowFunctionExpression",
            "start": 1198,
            "end": 1323,
            "id": null,
            "expression": true,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "CallExpression",
              "start": 1204,
              "end": 1323,
              "callee": {
                "type": "MemberExpression",
                "start": 1204,
                "end": 1214,
                "object": {
                  "type": "Identifier",
                  "start": 1204,
                  "end": 1205,
                  "name": "r"
                },
                "property": {
                  "type": "Identifier",
                  "start": 1206,
                  "end": 1214,
                  "name": "evaluate"
                },
                "computed": false,
                "optional": false
              },
              "arguments": [
                {
                  "type": "TemplateLiteral",
                  "start": 1215,
                  "end": 1322,
                  "expressions": [],
                  "quasis": [
                    {
                      "type": "TemplateElement",
                      "start": 1216,
                      "end": 1321,
                      "value": {
                        "raw": "\nconst fn = () => {};\nObject.defineProperty(fn, 'name', {\n  get() {\n    throw new Error();\n  },\n});\n\nfn;\n",
                        "cooked": "\nconst fn = () => {};\nObject.defineProperty(fn, 'name', {\n  get() {\n    throw new Error();\n  },\n});\n\nfn;\n"
                      },
                      "tail": true
                    }
                  ]
                }
              ],
              "optional": false
            }
          },
          {
            "type": "Literal",
            "start": 1325,
            "end": 1381,
            "value": "TypeError on wrapping a fn with throwing name accessor"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1385,
      "end": 1599,
      "expression": {
        "type": "CallExpression",
        "start": 1385,
        "end": 1598,
        "callee": {
          "type": "MemberExpression",
          "start": 1385,
          "end": 1398,
          "object": {
            "type": "Identifier",
            "start": 1385,
            "end": 1391,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1392,
            "end": 1398,
            "name": "throws"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "Identifier",
            "start": 1399,
            "end": 1408,
            "name": "TypeError"
          },
          {
            "type": "ArrowFunctionExpression",
            "start": 1410,
            "end": 1537,
            "id": null,
            "expression": true,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "CallExpression",
              "start": 1416,
              "end": 1537,
              "callee": {
                "type": "MemberExpression",
                "start": 1416,
                "end": 1426,
                "object": {
                  "type": "Identifier",
                  "start": 1416,
                  "end": 1417,
                  "name": "r"
                },
                "property": {
                  "type": "Identifier",
                  "start": 1418,
                  "end": 1426,
                  "name": "evaluate"
                },
                "computed": false,
                "optional": false
              },
              "arguments": [
                {
                  "type": "TemplateLiteral",
                  "start": 1427,
                  "end": 1536,
                  "expressions": [],
                  "quasis": [
                    {
                      "type": "TemplateElement",
                      "start": 1428,
                      "end": 1535,
                      "value": {
                        "raw": "\nconst fn = () => {};\nObject.defineProperty(fn, 'length', {\n  get() {\n    throw new Error();\n  },\n});\n\nfn;\n",
                        "cooked": "\nconst fn = () => {};\nObject.defineProperty(fn, 'length', {\n  get() {\n    throw new Error();\n  },\n});\n\nfn;\n"
                      },
                      "tail": true
                    }
                  ]
                }
              ],
              "optional": false
            }
          },
          {
            "type": "Literal",
            "start": 1539,
            "end": 1597,
            "value": "TypeError on wrapping a fn with throwing length accessor"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1601,
      "end": 1853,
      "expression": {
        "type": "CallExpression",
        "start": 1601,
        "end": 1852,
        "callee": {
          "type": "MemberExpression",
          "start": 1601,
          "end": 1614,
          "object": {
            "type": "Identifier",
            "start": 1601,
            "end": 1607,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1608,
            "end": 1614,
            "name": "throws"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "Identifier",
            "start": 1615,
            "end": 1624,
            "name": "TypeError"
          },
          {
            "type": "ArrowFunctionExpression",
            "start": 1626,
            "end": 1765,
            "id": null,
            "expression": true,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "CallExpression",
              "start": 1632,
              "end": 1765,
              "callee": {
                "type": "MemberExpression",
                "start": 1632,
                "end": 1642,
                "object": {
                  "type": "Identifier",
                  "start": 1632,
                  "end": 1633,
                  "name": "r"
                },
                "property": {
                  "type": "Identifier",
                  "start": 1634,
                  "end": 1642,
                  "name": "evaluate"
                },
                "computed": false,
                "optional": false
              },
              "arguments": [
                {
                  "type": "TemplateLiteral",
                  "start": 1643,
                  "end": 1764,
                  "expressions": [],
                  "quasis": [
                    {
                      "type": "TemplateElement",
                      "start": 1644,
                      "end": 1763,
                      "value": {
                        "raw": "\nconst proxy = new Proxy(() => {}, {\n  getOwnPropertyDescriptor(target, key) {\n    throw new Error();\n  },\n});\n\nproxy;\n",
                        "cooked": "\nconst proxy = new Proxy(() => {}, {\n  getOwnPropertyDescriptor(target, key) {\n    throw new Error();\n  },\n});\n\nproxy;\n"
                      },
                      "tail": true
                    }
                  ]
                }
              ],
              "optional": false
            }
          },
          {
            "type": "Literal",
            "start": 1767,
            "end": 1851,
            "value": "TypeError on wrapping a callable proxy with throwing getOwnPropertyDescriptor trap"
          }
        ],
        "optional": false
      }
    }
  ],
  "sourceType": "script"
}