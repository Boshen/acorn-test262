{
  "type": "Program",
  "start": 0,
  "end": 1149,
  "body": [
    {
      "type": "VariableDeclaration",
      "start": 643,
      "end": 656,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 647,
          "end": 655,
          "id": {
            "type": "Identifier",
            "start": 647,
            "end": 650,
            "name": "arr"
          },
          "init": {
            "type": "ArrayExpression",
            "start": 653,
            "end": 655,
            "elements": []
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "FunctionDeclaration",
      "start": 658,
      "end": 718,
      "id": {
        "type": "Identifier",
        "start": 667,
        "end": 674,
        "name": "set_fun"
      },
      "expression": false,
      "generator": false,
      "async": false,
      "params": [
        {
          "type": "Identifier",
          "start": 675,
          "end": 680,
          "name": "value"
        }
      ],
      "body": {
        "type": "BlockStatement",
        "start": 682,
        "end": 718,
        "body": [
          {
            "type": "ExpressionStatement",
            "start": 686,
            "end": 716,
            "expression": {
              "type": "AssignmentExpression",
              "start": 686,
              "end": 715,
              "operator": "=",
              "left": {
                "type": "MemberExpression",
                "start": 686,
                "end": 707,
                "object": {
                  "type": "Identifier",
                  "start": 686,
                  "end": 689,
                  "name": "arr"
                },
                "property": {
                  "type": "Identifier",
                  "start": 690,
                  "end": 707,
                  "name": "setVerifyHelpProp"
                },
                "computed": false,
                "optional": false
              },
              "right": {
                "type": "Identifier",
                "start": 710,
                "end": 715,
                "name": "value"
              }
            }
          }
        ]
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 719,
      "end": 771,
      "expression": {
        "type": "CallExpression",
        "start": 719,
        "end": 770,
        "callee": {
          "type": "MemberExpression",
          "start": 719,
          "end": 740,
          "object": {
            "type": "Identifier",
            "start": 719,
            "end": 725,
            "name": "Object"
          },
          "property": {
            "type": "Identifier",
            "start": 726,
            "end": 740,
            "name": "defineProperty"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "Identifier",
            "start": 741,
            "end": 744,
            "name": "arr"
          },
          {
            "type": "Literal",
            "start": 746,
            "end": 749,
            "value": "1"
          },
          {
            "type": "ObjectExpression",
            "start": 751,
            "end": 769,
            "properties": [
              {
                "type": "Property",
                "start": 755,
                "end": 767,
                "method": false,
                "shorthand": false,
                "computed": false,
                "key": {
                  "type": "Identifier",
                  "start": 755,
                  "end": 758,
                  "name": "set"
                },
                "value": {
                  "type": "Identifier",
                  "start": 760,
                  "end": 767,
                  "name": "set_fun"
                },
                "kind": "init"
              }
            ]
          }
        ],
        "optional": false
      }
    },
    {
      "type": "TryStatement",
      "start": 773,
      "end": 1148,
      "block": {
        "type": "BlockStatement",
        "start": 777,
        "end": 914,
        "body": [
          {
            "type": "ExpressionStatement",
            "start": 781,
            "end": 859,
            "expression": {
              "type": "CallExpression",
              "start": 781,
              "end": 858,
              "callee": {
                "type": "MemberExpression",
                "start": 781,
                "end": 804,
                "object": {
                  "type": "Identifier",
                  "start": 781,
                  "end": 787,
                  "name": "Object"
                },
                "property": {
                  "type": "Identifier",
                  "start": 788,
                  "end": 804,
                  "name": "defineProperties"
                },
                "computed": false,
                "optional": false
              },
              "arguments": [
                {
                  "type": "Identifier",
                  "start": 805,
                  "end": 808,
                  "name": "arr"
                },
                {
                  "type": "ObjectExpression",
                  "start": 810,
                  "end": 857,
                  "properties": [
                    {
                      "type": "Property",
                      "start": 816,
                      "end": 853,
                      "method": false,
                      "shorthand": false,
                      "computed": false,
                      "key": {
                        "type": "Literal",
                        "start": 816,
                        "end": 819,
                        "value": "1"
                      },
                      "value": {
                        "type": "ObjectExpression",
                        "start": 821,
                        "end": 853,
                        "properties": [
                          {
                            "type": "Property",
                            "start": 829,
                            "end": 847,
                            "method": false,
                            "shorthand": false,
                            "computed": false,
                            "key": {
                              "type": "Identifier",
                              "start": 829,
                              "end": 832,
                              "name": "set"
                            },
                            "value": {
                              "type": "FunctionExpression",
                              "start": 834,
                              "end": 847,
                              "id": null,
                              "expression": false,
                              "generator": false,
                              "async": false,
                              "params": [],
                              "body": {
                                "type": "BlockStatement",
                                "start": 845,
                                "end": 847,
                                "body": []
                              }
                            },
                            "kind": "init"
                          }
                        ]
                      },
                      "kind": "init"
                    }
                  ]
                }
              ],
              "optional": false
            }
          },
          {
            "type": "ThrowStatement",
            "start": 863,
            "end": 912,
            "argument": {
              "type": "NewExpression",
              "start": 869,
              "end": 911,
              "callee": {
                "type": "Identifier",
                "start": 873,
                "end": 885,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 886,
                  "end": 910,
                  "value": "Expected an exception."
                }
              ]
            }
          }
        ]
      },
      "handler": {
        "type": "CatchClause",
        "start": 915,
        "end": 1148,
        "param": {
          "type": "Identifier",
          "start": 922,
          "end": 923,
          "name": "e"
        },
        "body": {
          "type": "BlockStatement",
          "start": 925,
          "end": 1148,
          "body": [
            {
              "type": "ExpressionStatement",
              "start": 929,
              "end": 975,
              "expression": {
                "type": "CallExpression",
                "start": 929,
                "end": 974,
                "callee": {
                  "type": "Identifier",
                  "start": 929,
                  "end": 943,
                  "name": "verifyWritable"
                },
                "arguments": [
                  {
                    "type": "Identifier",
                    "start": 944,
                    "end": 947,
                    "name": "arr"
                  },
                  {
                    "type": "Literal",
                    "start": 949,
                    "end": 952,
                    "value": "1"
                  },
                  {
                    "type": "Literal",
                    "start": 954,
                    "end": 973,
                    "value": "setVerifyHelpProp"
                  }
                ],
                "optional": false
              }
            },
            {
              "type": "ExpressionStatement",
              "start": 979,
              "end": 1009,
              "expression": {
                "type": "CallExpression",
                "start": 979,
                "end": 1008,
                "callee": {
                  "type": "Identifier",
                  "start": 979,
                  "end": 998,
                  "name": "verifyNotEnumerable"
                },
                "arguments": [
                  {
                    "type": "Identifier",
                    "start": 999,
                    "end": 1002,
                    "name": "arr"
                  },
                  {
                    "type": "Literal",
                    "start": 1004,
                    "end": 1007,
                    "value": "1"
                  }
                ],
                "optional": false
              }
            },
            {
              "type": "ExpressionStatement",
              "start": 1013,
              "end": 1045,
              "expression": {
                "type": "CallExpression",
                "start": 1013,
                "end": 1044,
                "callee": {
                  "type": "Identifier",
                  "start": 1013,
                  "end": 1034,
                  "name": "verifyNotConfigurable"
                },
                "arguments": [
                  {
                    "type": "Identifier",
                    "start": 1035,
                    "end": 1038,
                    "name": "arr"
                  },
                  {
                    "type": "Literal",
                    "start": 1040,
                    "end": 1043,
                    "value": "1"
                  }
                ],
                "optional": false
              }
            },
            {
              "type": "IfStatement",
              "start": 1049,
              "end": 1145,
              "test": {
                "type": "UnaryExpression",
                "start": 1053,
                "end": 1078,
                "operator": "!",
                "prefix": true,
                "argument": {
                  "type": "ParenthesizedExpression",
                  "start": 1054,
                  "end": 1078,
                  "expression": {
                    "type": "BinaryExpression",
                    "start": 1055,
                    "end": 1077,
                    "left": {
                      "type": "Identifier",
                      "start": 1055,
                      "end": 1056,
                      "name": "e"
                    },
                    "operator": "instanceof",
                    "right": {
                      "type": "Identifier",
                      "start": 1068,
                      "end": 1077,
                      "name": "TypeError"
                    }
                  }
                }
              },
              "consequent": {
                "type": "BlockStatement",
                "start": 1080,
                "end": 1145,
                "body": [
                  {
                    "type": "ThrowStatement",
                    "start": 1086,
                    "end": 1141,
                    "argument": {
                      "type": "NewExpression",
                      "start": 1092,
                      "end": 1140,
                      "callee": {
                        "type": "Identifier",
                        "start": 1096,
                        "end": 1108,
                        "name": "Test262Error"
                      },
                      "arguments": [
                        {
                          "type": "BinaryExpression",
                          "start": 1109,
                          "end": 1139,
                          "left": {
                            "type": "Literal",
                            "start": 1109,
                            "end": 1135,
                            "value": "Expected TypeError, got "
                          },
                          "operator": "+",
                          "right": {
                            "type": "Identifier",
                            "start": 1138,
                            "end": 1139,
                            "name": "e"
                          }
                        }
                      ]
                    }
                  }
                ]
              },
              "alternate": null
            }
          ]
        }
      },
      "finalizer": null
    }
  ],
  "sourceType": "script"
}