{
  "type": "Program",
  "start": 0,
  "end": 2652,
  "body": [
    {
      "type": "FunctionDeclaration",
      "start": 683,
      "end": 1121,
      "id": {
        "type": "Identifier",
        "start": 692,
        "end": 716,
        "name": "isValidAlphaEscapeInAtom"
      },
      "expression": false,
      "generator": false,
      "async": false,
      "params": [
        {
          "type": "Identifier",
          "start": 717,
          "end": 718,
          "name": "s"
        }
      ],
      "body": {
        "type": "BlockStatement",
        "start": 720,
        "end": 1121,
        "body": [
          {
            "type": "SwitchStatement",
            "start": 724,
            "end": 1119,
            "discriminant": {
              "type": "Identifier",
              "start": 732,
              "end": 733,
              "name": "s"
            },
            "cases": [
              {
                "type": "SwitchCase",
                "start": 768,
                "end": 777,
                "consequent": [],
                "test": {
                  "type": "Literal",
                  "start": 773,
                  "end": 776,
                  "value": "b"
                }
              },
              {
                "type": "SwitchCase",
                "start": 809,
                "end": 818,
                "consequent": [],
                "test": {
                  "type": "Literal",
                  "start": 814,
                  "end": 817,
                  "value": "B"
                }
              },
              {
                "type": "SwitchCase",
                "start": 864,
                "end": 873,
                "consequent": [],
                "test": {
                  "type": "Literal",
                  "start": 869,
                  "end": 872,
                  "value": "f"
                }
              },
              {
                "type": "SwitchCase",
                "start": 878,
                "end": 887,
                "consequent": [],
                "test": {
                  "type": "Literal",
                  "start": 883,
                  "end": 886,
                  "value": "n"
                }
              },
              {
                "type": "SwitchCase",
                "start": 892,
                "end": 901,
                "consequent": [],
                "test": {
                  "type": "Literal",
                  "start": 897,
                  "end": 900,
                  "value": "r"
                }
              },
              {
                "type": "SwitchCase",
                "start": 906,
                "end": 915,
                "consequent": [],
                "test": {
                  "type": "Literal",
                  "start": 911,
                  "end": 914,
                  "value": "t"
                }
              },
              {
                "type": "SwitchCase",
                "start": 920,
                "end": 929,
                "consequent": [],
                "test": {
                  "type": "Literal",
                  "start": 925,
                  "end": 928,
                  "value": "v"
                }
              },
              {
                "type": "SwitchCase",
                "start": 984,
                "end": 993,
                "consequent": [],
                "test": {
                  "type": "Literal",
                  "start": 989,
                  "end": 992,
                  "value": "d"
                }
              },
              {
                "type": "SwitchCase",
                "start": 998,
                "end": 1007,
                "consequent": [],
                "test": {
                  "type": "Literal",
                  "start": 1003,
                  "end": 1006,
                  "value": "D"
                }
              },
              {
                "type": "SwitchCase",
                "start": 1012,
                "end": 1021,
                "consequent": [],
                "test": {
                  "type": "Literal",
                  "start": 1017,
                  "end": 1020,
                  "value": "s"
                }
              },
              {
                "type": "SwitchCase",
                "start": 1026,
                "end": 1035,
                "consequent": [],
                "test": {
                  "type": "Literal",
                  "start": 1031,
                  "end": 1034,
                  "value": "S"
                }
              },
              {
                "type": "SwitchCase",
                "start": 1040,
                "end": 1049,
                "consequent": [],
                "test": {
                  "type": "Literal",
                  "start": 1045,
                  "end": 1048,
                  "value": "w"
                }
              },
              {
                "type": "SwitchCase",
                "start": 1054,
                "end": 1082,
                "consequent": [
                  {
                    "type": "ReturnStatement",
                    "start": 1070,
                    "end": 1082,
                    "argument": {
                      "type": "Literal",
                      "start": 1077,
                      "end": 1081,
                      "value": true
                    }
                  }
                ],
                "test": {
                  "type": "Literal",
                  "start": 1059,
                  "end": 1062,
                  "value": "W"
                }
              },
              {
                "type": "SwitchCase",
                "start": 1087,
                "end": 1115,
                "consequent": [
                  {
                    "type": "ReturnStatement",
                    "start": 1102,
                    "end": 1115,
                    "argument": {
                      "type": "Literal",
                      "start": 1109,
                      "end": 1114,
                      "value": false
                    }
                  }
                ],
                "test": null
              }
            ]
          }
        ]
      }
    },
    {
      "type": "FunctionDeclaration",
      "start": 1123,
      "end": 1521,
      "id": {
        "type": "Identifier",
        "start": 1132,
        "end": 1157,
        "name": "isValidAlphaEscapeInClass"
      },
      "expression": false,
      "generator": false,
      "async": false,
      "params": [
        {
          "type": "Identifier",
          "start": 1158,
          "end": 1159,
          "name": "s"
        }
      ],
      "body": {
        "type": "BlockStatement",
        "start": 1161,
        "end": 1521,
        "body": [
          {
            "type": "SwitchStatement",
            "start": 1165,
            "end": 1519,
            "discriminant": {
              "type": "Identifier",
              "start": 1173,
              "end": 1174,
              "name": "s"
            },
            "cases": [
              {
                "type": "SwitchCase",
                "start": 1209,
                "end": 1218,
                "consequent": [],
                "test": {
                  "type": "Literal",
                  "start": 1214,
                  "end": 1217,
                  "value": "b"
                }
              },
              {
                "type": "SwitchCase",
                "start": 1264,
                "end": 1273,
                "consequent": [],
                "test": {
                  "type": "Literal",
                  "start": 1269,
                  "end": 1272,
                  "value": "f"
                }
              },
              {
                "type": "SwitchCase",
                "start": 1278,
                "end": 1287,
                "consequent": [],
                "test": {
                  "type": "Literal",
                  "start": 1283,
                  "end": 1286,
                  "value": "n"
                }
              },
              {
                "type": "SwitchCase",
                "start": 1292,
                "end": 1301,
                "consequent": [],
                "test": {
                  "type": "Literal",
                  "start": 1297,
                  "end": 1300,
                  "value": "r"
                }
              },
              {
                "type": "SwitchCase",
                "start": 1306,
                "end": 1315,
                "consequent": [],
                "test": {
                  "type": "Literal",
                  "start": 1311,
                  "end": 1314,
                  "value": "t"
                }
              },
              {
                "type": "SwitchCase",
                "start": 1320,
                "end": 1329,
                "consequent": [],
                "test": {
                  "type": "Literal",
                  "start": 1325,
                  "end": 1328,
                  "value": "v"
                }
              },
              {
                "type": "SwitchCase",
                "start": 1384,
                "end": 1393,
                "consequent": [],
                "test": {
                  "type": "Literal",
                  "start": 1389,
                  "end": 1392,
                  "value": "d"
                }
              },
              {
                "type": "SwitchCase",
                "start": 1398,
                "end": 1407,
                "consequent": [],
                "test": {
                  "type": "Literal",
                  "start": 1403,
                  "end": 1406,
                  "value": "D"
                }
              },
              {
                "type": "SwitchCase",
                "start": 1412,
                "end": 1421,
                "consequent": [],
                "test": {
                  "type": "Literal",
                  "start": 1417,
                  "end": 1420,
                  "value": "s"
                }
              },
              {
                "type": "SwitchCase",
                "start": 1426,
                "end": 1435,
                "consequent": [],
                "test": {
                  "type": "Literal",
                  "start": 1431,
                  "end": 1434,
                  "value": "S"
                }
              },
              {
                "type": "SwitchCase",
                "start": 1440,
                "end": 1449,
                "consequent": [],
                "test": {
                  "type": "Literal",
                  "start": 1445,
                  "end": 1448,
                  "value": "w"
                }
              },
              {
                "type": "SwitchCase",
                "start": 1454,
                "end": 1482,
                "consequent": [
                  {
                    "type": "ReturnStatement",
                    "start": 1470,
                    "end": 1482,
                    "argument": {
                      "type": "Literal",
                      "start": 1477,
                      "end": 1481,
                      "value": true
                    }
                  }
                ],
                "test": {
                  "type": "Literal",
                  "start": 1459,
                  "end": 1462,
                  "value": "W"
                }
              },
              {
                "type": "SwitchCase",
                "start": 1487,
                "end": 1515,
                "consequent": [
                  {
                    "type": "ReturnStatement",
                    "start": 1502,
                    "end": 1515,
                    "argument": {
                      "type": "Literal",
                      "start": 1509,
                      "end": 1514,
                      "value": false
                    }
                  }
                ],
                "test": null
              }
            ]
          }
        ]
      }
    },
    {
      "type": "ForStatement",
      "start": 1555,
      "end": 1815,
      "init": {
        "type": "VariableDeclaration",
        "start": 1560,
        "end": 1573,
        "declarations": [
          {
            "type": "VariableDeclarator",
            "start": 1564,
            "end": 1573,
            "id": {
              "type": "Identifier",
              "start": 1564,
              "end": 1566,
              "name": "cu"
            },
            "init": {
              "type": "Literal",
              "start": 1569,
              "end": 1573,
              "value": 65
            }
          }
        ],
        "kind": "var"
      },
      "test": {
        "type": "BinaryExpression",
        "start": 1583,
        "end": 1593,
        "left": {
          "type": "Identifier",
          "start": 1583,
          "end": 1585,
          "name": "cu"
        },
        "operator": "<=",
        "right": {
          "type": "Literal",
          "start": 1589,
          "end": 1593,
          "value": 90
        }
      },
      "update": {
        "type": "UpdateExpression",
        "start": 1603,
        "end": 1607,
        "operator": "++",
        "prefix": true,
        "argument": {
          "type": "Identifier",
          "start": 1605,
          "end": 1607,
          "name": "cu"
        }
      },
      "body": {
        "type": "BlockStatement",
        "start": 1609,
        "end": 1815,
        "body": [
          {
            "type": "VariableDeclaration",
            "start": 1613,
            "end": 1645,
            "declarations": [
              {
                "type": "VariableDeclarator",
                "start": 1617,
                "end": 1644,
                "id": {
                  "type": "Identifier",
                  "start": 1617,
                  "end": 1618,
                  "name": "s"
                },
                "init": {
                  "type": "CallExpression",
                  "start": 1621,
                  "end": 1644,
                  "callee": {
                    "type": "MemberExpression",
                    "start": 1621,
                    "end": 1640,
                    "object": {
                      "type": "Identifier",
                      "start": 1621,
                      "end": 1627,
                      "name": "String"
                    },
                    "property": {
                      "type": "Identifier",
                      "start": 1628,
                      "end": 1640,
                      "name": "fromCharCode"
                    },
                    "computed": false,
                    "optional": false
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "start": 1641,
                      "end": 1643,
                      "name": "cu"
                    }
                  ],
                  "optional": false
                }
              }
            ],
            "kind": "var"
          },
          {
            "type": "IfStatement",
            "start": 1648,
            "end": 1813,
            "test": {
              "type": "UnaryExpression",
              "start": 1652,
              "end": 1680,
              "operator": "!",
              "prefix": true,
              "argument": {
                "type": "CallExpression",
                "start": 1653,
                "end": 1680,
                "callee": {
                  "type": "Identifier",
                  "start": 1653,
                  "end": 1677,
                  "name": "isValidAlphaEscapeInAtom"
                },
                "arguments": [
                  {
                    "type": "Identifier",
                    "start": 1678,
                    "end": 1679,
                    "name": "s"
                  }
                ],
                "optional": false
              }
            },
            "consequent": {
              "type": "BlockStatement",
              "start": 1682,
              "end": 1813,
              "body": [
                {
                  "type": "ExpressionStatement",
                  "start": 1688,
                  "end": 1809,
                  "expression": {
                    "type": "CallExpression",
                    "start": 1688,
                    "end": 1808,
                    "callee": {
                      "type": "MemberExpression",
                      "start": 1688,
                      "end": 1701,
                      "object": {
                        "type": "Identifier",
                        "start": 1688,
                        "end": 1694,
                        "name": "assert"
                      },
                      "property": {
                        "type": "Identifier",
                        "start": 1695,
                        "end": 1701,
                        "name": "throws"
                      },
                      "computed": false,
                      "optional": false
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "start": 1702,
                        "end": 1713,
                        "name": "SyntaxError"
                      },
                      {
                        "type": "FunctionExpression",
                        "start": 1715,
                        "end": 1762,
                        "id": null,
                        "expression": false,
                        "generator": false,
                        "async": false,
                        "params": [],
                        "body": {
                          "type": "BlockStatement",
                          "start": 1726,
                          "end": 1762,
                          "body": [
                            {
                              "type": "ExpressionStatement",
                              "start": 1734,
                              "end": 1756,
                              "expression": {
                                "type": "CallExpression",
                                "start": 1734,
                                "end": 1755,
                                "callee": {
                                  "type": "Identifier",
                                  "start": 1734,
                                  "end": 1740,
                                  "name": "RegExp"
                                },
                                "arguments": [
                                  {
                                    "type": "BinaryExpression",
                                    "start": 1741,
                                    "end": 1749,
                                    "left": {
                                      "type": "Literal",
                                      "start": 1741,
                                      "end": 1745,
                                      "value": "\\"
                                    },
                                    "operator": "+",
                                    "right": {
                                      "type": "Identifier",
                                      "start": 1748,
                                      "end": 1749,
                                      "name": "s"
                                    }
                                  },
                                  {
                                    "type": "Literal",
                                    "start": 1751,
                                    "end": 1754,
                                    "value": "u"
                                  }
                                ],
                                "optional": false
                              }
                            }
                          ]
                        }
                      },
                      {
                        "type": "BinaryExpression",
                        "start": 1764,
                        "end": 1807,
                        "left": {
                          "type": "BinaryExpression",
                          "start": 1764,
                          "end": 1801,
                          "left": {
                            "type": "Literal",
                            "start": 1764,
                            "end": 1797,
                            "value": "IdentityEscape in AtomEscape: '"
                          },
                          "operator": "+",
                          "right": {
                            "type": "Identifier",
                            "start": 1800,
                            "end": 1801,
                            "name": "s"
                          }
                        },
                        "operator": "+",
                        "right": {
                          "type": "Literal",
                          "start": 1804,
                          "end": 1807,
                          "value": "'"
                        }
                      }
                    ],
                    "optional": false
                  }
                }
              ]
            },
            "alternate": null
          }
        ]
      }
    },
    {
      "type": "ForStatement",
      "start": 1816,
      "end": 2076,
      "init": {
        "type": "VariableDeclaration",
        "start": 1821,
        "end": 1834,
        "declarations": [
          {
            "type": "VariableDeclarator",
            "start": 1825,
            "end": 1834,
            "id": {
              "type": "Identifier",
              "start": 1825,
              "end": 1827,
              "name": "cu"
            },
            "init": {
              "type": "Literal",
              "start": 1830,
              "end": 1834,
              "value": 97
            }
          }
        ],
        "kind": "var"
      },
      "test": {
        "type": "BinaryExpression",
        "start": 1844,
        "end": 1854,
        "left": {
          "type": "Identifier",
          "start": 1844,
          "end": 1846,
          "name": "cu"
        },
        "operator": "<=",
        "right": {
          "type": "Literal",
          "start": 1850,
          "end": 1854,
          "value": 122
        }
      },
      "update": {
        "type": "UpdateExpression",
        "start": 1864,
        "end": 1868,
        "operator": "++",
        "prefix": true,
        "argument": {
          "type": "Identifier",
          "start": 1866,
          "end": 1868,
          "name": "cu"
        }
      },
      "body": {
        "type": "BlockStatement",
        "start": 1870,
        "end": 2076,
        "body": [
          {
            "type": "VariableDeclaration",
            "start": 1874,
            "end": 1906,
            "declarations": [
              {
                "type": "VariableDeclarator",
                "start": 1878,
                "end": 1905,
                "id": {
                  "type": "Identifier",
                  "start": 1878,
                  "end": 1879,
                  "name": "s"
                },
                "init": {
                  "type": "CallExpression",
                  "start": 1882,
                  "end": 1905,
                  "callee": {
                    "type": "MemberExpression",
                    "start": 1882,
                    "end": 1901,
                    "object": {
                      "type": "Identifier",
                      "start": 1882,
                      "end": 1888,
                      "name": "String"
                    },
                    "property": {
                      "type": "Identifier",
                      "start": 1889,
                      "end": 1901,
                      "name": "fromCharCode"
                    },
                    "computed": false,
                    "optional": false
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "start": 1902,
                      "end": 1904,
                      "name": "cu"
                    }
                  ],
                  "optional": false
                }
              }
            ],
            "kind": "var"
          },
          {
            "type": "IfStatement",
            "start": 1909,
            "end": 2074,
            "test": {
              "type": "UnaryExpression",
              "start": 1913,
              "end": 1941,
              "operator": "!",
              "prefix": true,
              "argument": {
                "type": "CallExpression",
                "start": 1914,
                "end": 1941,
                "callee": {
                  "type": "Identifier",
                  "start": 1914,
                  "end": 1938,
                  "name": "isValidAlphaEscapeInAtom"
                },
                "arguments": [
                  {
                    "type": "Identifier",
                    "start": 1939,
                    "end": 1940,
                    "name": "s"
                  }
                ],
                "optional": false
              }
            },
            "consequent": {
              "type": "BlockStatement",
              "start": 1943,
              "end": 2074,
              "body": [
                {
                  "type": "ExpressionStatement",
                  "start": 1949,
                  "end": 2070,
                  "expression": {
                    "type": "CallExpression",
                    "start": 1949,
                    "end": 2069,
                    "callee": {
                      "type": "MemberExpression",
                      "start": 1949,
                      "end": 1962,
                      "object": {
                        "type": "Identifier",
                        "start": 1949,
                        "end": 1955,
                        "name": "assert"
                      },
                      "property": {
                        "type": "Identifier",
                        "start": 1956,
                        "end": 1962,
                        "name": "throws"
                      },
                      "computed": false,
                      "optional": false
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "start": 1963,
                        "end": 1974,
                        "name": "SyntaxError"
                      },
                      {
                        "type": "FunctionExpression",
                        "start": 1976,
                        "end": 2023,
                        "id": null,
                        "expression": false,
                        "generator": false,
                        "async": false,
                        "params": [],
                        "body": {
                          "type": "BlockStatement",
                          "start": 1987,
                          "end": 2023,
                          "body": [
                            {
                              "type": "ExpressionStatement",
                              "start": 1995,
                              "end": 2017,
                              "expression": {
                                "type": "CallExpression",
                                "start": 1995,
                                "end": 2016,
                                "callee": {
                                  "type": "Identifier",
                                  "start": 1995,
                                  "end": 2001,
                                  "name": "RegExp"
                                },
                                "arguments": [
                                  {
                                    "type": "BinaryExpression",
                                    "start": 2002,
                                    "end": 2010,
                                    "left": {
                                      "type": "Literal",
                                      "start": 2002,
                                      "end": 2006,
                                      "value": "\\"
                                    },
                                    "operator": "+",
                                    "right": {
                                      "type": "Identifier",
                                      "start": 2009,
                                      "end": 2010,
                                      "name": "s"
                                    }
                                  },
                                  {
                                    "type": "Literal",
                                    "start": 2012,
                                    "end": 2015,
                                    "value": "u"
                                  }
                                ],
                                "optional": false
                              }
                            }
                          ]
                        }
                      },
                      {
                        "type": "BinaryExpression",
                        "start": 2025,
                        "end": 2068,
                        "left": {
                          "type": "BinaryExpression",
                          "start": 2025,
                          "end": 2062,
                          "left": {
                            "type": "Literal",
                            "start": 2025,
                            "end": 2058,
                            "value": "IdentityEscape in AtomEscape: '"
                          },
                          "operator": "+",
                          "right": {
                            "type": "Identifier",
                            "start": 2061,
                            "end": 2062,
                            "name": "s"
                          }
                        },
                        "operator": "+",
                        "right": {
                          "type": "Literal",
                          "start": 2065,
                          "end": 2068,
                          "value": "'"
                        }
                      }
                    ],
                    "optional": false
                  }
                }
              ]
            },
            "alternate": null
          }
        ]
      }
    },
    {
      "type": "ForStatement",
      "start": 2112,
      "end": 2381,
      "init": {
        "type": "VariableDeclaration",
        "start": 2117,
        "end": 2130,
        "declarations": [
          {
            "type": "VariableDeclarator",
            "start": 2121,
            "end": 2130,
            "id": {
              "type": "Identifier",
              "start": 2121,
              "end": 2123,
              "name": "cu"
            },
            "init": {
              "type": "Literal",
              "start": 2126,
              "end": 2130,
              "value": 65
            }
          }
        ],
        "kind": "var"
      },
      "test": {
        "type": "BinaryExpression",
        "start": 2140,
        "end": 2150,
        "left": {
          "type": "Identifier",
          "start": 2140,
          "end": 2142,
          "name": "cu"
        },
        "operator": "<=",
        "right": {
          "type": "Literal",
          "start": 2146,
          "end": 2150,
          "value": 90
        }
      },
      "update": {
        "type": "UpdateExpression",
        "start": 2160,
        "end": 2164,
        "operator": "++",
        "prefix": true,
        "argument": {
          "type": "Identifier",
          "start": 2162,
          "end": 2164,
          "name": "cu"
        }
      },
      "body": {
        "type": "BlockStatement",
        "start": 2166,
        "end": 2381,
        "body": [
          {
            "type": "VariableDeclaration",
            "start": 2170,
            "end": 2202,
            "declarations": [
              {
                "type": "VariableDeclarator",
                "start": 2174,
                "end": 2201,
                "id": {
                  "type": "Identifier",
                  "start": 2174,
                  "end": 2175,
                  "name": "s"
                },
                "init": {
                  "type": "CallExpression",
                  "start": 2178,
                  "end": 2201,
                  "callee": {
                    "type": "MemberExpression",
                    "start": 2178,
                    "end": 2197,
                    "object": {
                      "type": "Identifier",
                      "start": 2178,
                      "end": 2184,
                      "name": "String"
                    },
                    "property": {
                      "type": "Identifier",
                      "start": 2185,
                      "end": 2197,
                      "name": "fromCharCode"
                    },
                    "computed": false,
                    "optional": false
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "start": 2198,
                      "end": 2200,
                      "name": "cu"
                    }
                  ],
                  "optional": false
                }
              }
            ],
            "kind": "var"
          },
          {
            "type": "IfStatement",
            "start": 2205,
            "end": 2379,
            "test": {
              "type": "UnaryExpression",
              "start": 2209,
              "end": 2238,
              "operator": "!",
              "prefix": true,
              "argument": {
                "type": "CallExpression",
                "start": 2210,
                "end": 2238,
                "callee": {
                  "type": "Identifier",
                  "start": 2210,
                  "end": 2235,
                  "name": "isValidAlphaEscapeInClass"
                },
                "arguments": [
                  {
                    "type": "Identifier",
                    "start": 2236,
                    "end": 2237,
                    "name": "s"
                  }
                ],
                "optional": false
              }
            },
            "consequent": {
              "type": "BlockStatement",
              "start": 2240,
              "end": 2379,
              "body": [
                {
                  "type": "ExpressionStatement",
                  "start": 2246,
                  "end": 2375,
                  "expression": {
                    "type": "CallExpression",
                    "start": 2246,
                    "end": 2374,
                    "callee": {
                      "type": "MemberExpression",
                      "start": 2246,
                      "end": 2259,
                      "object": {
                        "type": "Identifier",
                        "start": 2246,
                        "end": 2252,
                        "name": "assert"
                      },
                      "property": {
                        "type": "Identifier",
                        "start": 2253,
                        "end": 2259,
                        "name": "throws"
                      },
                      "computed": false,
                      "optional": false
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "start": 2260,
                        "end": 2271,
                        "name": "SyntaxError"
                      },
                      {
                        "type": "FunctionExpression",
                        "start": 2273,
                        "end": 2327,
                        "id": null,
                        "expression": false,
                        "generator": false,
                        "async": false,
                        "params": [],
                        "body": {
                          "type": "BlockStatement",
                          "start": 2284,
                          "end": 2327,
                          "body": [
                            {
                              "type": "ExpressionStatement",
                              "start": 2292,
                              "end": 2321,
                              "expression": {
                                "type": "CallExpression",
                                "start": 2292,
                                "end": 2320,
                                "callee": {
                                  "type": "Identifier",
                                  "start": 2292,
                                  "end": 2298,
                                  "name": "RegExp"
                                },
                                "arguments": [
                                  {
                                    "type": "BinaryExpression",
                                    "start": 2299,
                                    "end": 2314,
                                    "left": {
                                      "type": "BinaryExpression",
                                      "start": 2299,
                                      "end": 2308,
                                      "left": {
                                        "type": "Literal",
                                        "start": 2299,
                                        "end": 2304,
                                        "value": "[\\"
                                      },
                                      "operator": "+",
                                      "right": {
                                        "type": "Identifier",
                                        "start": 2307,
                                        "end": 2308,
                                        "name": "s"
                                      }
                                    },
                                    "operator": "+",
                                    "right": {
                                      "type": "Literal",
                                      "start": 2311,
                                      "end": 2314,
                                      "value": "]"
                                    }
                                  },
                                  {
                                    "type": "Literal",
                                    "start": 2316,
                                    "end": 2319,
                                    "value": "u"
                                  }
                                ],
                                "optional": false
                              }
                            }
                          ]
                        }
                      },
                      {
                        "type": "BinaryExpression",
                        "start": 2329,
                        "end": 2373,
                        "left": {
                          "type": "BinaryExpression",
                          "start": 2329,
                          "end": 2367,
                          "left": {
                            "type": "Literal",
                            "start": 2329,
                            "end": 2363,
                            "value": "IdentityEscape in ClassEscape: '"
                          },
                          "operator": "+",
                          "right": {
                            "type": "Identifier",
                            "start": 2366,
                            "end": 2367,
                            "name": "s"
                          }
                        },
                        "operator": "+",
                        "right": {
                          "type": "Literal",
                          "start": 2370,
                          "end": 2373,
                          "value": "'"
                        }
                      }
                    ],
                    "optional": false
                  }
                }
              ]
            },
            "alternate": null
          }
        ]
      }
    },
    {
      "type": "ForStatement",
      "start": 2382,
      "end": 2651,
      "init": {
        "type": "VariableDeclaration",
        "start": 2387,
        "end": 2400,
        "declarations": [
          {
            "type": "VariableDeclarator",
            "start": 2391,
            "end": 2400,
            "id": {
              "type": "Identifier",
              "start": 2391,
              "end": 2393,
              "name": "cu"
            },
            "init": {
              "type": "Literal",
              "start": 2396,
              "end": 2400,
              "value": 97
            }
          }
        ],
        "kind": "var"
      },
      "test": {
        "type": "BinaryExpression",
        "start": 2410,
        "end": 2420,
        "left": {
          "type": "Identifier",
          "start": 2410,
          "end": 2412,
          "name": "cu"
        },
        "operator": "<=",
        "right": {
          "type": "Literal",
          "start": 2416,
          "end": 2420,
          "value": 122
        }
      },
      "update": {
        "type": "UpdateExpression",
        "start": 2430,
        "end": 2434,
        "operator": "++",
        "prefix": true,
        "argument": {
          "type": "Identifier",
          "start": 2432,
          "end": 2434,
          "name": "cu"
        }
      },
      "body": {
        "type": "BlockStatement",
        "start": 2436,
        "end": 2651,
        "body": [
          {
            "type": "VariableDeclaration",
            "start": 2440,
            "end": 2472,
            "declarations": [
              {
                "type": "VariableDeclarator",
                "start": 2444,
                "end": 2471,
                "id": {
                  "type": "Identifier",
                  "start": 2444,
                  "end": 2445,
                  "name": "s"
                },
                "init": {
                  "type": "CallExpression",
                  "start": 2448,
                  "end": 2471,
                  "callee": {
                    "type": "MemberExpression",
                    "start": 2448,
                    "end": 2467,
                    "object": {
                      "type": "Identifier",
                      "start": 2448,
                      "end": 2454,
                      "name": "String"
                    },
                    "property": {
                      "type": "Identifier",
                      "start": 2455,
                      "end": 2467,
                      "name": "fromCharCode"
                    },
                    "computed": false,
                    "optional": false
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "start": 2468,
                      "end": 2470,
                      "name": "cu"
                    }
                  ],
                  "optional": false
                }
              }
            ],
            "kind": "var"
          },
          {
            "type": "IfStatement",
            "start": 2475,
            "end": 2649,
            "test": {
              "type": "UnaryExpression",
              "start": 2479,
              "end": 2508,
              "operator": "!",
              "prefix": true,
              "argument": {
                "type": "CallExpression",
                "start": 2480,
                "end": 2508,
                "callee": {
                  "type": "Identifier",
                  "start": 2480,
                  "end": 2505,
                  "name": "isValidAlphaEscapeInClass"
                },
                "arguments": [
                  {
                    "type": "Identifier",
                    "start": 2506,
                    "end": 2507,
                    "name": "s"
                  }
                ],
                "optional": false
              }
            },
            "consequent": {
              "type": "BlockStatement",
              "start": 2510,
              "end": 2649,
              "body": [
                {
                  "type": "ExpressionStatement",
                  "start": 2516,
                  "end": 2645,
                  "expression": {
                    "type": "CallExpression",
                    "start": 2516,
                    "end": 2644,
                    "callee": {
                      "type": "MemberExpression",
                      "start": 2516,
                      "end": 2529,
                      "object": {
                        "type": "Identifier",
                        "start": 2516,
                        "end": 2522,
                        "name": "assert"
                      },
                      "property": {
                        "type": "Identifier",
                        "start": 2523,
                        "end": 2529,
                        "name": "throws"
                      },
                      "computed": false,
                      "optional": false
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "start": 2530,
                        "end": 2541,
                        "name": "SyntaxError"
                      },
                      {
                        "type": "FunctionExpression",
                        "start": 2543,
                        "end": 2597,
                        "id": null,
                        "expression": false,
                        "generator": false,
                        "async": false,
                        "params": [],
                        "body": {
                          "type": "BlockStatement",
                          "start": 2554,
                          "end": 2597,
                          "body": [
                            {
                              "type": "ExpressionStatement",
                              "start": 2562,
                              "end": 2591,
                              "expression": {
                                "type": "CallExpression",
                                "start": 2562,
                                "end": 2590,
                                "callee": {
                                  "type": "Identifier",
                                  "start": 2562,
                                  "end": 2568,
                                  "name": "RegExp"
                                },
                                "arguments": [
                                  {
                                    "type": "BinaryExpression",
                                    "start": 2569,
                                    "end": 2584,
                                    "left": {
                                      "type": "BinaryExpression",
                                      "start": 2569,
                                      "end": 2578,
                                      "left": {
                                        "type": "Literal",
                                        "start": 2569,
                                        "end": 2574,
                                        "value": "[\\"
                                      },
                                      "operator": "+",
                                      "right": {
                                        "type": "Identifier",
                                        "start": 2577,
                                        "end": 2578,
                                        "name": "s"
                                      }
                                    },
                                    "operator": "+",
                                    "right": {
                                      "type": "Literal",
                                      "start": 2581,
                                      "end": 2584,
                                      "value": "]"
                                    }
                                  },
                                  {
                                    "type": "Literal",
                                    "start": 2586,
                                    "end": 2589,
                                    "value": "u"
                                  }
                                ],
                                "optional": false
                              }
                            }
                          ]
                        }
                      },
                      {
                        "type": "BinaryExpression",
                        "start": 2599,
                        "end": 2643,
                        "left": {
                          "type": "BinaryExpression",
                          "start": 2599,
                          "end": 2637,
                          "left": {
                            "type": "Literal",
                            "start": 2599,
                            "end": 2633,
                            "value": "IdentityEscape in ClassEscape: '"
                          },
                          "operator": "+",
                          "right": {
                            "type": "Identifier",
                            "start": 2636,
                            "end": 2637,
                            "name": "s"
                          }
                        },
                        "operator": "+",
                        "right": {
                          "type": "Literal",
                          "start": 2640,
                          "end": 2643,
                          "value": "'"
                        }
                      }
                    ],
                    "optional": false
                  }
                }
              ]
            },
            "alternate": null
          }
        ]
      }
    }
  ],
  "sourceType": "script"
}