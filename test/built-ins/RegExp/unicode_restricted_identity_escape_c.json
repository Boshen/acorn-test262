{
  "type": "Program",
  "start": 0,
  "end": 1404,
  "body": [
    {
      "type": "FunctionDeclaration",
      "start": 449,
      "end": 531,
      "id": {
        "type": "Identifier",
        "start": 458,
        "end": 465,
        "name": "isAlpha"
      },
      "expression": false,
      "generator": false,
      "async": false,
      "params": [
        {
          "type": "Identifier",
          "start": 466,
          "end": 467,
          "name": "c"
        }
      ],
      "body": {
        "type": "BlockStatement",
        "start": 469,
        "end": 531,
        "body": [
          {
            "type": "ReturnStatement",
            "start": 473,
            "end": 529,
            "argument": {
              "type": "LogicalExpression",
              "start": 480,
              "end": 528,
              "left": {
                "type": "ParenthesizedExpression",
                "start": 480,
                "end": 502,
                "expression": {
                  "type": "LogicalExpression",
                  "start": 481,
                  "end": 501,
                  "left": {
                    "type": "BinaryExpression",
                    "start": 481,
                    "end": 489,
                    "left": {
                      "type": "Literal",
                      "start": 481,
                      "end": 484,
                      "value": "A"
                    },
                    "operator": "<=",
                    "right": {
                      "type": "Identifier",
                      "start": 488,
                      "end": 489,
                      "name": "c"
                    }
                  },
                  "operator": "&&",
                  "right": {
                    "type": "BinaryExpression",
                    "start": 493,
                    "end": 501,
                    "left": {
                      "type": "Identifier",
                      "start": 493,
                      "end": 494,
                      "name": "c"
                    },
                    "operator": "<=",
                    "right": {
                      "type": "Literal",
                      "start": 498,
                      "end": 501,
                      "value": "Z"
                    }
                  }
                }
              },
              "operator": "||",
              "right": {
                "type": "ParenthesizedExpression",
                "start": 506,
                "end": 528,
                "expression": {
                  "type": "LogicalExpression",
                  "start": 507,
                  "end": 527,
                  "left": {
                    "type": "BinaryExpression",
                    "start": 507,
                    "end": 515,
                    "left": {
                      "type": "Literal",
                      "start": 507,
                      "end": 510,
                      "value": "a"
                    },
                    "operator": "<=",
                    "right": {
                      "type": "Identifier",
                      "start": 514,
                      "end": 515,
                      "name": "c"
                    }
                  },
                  "operator": "&&",
                  "right": {
                    "type": "BinaryExpression",
                    "start": 519,
                    "end": 527,
                    "left": {
                      "type": "Identifier",
                      "start": 519,
                      "end": 520,
                      "name": "c"
                    },
                    "operator": "<=",
                    "right": {
                      "type": "Literal",
                      "start": 524,
                      "end": 527,
                      "value": "z"
                    }
                  }
                }
              }
            }
          }
        ]
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 663,
      "end": 726,
      "expression": {
        "type": "CallExpression",
        "start": 663,
        "end": 725,
        "callee": {
          "type": "MemberExpression",
          "start": 663,
          "end": 676,
          "object": {
            "type": "Identifier",
            "start": 663,
            "end": 669,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 670,
            "end": 676,
            "name": "throws"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "Identifier",
            "start": 677,
            "end": 688,
            "name": "SyntaxError"
          },
          {
            "type": "FunctionExpression",
            "start": 690,
            "end": 724,
            "id": null,
            "expression": false,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "start": 701,
              "end": 724,
              "body": [
                {
                  "type": "ExpressionStatement",
                  "start": 703,
                  "end": 722,
                  "expression": {
                    "type": "CallExpression",
                    "start": 703,
                    "end": 721,
                    "callee": {
                      "type": "Identifier",
                      "start": 703,
                      "end": 709,
                      "name": "RegExp"
                    },
                    "arguments": [
                      {
                        "type": "Literal",
                        "start": 710,
                        "end": 715,
                        "value": "\\c"
                      },
                      {
                        "type": "Literal",
                        "start": 717,
                        "end": 720,
                        "value": "u"
                      }
                    ],
                    "optional": false
                  }
                }
              ]
            }
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ForStatement",
      "start": 727,
      "end": 961,
      "init": {
        "type": "VariableDeclaration",
        "start": 732,
        "end": 745,
        "declarations": [
          {
            "type": "VariableDeclarator",
            "start": 736,
            "end": 745,
            "id": {
              "type": "Identifier",
              "start": 736,
              "end": 738,
              "name": "cu"
            },
            "init": {
              "type": "Literal",
              "start": 741,
              "end": 745,
              "value": 0
            }
          }
        ],
        "kind": "var"
      },
      "test": {
        "type": "BinaryExpression",
        "start": 747,
        "end": 757,
        "left": {
          "type": "Identifier",
          "start": 747,
          "end": 749,
          "name": "cu"
        },
        "operator": "<=",
        "right": {
          "type": "Literal",
          "start": 753,
          "end": 757,
          "value": 127
        }
      },
      "update": {
        "type": "UpdateExpression",
        "start": 759,
        "end": 763,
        "operator": "++",
        "prefix": true,
        "argument": {
          "type": "Identifier",
          "start": 761,
          "end": 763,
          "name": "cu"
        }
      },
      "body": {
        "type": "BlockStatement",
        "start": 765,
        "end": 961,
        "body": [
          {
            "type": "VariableDeclaration",
            "start": 769,
            "end": 801,
            "declarations": [
              {
                "type": "VariableDeclarator",
                "start": 773,
                "end": 800,
                "id": {
                  "type": "Identifier",
                  "start": 773,
                  "end": 774,
                  "name": "s"
                },
                "init": {
                  "type": "CallExpression",
                  "start": 777,
                  "end": 800,
                  "callee": {
                    "type": "MemberExpression",
                    "start": 777,
                    "end": 796,
                    "object": {
                      "type": "Identifier",
                      "start": 777,
                      "end": 783,
                      "name": "String"
                    },
                    "property": {
                      "type": "Identifier",
                      "start": 784,
                      "end": 796,
                      "name": "fromCharCode"
                    },
                    "computed": false,
                    "optional": false
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "start": 797,
                      "end": 799,
                      "name": "cu"
                    }
                  ],
                  "optional": false
                }
              }
            ],
            "kind": "var"
          },
          {
            "type": "IfStatement",
            "start": 804,
            "end": 959,
            "test": {
              "type": "UnaryExpression",
              "start": 808,
              "end": 819,
              "operator": "!",
              "prefix": true,
              "argument": {
                "type": "CallExpression",
                "start": 809,
                "end": 819,
                "callee": {
                  "type": "Identifier",
                  "start": 809,
                  "end": 816,
                  "name": "isAlpha"
                },
                "arguments": [
                  {
                    "type": "Identifier",
                    "start": 817,
                    "end": 818,
                    "name": "s"
                  }
                ],
                "optional": false
              }
            },
            "consequent": {
              "type": "BlockStatement",
              "start": 821,
              "end": 959,
              "body": [
                {
                  "type": "ExpressionStatement",
                  "start": 827,
                  "end": 955,
                  "expression": {
                    "type": "CallExpression",
                    "start": 827,
                    "end": 954,
                    "callee": {
                      "type": "MemberExpression",
                      "start": 827,
                      "end": 840,
                      "object": {
                        "type": "Identifier",
                        "start": 827,
                        "end": 833,
                        "name": "assert"
                      },
                      "property": {
                        "type": "Identifier",
                        "start": 834,
                        "end": 840,
                        "name": "throws"
                      },
                      "computed": false,
                      "optional": false
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "start": 841,
                        "end": 852,
                        "name": "SyntaxError"
                      },
                      {
                        "type": "FunctionExpression",
                        "start": 854,
                        "end": 902,
                        "id": null,
                        "expression": false,
                        "generator": false,
                        "async": false,
                        "params": [],
                        "body": {
                          "type": "BlockStatement",
                          "start": 865,
                          "end": 902,
                          "body": [
                            {
                              "type": "ExpressionStatement",
                              "start": 873,
                              "end": 896,
                              "expression": {
                                "type": "CallExpression",
                                "start": 873,
                                "end": 895,
                                "callee": {
                                  "type": "Identifier",
                                  "start": 873,
                                  "end": 879,
                                  "name": "RegExp"
                                },
                                "arguments": [
                                  {
                                    "type": "BinaryExpression",
                                    "start": 880,
                                    "end": 889,
                                    "left": {
                                      "type": "Literal",
                                      "start": 880,
                                      "end": 885,
                                      "value": "\\c"
                                    },
                                    "operator": "+",
                                    "right": {
                                      "type": "Identifier",
                                      "start": 888,
                                      "end": 889,
                                      "name": "s"
                                    }
                                  },
                                  {
                                    "type": "Literal",
                                    "start": 891,
                                    "end": 894,
                                    "value": "u"
                                  }
                                ],
                                "optional": false
                              }
                            }
                          ]
                        }
                      },
                      {
                        "type": "BinaryExpression",
                        "start": 904,
                        "end": 953,
                        "left": {
                          "type": "BinaryExpression",
                          "start": 904,
                          "end": 947,
                          "left": {
                            "type": "Literal",
                            "start": 904,
                            "end": 943,
                            "value": "ControlLetter escape in AtomEscape: '"
                          },
                          "operator": "+",
                          "right": {
                            "type": "Identifier",
                            "start": 946,
                            "end": 947,
                            "name": "s"
                          }
                        },
                        "operator": "+",
                        "right": {
                          "type": "Literal",
                          "start": 950,
                          "end": 953,
                          "value": "'"
                        }
                      }
                    ],
                    "optional": false
                  }
                }
              ]
            },
            "alternate": null
          }
        ]
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1095,
      "end": 1160,
      "expression": {
        "type": "CallExpression",
        "start": 1095,
        "end": 1159,
        "callee": {
          "type": "MemberExpression",
          "start": 1095,
          "end": 1108,
          "object": {
            "type": "Identifier",
            "start": 1095,
            "end": 1101,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1102,
            "end": 1108,
            "name": "throws"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "Identifier",
            "start": 1109,
            "end": 1120,
            "name": "SyntaxError"
          },
          {
            "type": "FunctionExpression",
            "start": 1122,
            "end": 1158,
            "id": null,
            "expression": false,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "start": 1133,
              "end": 1158,
              "body": [
                {
                  "type": "ExpressionStatement",
                  "start": 1135,
                  "end": 1156,
                  "expression": {
                    "type": "CallExpression",
                    "start": 1135,
                    "end": 1155,
                    "callee": {
                      "type": "Identifier",
                      "start": 1135,
                      "end": 1141,
                      "name": "RegExp"
                    },
                    "arguments": [
                      {
                        "type": "Literal",
                        "start": 1142,
                        "end": 1149,
                        "value": "[\\c]"
                      },
                      {
                        "type": "Literal",
                        "start": 1151,
                        "end": 1154,
                        "value": "u"
                      }
                    ],
                    "optional": false
                  }
                }
              ]
            }
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ForStatement",
      "start": 1161,
      "end": 1403,
      "init": {
        "type": "VariableDeclaration",
        "start": 1166,
        "end": 1179,
        "declarations": [
          {
            "type": "VariableDeclarator",
            "start": 1170,
            "end": 1179,
            "id": {
              "type": "Identifier",
              "start": 1170,
              "end": 1172,
              "name": "cu"
            },
            "init": {
              "type": "Literal",
              "start": 1175,
              "end": 1179,
              "value": 0
            }
          }
        ],
        "kind": "var"
      },
      "test": {
        "type": "BinaryExpression",
        "start": 1181,
        "end": 1191,
        "left": {
          "type": "Identifier",
          "start": 1181,
          "end": 1183,
          "name": "cu"
        },
        "operator": "<=",
        "right": {
          "type": "Literal",
          "start": 1187,
          "end": 1191,
          "value": 127
        }
      },
      "update": {
        "type": "UpdateExpression",
        "start": 1193,
        "end": 1197,
        "operator": "++",
        "prefix": true,
        "argument": {
          "type": "Identifier",
          "start": 1195,
          "end": 1197,
          "name": "cu"
        }
      },
      "body": {
        "type": "BlockStatement",
        "start": 1199,
        "end": 1403,
        "body": [
          {
            "type": "VariableDeclaration",
            "start": 1203,
            "end": 1235,
            "declarations": [
              {
                "type": "VariableDeclarator",
                "start": 1207,
                "end": 1234,
                "id": {
                  "type": "Identifier",
                  "start": 1207,
                  "end": 1208,
                  "name": "s"
                },
                "init": {
                  "type": "CallExpression",
                  "start": 1211,
                  "end": 1234,
                  "callee": {
                    "type": "MemberExpression",
                    "start": 1211,
                    "end": 1230,
                    "object": {
                      "type": "Identifier",
                      "start": 1211,
                      "end": 1217,
                      "name": "String"
                    },
                    "property": {
                      "type": "Identifier",
                      "start": 1218,
                      "end": 1230,
                      "name": "fromCharCode"
                    },
                    "computed": false,
                    "optional": false
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "start": 1231,
                      "end": 1233,
                      "name": "cu"
                    }
                  ],
                  "optional": false
                }
              }
            ],
            "kind": "var"
          },
          {
            "type": "IfStatement",
            "start": 1238,
            "end": 1401,
            "test": {
              "type": "UnaryExpression",
              "start": 1242,
              "end": 1253,
              "operator": "!",
              "prefix": true,
              "argument": {
                "type": "CallExpression",
                "start": 1243,
                "end": 1253,
                "callee": {
                  "type": "Identifier",
                  "start": 1243,
                  "end": 1250,
                  "name": "isAlpha"
                },
                "arguments": [
                  {
                    "type": "Identifier",
                    "start": 1251,
                    "end": 1252,
                    "name": "s"
                  }
                ],
                "optional": false
              }
            },
            "consequent": {
              "type": "BlockStatement",
              "start": 1255,
              "end": 1401,
              "body": [
                {
                  "type": "ExpressionStatement",
                  "start": 1261,
                  "end": 1397,
                  "expression": {
                    "type": "CallExpression",
                    "start": 1261,
                    "end": 1396,
                    "callee": {
                      "type": "MemberExpression",
                      "start": 1261,
                      "end": 1274,
                      "object": {
                        "type": "Identifier",
                        "start": 1261,
                        "end": 1267,
                        "name": "assert"
                      },
                      "property": {
                        "type": "Identifier",
                        "start": 1268,
                        "end": 1274,
                        "name": "throws"
                      },
                      "computed": false,
                      "optional": false
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "start": 1275,
                        "end": 1286,
                        "name": "SyntaxError"
                      },
                      {
                        "type": "FunctionExpression",
                        "start": 1288,
                        "end": 1343,
                        "id": null,
                        "expression": false,
                        "generator": false,
                        "async": false,
                        "params": [],
                        "body": {
                          "type": "BlockStatement",
                          "start": 1299,
                          "end": 1343,
                          "body": [
                            {
                              "type": "ExpressionStatement",
                              "start": 1307,
                              "end": 1337,
                              "expression": {
                                "type": "CallExpression",
                                "start": 1307,
                                "end": 1336,
                                "callee": {
                                  "type": "Identifier",
                                  "start": 1307,
                                  "end": 1313,
                                  "name": "RegExp"
                                },
                                "arguments": [
                                  {
                                    "type": "BinaryExpression",
                                    "start": 1314,
                                    "end": 1330,
                                    "left": {
                                      "type": "BinaryExpression",
                                      "start": 1314,
                                      "end": 1324,
                                      "left": {
                                        "type": "Literal",
                                        "start": 1314,
                                        "end": 1320,
                                        "value": "[\\c"
                                      },
                                      "operator": "+",
                                      "right": {
                                        "type": "Identifier",
                                        "start": 1323,
                                        "end": 1324,
                                        "name": "s"
                                      }
                                    },
                                    "operator": "+",
                                    "right": {
                                      "type": "Literal",
                                      "start": 1327,
                                      "end": 1330,
                                      "value": "]"
                                    }
                                  },
                                  {
                                    "type": "Literal",
                                    "start": 1332,
                                    "end": 1335,
                                    "value": "u"
                                  }
                                ],
                                "optional": false
                              }
                            }
                          ]
                        }
                      },
                      {
                        "type": "BinaryExpression",
                        "start": 1345,
                        "end": 1395,
                        "left": {
                          "type": "BinaryExpression",
                          "start": 1345,
                          "end": 1389,
                          "left": {
                            "type": "Literal",
                            "start": 1345,
                            "end": 1385,
                            "value": "ControlLetter escape in ClassEscape: '"
                          },
                          "operator": "+",
                          "right": {
                            "type": "Identifier",
                            "start": 1388,
                            "end": 1389,
                            "name": "s"
                          }
                        },
                        "operator": "+",
                        "right": {
                          "type": "Literal",
                          "start": 1392,
                          "end": 1395,
                          "value": "'"
                        }
                      }
                    ],
                    "optional": false
                  }
                }
              ]
            },
            "alternate": null
          }
        ]
      }
    }
  ],
  "sourceType": "script"
}