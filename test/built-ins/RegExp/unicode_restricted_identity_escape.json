{
  "type": "Program",
  "start": 0,
  "end": 1707,
  "body": [
    {
      "type": "FunctionDeclaration",
      "start": 461,
      "end": 762,
      "id": {
        "type": "Identifier",
        "start": 470,
        "end": 487,
        "name": "isSyntaxCharacter"
      },
      "expression": false,
      "generator": false,
      "async": false,
      "params": [
        {
          "type": "Identifier",
          "start": 488,
          "end": 489,
          "name": "c"
        }
      ],
      "body": {
        "type": "BlockStatement",
        "start": 491,
        "end": 762,
        "body": [
          {
            "type": "SwitchStatement",
            "start": 495,
            "end": 760,
            "discriminant": {
              "type": "Identifier",
              "start": 503,
              "end": 504,
              "name": "c"
            },
            "cases": [
              {
                "type": "SwitchCase",
                "start": 512,
                "end": 521,
                "consequent": [],
                "test": {
                  "type": "Literal",
                  "start": 517,
                  "end": 520,
                  "value": "^"
                }
              },
              {
                "type": "SwitchCase",
                "start": 526,
                "end": 535,
                "consequent": [],
                "test": {
                  "type": "Literal",
                  "start": 531,
                  "end": 534,
                  "value": "$"
                }
              },
              {
                "type": "SwitchCase",
                "start": 540,
                "end": 550,
                "consequent": [],
                "test": {
                  "type": "Literal",
                  "start": 545,
                  "end": 549,
                  "value": "\\"
                }
              },
              {
                "type": "SwitchCase",
                "start": 555,
                "end": 564,
                "consequent": [],
                "test": {
                  "type": "Literal",
                  "start": 560,
                  "end": 563,
                  "value": "."
                }
              },
              {
                "type": "SwitchCase",
                "start": 569,
                "end": 578,
                "consequent": [],
                "test": {
                  "type": "Literal",
                  "start": 574,
                  "end": 577,
                  "value": "*"
                }
              },
              {
                "type": "SwitchCase",
                "start": 583,
                "end": 592,
                "consequent": [],
                "test": {
                  "type": "Literal",
                  "start": 588,
                  "end": 591,
                  "value": "+"
                }
              },
              {
                "type": "SwitchCase",
                "start": 597,
                "end": 606,
                "consequent": [],
                "test": {
                  "type": "Literal",
                  "start": 602,
                  "end": 605,
                  "value": "?"
                }
              },
              {
                "type": "SwitchCase",
                "start": 611,
                "end": 620,
                "consequent": [],
                "test": {
                  "type": "Literal",
                  "start": 616,
                  "end": 619,
                  "value": "("
                }
              },
              {
                "type": "SwitchCase",
                "start": 625,
                "end": 634,
                "consequent": [],
                "test": {
                  "type": "Literal",
                  "start": 630,
                  "end": 633,
                  "value": ")"
                }
              },
              {
                "type": "SwitchCase",
                "start": 639,
                "end": 648,
                "consequent": [],
                "test": {
                  "type": "Literal",
                  "start": 644,
                  "end": 647,
                  "value": "["
                }
              },
              {
                "type": "SwitchCase",
                "start": 653,
                "end": 662,
                "consequent": [],
                "test": {
                  "type": "Literal",
                  "start": 658,
                  "end": 661,
                  "value": "]"
                }
              },
              {
                "type": "SwitchCase",
                "start": 667,
                "end": 676,
                "consequent": [],
                "test": {
                  "type": "Literal",
                  "start": 672,
                  "end": 675,
                  "value": "{"
                }
              },
              {
                "type": "SwitchCase",
                "start": 681,
                "end": 690,
                "consequent": [],
                "test": {
                  "type": "Literal",
                  "start": 686,
                  "end": 689,
                  "value": "}"
                }
              },
              {
                "type": "SwitchCase",
                "start": 695,
                "end": 723,
                "consequent": [
                  {
                    "type": "ReturnStatement",
                    "start": 711,
                    "end": 723,
                    "argument": {
                      "type": "Literal",
                      "start": 718,
                      "end": 722,
                      "value": true
                    }
                  }
                ],
                "test": {
                  "type": "Literal",
                  "start": 700,
                  "end": 703,
                  "value": "|"
                }
              },
              {
                "type": "SwitchCase",
                "start": 728,
                "end": 756,
                "consequent": [
                  {
                    "type": "ReturnStatement",
                    "start": 743,
                    "end": 756,
                    "argument": {
                      "type": "Literal",
                      "start": 750,
                      "end": 755,
                      "value": false
                    }
                  }
                ],
                "test": null
              }
            ]
          }
        ]
      }
    },
    {
      "type": "FunctionDeclaration",
      "start": 764,
      "end": 877,
      "id": {
        "type": "Identifier",
        "start": 773,
        "end": 785,
        "name": "isAlphaDigit"
      },
      "expression": false,
      "generator": false,
      "async": false,
      "params": [
        {
          "type": "Identifier",
          "start": 786,
          "end": 787,
          "name": "c"
        }
      ],
      "body": {
        "type": "BlockStatement",
        "start": 789,
        "end": 877,
        "body": [
          {
            "type": "ReturnStatement",
            "start": 793,
            "end": 875,
            "argument": {
              "type": "LogicalExpression",
              "start": 800,
              "end": 874,
              "left": {
                "type": "LogicalExpression",
                "start": 800,
                "end": 848,
                "left": {
                  "type": "ParenthesizedExpression",
                  "start": 800,
                  "end": 822,
                  "expression": {
                    "type": "LogicalExpression",
                    "start": 801,
                    "end": 821,
                    "left": {
                      "type": "BinaryExpression",
                      "start": 801,
                      "end": 809,
                      "left": {
                        "type": "Literal",
                        "start": 801,
                        "end": 804,
                        "value": "0"
                      },
                      "operator": "<=",
                      "right": {
                        "type": "Identifier",
                        "start": 808,
                        "end": 809,
                        "name": "c"
                      }
                    },
                    "operator": "&&",
                    "right": {
                      "type": "BinaryExpression",
                      "start": 813,
                      "end": 821,
                      "left": {
                        "type": "Identifier",
                        "start": 813,
                        "end": 814,
                        "name": "c"
                      },
                      "operator": "<=",
                      "right": {
                        "type": "Literal",
                        "start": 818,
                        "end": 821,
                        "value": "9"
                      }
                    }
                  }
                },
                "operator": "||",
                "right": {
                  "type": "ParenthesizedExpression",
                  "start": 826,
                  "end": 848,
                  "expression": {
                    "type": "LogicalExpression",
                    "start": 827,
                    "end": 847,
                    "left": {
                      "type": "BinaryExpression",
                      "start": 827,
                      "end": 835,
                      "left": {
                        "type": "Literal",
                        "start": 827,
                        "end": 830,
                        "value": "A"
                      },
                      "operator": "<=",
                      "right": {
                        "type": "Identifier",
                        "start": 834,
                        "end": 835,
                        "name": "c"
                      }
                    },
                    "operator": "&&",
                    "right": {
                      "type": "BinaryExpression",
                      "start": 839,
                      "end": 847,
                      "left": {
                        "type": "Identifier",
                        "start": 839,
                        "end": 840,
                        "name": "c"
                      },
                      "operator": "<=",
                      "right": {
                        "type": "Literal",
                        "start": 844,
                        "end": 847,
                        "value": "Z"
                      }
                    }
                  }
                }
              },
              "operator": "||",
              "right": {
                "type": "ParenthesizedExpression",
                "start": 852,
                "end": 874,
                "expression": {
                  "type": "LogicalExpression",
                  "start": 853,
                  "end": 873,
                  "left": {
                    "type": "BinaryExpression",
                    "start": 853,
                    "end": 861,
                    "left": {
                      "type": "Literal",
                      "start": 853,
                      "end": 856,
                      "value": "a"
                    },
                    "operator": "<=",
                    "right": {
                      "type": "Identifier",
                      "start": 860,
                      "end": 861,
                      "name": "c"
                    }
                  },
                  "operator": "&&",
                  "right": {
                    "type": "BinaryExpression",
                    "start": 865,
                    "end": 873,
                    "left": {
                      "type": "Identifier",
                      "start": 865,
                      "end": 866,
                      "name": "c"
                    },
                    "operator": "<=",
                    "right": {
                      "type": "Literal",
                      "start": 870,
                      "end": 873,
                      "value": "z"
                    }
                  }
                }
              }
            }
          }
        ]
      }
    },
    {
      "type": "ForStatement",
      "start": 1000,
      "end": 1280,
      "init": {
        "type": "VariableDeclaration",
        "start": 1005,
        "end": 1018,
        "declarations": [
          {
            "type": "VariableDeclarator",
            "start": 1009,
            "end": 1018,
            "id": {
              "type": "Identifier",
              "start": 1009,
              "end": 1011,
              "name": "cu"
            },
            "init": {
              "type": "Literal",
              "start": 1014,
              "end": 1018,
              "value": 0
            }
          }
        ],
        "kind": "var"
      },
      "test": {
        "type": "BinaryExpression",
        "start": 1020,
        "end": 1030,
        "left": {
          "type": "Identifier",
          "start": 1020,
          "end": 1022,
          "name": "cu"
        },
        "operator": "<=",
        "right": {
          "type": "Literal",
          "start": 1026,
          "end": 1030,
          "value": 127
        }
      },
      "update": {
        "type": "UpdateExpression",
        "start": 1032,
        "end": 1036,
        "operator": "++",
        "prefix": true,
        "argument": {
          "type": "Identifier",
          "start": 1034,
          "end": 1036,
          "name": "cu"
        }
      },
      "body": {
        "type": "BlockStatement",
        "start": 1038,
        "end": 1280,
        "body": [
          {
            "type": "VariableDeclaration",
            "start": 1042,
            "end": 1074,
            "declarations": [
              {
                "type": "VariableDeclarator",
                "start": 1046,
                "end": 1073,
                "id": {
                  "type": "Identifier",
                  "start": 1046,
                  "end": 1047,
                  "name": "s"
                },
                "init": {
                  "type": "CallExpression",
                  "start": 1050,
                  "end": 1073,
                  "callee": {
                    "type": "MemberExpression",
                    "start": 1050,
                    "end": 1069,
                    "object": {
                      "type": "Identifier",
                      "start": 1050,
                      "end": 1056,
                      "name": "String"
                    },
                    "property": {
                      "type": "Identifier",
                      "start": 1057,
                      "end": 1069,
                      "name": "fromCharCode"
                    },
                    "computed": false,
                    "optional": false
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "start": 1070,
                      "end": 1072,
                      "name": "cu"
                    }
                  ],
                  "optional": false
                }
              }
            ],
            "kind": "var"
          },
          {
            "type": "IfStatement",
            "start": 1077,
            "end": 1278,
            "test": {
              "type": "LogicalExpression",
              "start": 1081,
              "end": 1135,
              "left": {
                "type": "LogicalExpression",
                "start": 1081,
                "end": 1122,
                "left": {
                  "type": "UnaryExpression",
                  "start": 1081,
                  "end": 1097,
                  "operator": "!",
                  "prefix": true,
                  "argument": {
                    "type": "CallExpression",
                    "start": 1082,
                    "end": 1097,
                    "callee": {
                      "type": "Identifier",
                      "start": 1082,
                      "end": 1094,
                      "name": "isAlphaDigit"
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "start": 1095,
                        "end": 1096,
                        "name": "s"
                      }
                    ],
                    "optional": false
                  }
                },
                "operator": "&&",
                "right": {
                  "type": "UnaryExpression",
                  "start": 1101,
                  "end": 1122,
                  "operator": "!",
                  "prefix": true,
                  "argument": {
                    "type": "CallExpression",
                    "start": 1102,
                    "end": 1122,
                    "callee": {
                      "type": "Identifier",
                      "start": 1102,
                      "end": 1119,
                      "name": "isSyntaxCharacter"
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "start": 1120,
                        "end": 1121,
                        "name": "s"
                      }
                    ],
                    "optional": false
                  }
                }
              },
              "operator": "&&",
              "right": {
                "type": "BinaryExpression",
                "start": 1126,
                "end": 1135,
                "left": {
                  "type": "Identifier",
                  "start": 1126,
                  "end": 1127,
                  "name": "s"
                },
                "operator": "!==",
                "right": {
                  "type": "Literal",
                  "start": 1132,
                  "end": 1135,
                  "value": "/"
                }
              }
            },
            "consequent": {
              "type": "BlockStatement",
              "start": 1137,
              "end": 1278,
              "body": [
                {
                  "type": "ExpressionStatement",
                  "start": 1143,
                  "end": 1274,
                  "expression": {
                    "type": "CallExpression",
                    "start": 1143,
                    "end": 1273,
                    "callee": {
                      "type": "MemberExpression",
                      "start": 1143,
                      "end": 1156,
                      "object": {
                        "type": "Identifier",
                        "start": 1143,
                        "end": 1149,
                        "name": "assert"
                      },
                      "property": {
                        "type": "Identifier",
                        "start": 1150,
                        "end": 1156,
                        "name": "throws"
                      },
                      "computed": false,
                      "optional": false
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "start": 1157,
                        "end": 1168,
                        "name": "SyntaxError"
                      },
                      {
                        "type": "FunctionExpression",
                        "start": 1170,
                        "end": 1217,
                        "id": null,
                        "expression": false,
                        "generator": false,
                        "async": false,
                        "params": [],
                        "body": {
                          "type": "BlockStatement",
                          "start": 1181,
                          "end": 1217,
                          "body": [
                            {
                              "type": "ExpressionStatement",
                              "start": 1189,
                              "end": 1211,
                              "expression": {
                                "type": "CallExpression",
                                "start": 1189,
                                "end": 1210,
                                "callee": {
                                  "type": "Identifier",
                                  "start": 1189,
                                  "end": 1195,
                                  "name": "RegExp"
                                },
                                "arguments": [
                                  {
                                    "type": "BinaryExpression",
                                    "start": 1196,
                                    "end": 1204,
                                    "left": {
                                      "type": "Literal",
                                      "start": 1196,
                                      "end": 1200,
                                      "value": "\\"
                                    },
                                    "operator": "+",
                                    "right": {
                                      "type": "Identifier",
                                      "start": 1203,
                                      "end": 1204,
                                      "name": "s"
                                    }
                                  },
                                  {
                                    "type": "Literal",
                                    "start": 1206,
                                    "end": 1209,
                                    "value": "u"
                                  }
                                ],
                                "optional": false
                              }
                            }
                          ]
                        }
                      },
                      {
                        "type": "BinaryExpression",
                        "start": 1219,
                        "end": 1272,
                        "left": {
                          "type": "BinaryExpression",
                          "start": 1219,
                          "end": 1266,
                          "left": {
                            "type": "Literal",
                            "start": 1219,
                            "end": 1262,
                            "value": "Invalid IdentityEscape in AtomEscape: '\\"
                          },
                          "operator": "+",
                          "right": {
                            "type": "Identifier",
                            "start": 1265,
                            "end": 1266,
                            "name": "s"
                          }
                        },
                        "operator": "+",
                        "right": {
                          "type": "Literal",
                          "start": 1269,
                          "end": 1272,
                          "value": "'"
                        }
                      }
                    ],
                    "optional": false
                  }
                }
              ]
            },
            "alternate": null
          }
        ]
      }
    },
    {
      "type": "ForStatement",
      "start": 1405,
      "end": 1706,
      "init": {
        "type": "VariableDeclaration",
        "start": 1410,
        "end": 1423,
        "declarations": [
          {
            "type": "VariableDeclarator",
            "start": 1414,
            "end": 1423,
            "id": {
              "type": "Identifier",
              "start": 1414,
              "end": 1416,
              "name": "cu"
            },
            "init": {
              "type": "Literal",
              "start": 1419,
              "end": 1423,
              "value": 0
            }
          }
        ],
        "kind": "var"
      },
      "test": {
        "type": "BinaryExpression",
        "start": 1425,
        "end": 1435,
        "left": {
          "type": "Identifier",
          "start": 1425,
          "end": 1427,
          "name": "cu"
        },
        "operator": "<=",
        "right": {
          "type": "Literal",
          "start": 1431,
          "end": 1435,
          "value": 127
        }
      },
      "update": {
        "type": "UpdateExpression",
        "start": 1437,
        "end": 1441,
        "operator": "++",
        "prefix": true,
        "argument": {
          "type": "Identifier",
          "start": 1439,
          "end": 1441,
          "name": "cu"
        }
      },
      "body": {
        "type": "BlockStatement",
        "start": 1443,
        "end": 1706,
        "body": [
          {
            "type": "VariableDeclaration",
            "start": 1447,
            "end": 1479,
            "declarations": [
              {
                "type": "VariableDeclarator",
                "start": 1451,
                "end": 1478,
                "id": {
                  "type": "Identifier",
                  "start": 1451,
                  "end": 1452,
                  "name": "s"
                },
                "init": {
                  "type": "CallExpression",
                  "start": 1455,
                  "end": 1478,
                  "callee": {
                    "type": "MemberExpression",
                    "start": 1455,
                    "end": 1474,
                    "object": {
                      "type": "Identifier",
                      "start": 1455,
                      "end": 1461,
                      "name": "String"
                    },
                    "property": {
                      "type": "Identifier",
                      "start": 1462,
                      "end": 1474,
                      "name": "fromCharCode"
                    },
                    "computed": false,
                    "optional": false
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "start": 1475,
                      "end": 1477,
                      "name": "cu"
                    }
                  ],
                  "optional": false
                }
              }
            ],
            "kind": "var"
          },
          {
            "type": "IfStatement",
            "start": 1482,
            "end": 1704,
            "test": {
              "type": "LogicalExpression",
              "start": 1486,
              "end": 1553,
              "left": {
                "type": "LogicalExpression",
                "start": 1486,
                "end": 1540,
                "left": {
                  "type": "LogicalExpression",
                  "start": 1486,
                  "end": 1527,
                  "left": {
                    "type": "UnaryExpression",
                    "start": 1486,
                    "end": 1502,
                    "operator": "!",
                    "prefix": true,
                    "argument": {
                      "type": "CallExpression",
                      "start": 1487,
                      "end": 1502,
                      "callee": {
                        "type": "Identifier",
                        "start": 1487,
                        "end": 1499,
                        "name": "isAlphaDigit"
                      },
                      "arguments": [
                        {
                          "type": "Identifier",
                          "start": 1500,
                          "end": 1501,
                          "name": "s"
                        }
                      ],
                      "optional": false
                    }
                  },
                  "operator": "&&",
                  "right": {
                    "type": "UnaryExpression",
                    "start": 1506,
                    "end": 1527,
                    "operator": "!",
                    "prefix": true,
                    "argument": {
                      "type": "CallExpression",
                      "start": 1507,
                      "end": 1527,
                      "callee": {
                        "type": "Identifier",
                        "start": 1507,
                        "end": 1524,
                        "name": "isSyntaxCharacter"
                      },
                      "arguments": [
                        {
                          "type": "Identifier",
                          "start": 1525,
                          "end": 1526,
                          "name": "s"
                        }
                      ],
                      "optional": false
                    }
                  }
                },
                "operator": "&&",
                "right": {
                  "type": "BinaryExpression",
                  "start": 1531,
                  "end": 1540,
                  "left": {
                    "type": "Identifier",
                    "start": 1531,
                    "end": 1532,
                    "name": "s"
                  },
                  "operator": "!==",
                  "right": {
                    "type": "Literal",
                    "start": 1537,
                    "end": 1540,
                    "value": "/"
                  }
                }
              },
              "operator": "&&",
              "right": {
                "type": "BinaryExpression",
                "start": 1544,
                "end": 1553,
                "left": {
                  "type": "Identifier",
                  "start": 1544,
                  "end": 1545,
                  "name": "s"
                },
                "operator": "!==",
                "right": {
                  "type": "Literal",
                  "start": 1550,
                  "end": 1553,
                  "value": "-"
                }
              }
            },
            "consequent": {
              "type": "BlockStatement",
              "start": 1555,
              "end": 1704,
              "body": [
                {
                  "type": "ExpressionStatement",
                  "start": 1561,
                  "end": 1700,
                  "expression": {
                    "type": "CallExpression",
                    "start": 1561,
                    "end": 1699,
                    "callee": {
                      "type": "MemberExpression",
                      "start": 1561,
                      "end": 1574,
                      "object": {
                        "type": "Identifier",
                        "start": 1561,
                        "end": 1567,
                        "name": "assert"
                      },
                      "property": {
                        "type": "Identifier",
                        "start": 1568,
                        "end": 1574,
                        "name": "throws"
                      },
                      "computed": false,
                      "optional": false
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "start": 1575,
                        "end": 1586,
                        "name": "SyntaxError"
                      },
                      {
                        "type": "FunctionExpression",
                        "start": 1588,
                        "end": 1642,
                        "id": null,
                        "expression": false,
                        "generator": false,
                        "async": false,
                        "params": [],
                        "body": {
                          "type": "BlockStatement",
                          "start": 1599,
                          "end": 1642,
                          "body": [
                            {
                              "type": "ExpressionStatement",
                              "start": 1607,
                              "end": 1636,
                              "expression": {
                                "type": "CallExpression",
                                "start": 1607,
                                "end": 1635,
                                "callee": {
                                  "type": "Identifier",
                                  "start": 1607,
                                  "end": 1613,
                                  "name": "RegExp"
                                },
                                "arguments": [
                                  {
                                    "type": "BinaryExpression",
                                    "start": 1614,
                                    "end": 1629,
                                    "left": {
                                      "type": "BinaryExpression",
                                      "start": 1614,
                                      "end": 1623,
                                      "left": {
                                        "type": "Literal",
                                        "start": 1614,
                                        "end": 1619,
                                        "value": "[\\"
                                      },
                                      "operator": "+",
                                      "right": {
                                        "type": "Identifier",
                                        "start": 1622,
                                        "end": 1623,
                                        "name": "s"
                                      }
                                    },
                                    "operator": "+",
                                    "right": {
                                      "type": "Literal",
                                      "start": 1626,
                                      "end": 1629,
                                      "value": "]"
                                    }
                                  },
                                  {
                                    "type": "Literal",
                                    "start": 1631,
                                    "end": 1634,
                                    "value": "u"
                                  }
                                ],
                                "optional": false
                              }
                            }
                          ]
                        }
                      },
                      {
                        "type": "BinaryExpression",
                        "start": 1644,
                        "end": 1698,
                        "left": {
                          "type": "BinaryExpression",
                          "start": 1644,
                          "end": 1692,
                          "left": {
                            "type": "Literal",
                            "start": 1644,
                            "end": 1688,
                            "value": "Invalid IdentityEscape in ClassEscape: '\\"
                          },
                          "operator": "+",
                          "right": {
                            "type": "Identifier",
                            "start": 1691,
                            "end": 1692,
                            "name": "s"
                          }
                        },
                        "operator": "+",
                        "right": {
                          "type": "Literal",
                          "start": 1695,
                          "end": 1698,
                          "value": "'"
                        }
                      }
                    ],
                    "optional": false
                  }
                }
              ]
            },
            "alternate": null
          }
        ]
      }
    }
  ],
  "sourceType": "script"
}