{
  "type": "Program",
  "start": 0,
  "end": 1102,
  "body": [
    {
      "type": "VariableDeclaration",
      "start": 641,
      "end": 878,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 647,
          "end": 877,
          "id": {
            "type": "Identifier",
            "start": 647,
            "end": 669,
            "name": "invalidCalendarOptions"
          },
          "init": {
            "type": "ArrayExpression",
            "start": 672,
            "end": 877,
            "elements": [
              {
                "type": "Literal",
                "start": 676,
                "end": 678,
                "value": ""
              },
              {
                "type": "Literal",
                "start": 682,
                "end": 685,
                "value": "a"
              },
              {
                "type": "Literal",
                "start": 689,
                "end": 693,
                "value": "ab"
              },
              {
                "type": "Literal",
                "start": 697,
                "end": 708,
                "value": "abcdefghi"
              },
              {
                "type": "Literal",
                "start": 712,
                "end": 727,
                "value": "abc-abcdefghi"
              },
              {
                "type": "Literal",
                "start": 731,
                "end": 742,
                "value": "!invalid!"
              },
              {
                "type": "Literal",
                "start": 746,
                "end": 757,
                "value": "-gregory-"
              },
              {
                "type": "Literal",
                "start": 761,
                "end": 771,
                "value": "gregory-"
              },
              {
                "type": "Literal",
                "start": 775,
                "end": 786,
                "value": "gregory--"
              },
              {
                "type": "Literal",
                "start": 790,
                "end": 802,
                "value": "gregory-nu"
              },
              {
                "type": "Literal",
                "start": 806,
                "end": 819,
                "value": "gregory-nu-"
              },
              {
                "type": "Literal",
                "start": 823,
                "end": 840,
                "value": "gregory-nu-latn"
              },
              {
                "type": "Literal",
                "start": 844,
                "end": 855,
                "value": "gregoryé"
              },
              {
                "type": "Literal",
                "start": 859,
                "end": 874,
                "value": "gregory역법"
              }
            ]
          }
        }
      ],
      "kind": "const"
    },
    {
      "type": "ForOfStatement",
      "start": 879,
      "end": 1101,
      "await": false,
      "left": {
        "type": "VariableDeclaration",
        "start": 884,
        "end": 898,
        "declarations": [
          {
            "type": "VariableDeclarator",
            "start": 890,
            "end": 898,
            "id": {
              "type": "Identifier",
              "start": 890,
              "end": 898,
              "name": "calendar"
            },
            "init": null
          }
        ],
        "kind": "const"
      },
      "right": {
        "type": "Identifier",
        "start": 902,
        "end": 924,
        "name": "invalidCalendarOptions"
      },
      "body": {
        "type": "BlockStatement",
        "start": 926,
        "end": 1101,
        "body": [
          {
            "type": "ExpressionStatement",
            "start": 930,
            "end": 1099,
            "expression": {
              "type": "CallExpression",
              "start": 930,
              "end": 1098,
              "callee": {
                "type": "MemberExpression",
                "start": 930,
                "end": 943,
                "object": {
                  "type": "Identifier",
                  "start": 930,
                  "end": 936,
                  "name": "assert"
                },
                "property": {
                  "type": "Identifier",
                  "start": 937,
                  "end": 943,
                  "name": "throws"
                },
                "computed": false,
                "optional": false
              },
              "arguments": [
                {
                  "type": "Identifier",
                  "start": 944,
                  "end": 954,
                  "name": "RangeError"
                },
                {
                  "type": "FunctionExpression",
                  "start": 956,
                  "end": 1019,
                  "id": null,
                  "expression": false,
                  "generator": false,
                  "async": false,
                  "params": [],
                  "body": {
                    "type": "BlockStatement",
                    "start": 967,
                    "end": 1019,
                    "body": [
                      {
                        "type": "ExpressionStatement",
                        "start": 973,
                        "end": 1015,
                        "expression": {
                          "type": "NewExpression",
                          "start": 973,
                          "end": 1014,
                          "callee": {
                            "type": "MemberExpression",
                            "start": 977,
                            "end": 996,
                            "object": {
                              "type": "Identifier",
                              "start": 977,
                              "end": 981,
                              "name": "Intl"
                            },
                            "property": {
                              "type": "Identifier",
                              "start": 982,
                              "end": 996,
                              "name": "DateTimeFormat"
                            },
                            "computed": false,
                            "optional": false
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "start": 997,
                              "end": 1001,
                              "value": "en"
                            },
                            {
                              "type": "ObjectExpression",
                              "start": 1003,
                              "end": 1013,
                              "properties": [
                                {
                                  "type": "Property",
                                  "start": 1004,
                                  "end": 1012,
                                  "method": false,
                                  "shorthand": true,
                                  "computed": false,
                                  "key": {
                                    "type": "Identifier",
                                    "start": 1004,
                                    "end": 1012,
                                    "name": "calendar"
                                  },
                                  "kind": "init",
                                  "value": {
                                    "type": "Identifier",
                                    "start": 1004,
                                    "end": 1012,
                                    "name": "calendar"
                                  }
                                }
                              ]
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                {
                  "type": "TemplateLiteral",
                  "start": 1021,
                  "end": 1097,
                  "expressions": [
                    {
                      "type": "Identifier",
                      "start": 1066,
                      "end": 1074,
                      "name": "calendar"
                    }
                  ],
                  "quasis": [
                    {
                      "type": "TemplateElement",
                      "start": 1022,
                      "end": 1064,
                      "value": {
                        "raw": "new Intl.DateTimeFormat(\"en\", {calendar: \"",
                        "cooked": "new Intl.DateTimeFormat(\"en\", {calendar: \""
                      },
                      "tail": false
                    },
                    {
                      "type": "TemplateElement",
                      "start": 1075,
                      "end": 1096,
                      "value": {
                        "raw": "\"}) throws RangeError",
                        "cooked": "\"}) throws RangeError"
                      },
                      "tail": true
                    }
                  ]
                }
              ],
              "optional": false
            }
          }
        ]
      }
    }
  ],
  "sourceType": "script"
}