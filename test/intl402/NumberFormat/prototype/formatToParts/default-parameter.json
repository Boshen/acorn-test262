{
  "type": "Program",
  "start": 0,
  "end": 1318,
  "body": [
    {
      "type": "VariableDeclaration",
      "start": 393,
      "end": 426,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 397,
          "end": 425,
          "id": {
            "type": "Identifier",
            "start": 397,
            "end": 399,
            "name": "nf"
          },
          "init": {
            "type": "NewExpression",
            "start": 402,
            "end": 425,
            "callee": {
              "type": "MemberExpression",
              "start": 406,
              "end": 423,
              "object": {
                "type": "Identifier",
                "start": 406,
                "end": 410,
                "name": "Intl"
              },
              "property": {
                "type": "Identifier",
                "start": 411,
                "end": 423,
                "name": "NumberFormat"
              },
              "computed": false,
              "optional": false
            },
            "arguments": []
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "VariableDeclaration",
      "start": 428,
      "end": 464,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 434,
          "end": 463,
          "id": {
            "type": "Identifier",
            "start": 434,
            "end": 442,
            "name": "implicit"
          },
          "init": {
            "type": "CallExpression",
            "start": 445,
            "end": 463,
            "callee": {
              "type": "MemberExpression",
              "start": 445,
              "end": 461,
              "object": {
                "type": "Identifier",
                "start": 445,
                "end": 447,
                "name": "nf"
              },
              "property": {
                "type": "Identifier",
                "start": 448,
                "end": 461,
                "name": "formatToParts"
              },
              "computed": false,
              "optional": false
            },
            "arguments": [],
            "optional": false
          }
        }
      ],
      "kind": "const"
    },
    {
      "type": "VariableDeclaration",
      "start": 465,
      "end": 510,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 471,
          "end": 509,
          "id": {
            "type": "Identifier",
            "start": 471,
            "end": 479,
            "name": "explicit"
          },
          "init": {
            "type": "CallExpression",
            "start": 482,
            "end": 509,
            "callee": {
              "type": "MemberExpression",
              "start": 482,
              "end": 498,
              "object": {
                "type": "Identifier",
                "start": 482,
                "end": 484,
                "name": "nf"
              },
              "property": {
                "type": "Identifier",
                "start": 485,
                "end": 498,
                "name": "formatToParts"
              },
              "computed": false,
              "optional": false
            },
            "arguments": [
              {
                "type": "Identifier",
                "start": 499,
                "end": 508,
                "name": "undefined"
              }
            ],
            "optional": false
          }
        }
      ],
      "kind": "const"
    },
    {
      "type": "VariableDeclaration",
      "start": 691,
      "end": 724,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 697,
          "end": 723,
          "id": {
            "type": "Identifier",
            "start": 697,
            "end": 706,
            "name": "resultNaN"
          },
          "init": {
            "type": "CallExpression",
            "start": 709,
            "end": 723,
            "callee": {
              "type": "MemberExpression",
              "start": 709,
              "end": 718,
              "object": {
                "type": "Identifier",
                "start": 709,
                "end": 711,
                "name": "nf"
              },
              "property": {
                "type": "Identifier",
                "start": 712,
                "end": 718,
                "name": "format"
              },
              "computed": false,
              "optional": false
            },
            "arguments": [
              {
                "type": "Identifier",
                "start": 719,
                "end": 722,
                "name": "NaN"
              }
            ],
            "optional": false
          }
        }
      ],
      "kind": "const"
    },
    {
      "type": "VariableDeclaration",
      "start": 725,
      "end": 776,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 731,
          "end": 775,
          "id": {
            "type": "Identifier",
            "start": 731,
            "end": 737,
            "name": "result"
          },
          "init": {
            "type": "ArrayExpression",
            "start": 740,
            "end": 775,
            "elements": [
              {
                "type": "ObjectExpression",
                "start": 741,
                "end": 774,
                "properties": [
                  {
                    "type": "Property",
                    "start": 743,
                    "end": 754,
                    "method": false,
                    "shorthand": false,
                    "computed": false,
                    "key": {
                      "type": "Identifier",
                      "start": 743,
                      "end": 747,
                      "name": "type"
                    },
                    "value": {
                      "type": "Literal",
                      "start": 749,
                      "end": 754,
                      "value": "nan"
                    },
                    "kind": "init"
                  },
                  {
                    "type": "Property",
                    "start": 756,
                    "end": 772,
                    "method": false,
                    "shorthand": false,
                    "computed": false,
                    "key": {
                      "type": "Identifier",
                      "start": 756,
                      "end": 761,
                      "name": "value"
                    },
                    "value": {
                      "type": "Identifier",
                      "start": 763,
                      "end": 772,
                      "name": "resultNaN"
                    },
                    "kind": "init"
                  }
                ]
              }
            ]
          }
        }
      ],
      "kind": "const"
    },
    {
      "type": "ExpressionStatement",
      "start": 778,
      "end": 892,
      "expression": {
        "type": "CallExpression",
        "start": 778,
        "end": 891,
        "callee": {
          "type": "Identifier",
          "start": 778,
          "end": 784,
          "name": "assert"
        },
        "arguments": [
          {
            "type": "CallExpression",
            "start": 788,
            "end": 819,
            "callee": {
              "type": "Identifier",
              "start": 788,
              "end": 799,
              "name": "partsEquals"
            },
            "arguments": [
              {
                "type": "Identifier",
                "start": 800,
                "end": 808,
                "name": "implicit"
              },
              {
                "type": "Identifier",
                "start": 810,
                "end": 818,
                "name": "explicit"
              }
            ],
            "optional": false
          },
          {
            "type": "Literal",
            "start": 823,
            "end": 889,
            "value": "formatToParts() should be equivalent to formatToParts(undefined)"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 894,
      "end": 1005,
      "expression": {
        "type": "CallExpression",
        "start": 894,
        "end": 1004,
        "callee": {
          "type": "Identifier",
          "start": 894,
          "end": 900,
          "name": "assert"
        },
        "arguments": [
          {
            "type": "CallExpression",
            "start": 904,
            "end": 933,
            "callee": {
              "type": "Identifier",
              "start": 904,
              "end": 915,
              "name": "partsEquals"
            },
            "arguments": [
              {
                "type": "Identifier",
                "start": 916,
                "end": 924,
                "name": "implicit"
              },
              {
                "type": "Identifier",
                "start": 926,
                "end": 932,
                "name": "result"
              }
            ],
            "optional": false
          },
          {
            "type": "Literal",
            "start": 937,
            "end": 1002,
            "value": "Both implicit and explicit calls should have the correct result"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "FunctionDeclaration",
      "start": 1007,
      "end": 1317,
      "id": {
        "type": "Identifier",
        "start": 1016,
        "end": 1027,
        "name": "partsEquals"
      },
      "expression": false,
      "generator": false,
      "async": false,
      "params": [
        {
          "type": "Identifier",
          "start": 1028,
          "end": 1034,
          "name": "parts1"
        },
        {
          "type": "Identifier",
          "start": 1036,
          "end": 1042,
          "name": "parts2"
        }
      ],
      "body": {
        "type": "BlockStatement",
        "start": 1044,
        "end": 1317,
        "body": [
          {
            "type": "IfStatement",
            "start": 1048,
            "end": 1098,
            "test": {
              "type": "BinaryExpression",
              "start": 1052,
              "end": 1083,
              "left": {
                "type": "MemberExpression",
                "start": 1052,
                "end": 1065,
                "object": {
                  "type": "Identifier",
                  "start": 1052,
                  "end": 1058,
                  "name": "parts1"
                },
                "property": {
                  "type": "Identifier",
                  "start": 1059,
                  "end": 1065,
                  "name": "length"
                },
                "computed": false,
                "optional": false
              },
              "operator": "!==",
              "right": {
                "type": "MemberExpression",
                "start": 1070,
                "end": 1083,
                "object": {
                  "type": "Identifier",
                  "start": 1070,
                  "end": 1076,
                  "name": "parts2"
                },
                "property": {
                  "type": "Identifier",
                  "start": 1077,
                  "end": 1083,
                  "name": "length"
                },
                "computed": false,
                "optional": false
              }
            },
            "consequent": {
              "type": "ReturnStatement",
              "start": 1085,
              "end": 1098,
              "argument": {
                "type": "Literal",
                "start": 1092,
                "end": 1097,
                "value": false
              }
            },
            "alternate": null
          },
          {
            "type": "ForStatement",
            "start": 1101,
            "end": 1300,
            "init": {
              "type": "VariableDeclaration",
              "start": 1106,
              "end": 1115,
              "declarations": [
                {
                  "type": "VariableDeclarator",
                  "start": 1110,
                  "end": 1115,
                  "id": {
                    "type": "Identifier",
                    "start": 1110,
                    "end": 1111,
                    "name": "i"
                  },
                  "init": {
                    "type": "Literal",
                    "start": 1114,
                    "end": 1115,
                    "value": 0
                  }
                }
              ],
              "kind": "var"
            },
            "test": {
              "type": "BinaryExpression",
              "start": 1117,
              "end": 1134,
              "left": {
                "type": "Identifier",
                "start": 1117,
                "end": 1118,
                "name": "i"
              },
              "operator": "<",
              "right": {
                "type": "MemberExpression",
                "start": 1121,
                "end": 1134,
                "object": {
                  "type": "Identifier",
                  "start": 1121,
                  "end": 1127,
                  "name": "parts1"
                },
                "property": {
                  "type": "Identifier",
                  "start": 1128,
                  "end": 1134,
                  "name": "length"
                },
                "computed": false,
                "optional": false
              }
            },
            "update": {
              "type": "UpdateExpression",
              "start": 1136,
              "end": 1139,
              "operator": "++",
              "prefix": false,
              "argument": {
                "type": "Identifier",
                "start": 1136,
                "end": 1137,
                "name": "i"
              }
            },
            "body": {
              "type": "BlockStatement",
              "start": 1141,
              "end": 1300,
              "body": [
                {
                  "type": "VariableDeclaration",
                  "start": 1147,
                  "end": 1169,
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "start": 1151,
                      "end": 1168,
                      "id": {
                        "type": "Identifier",
                        "start": 1151,
                        "end": 1156,
                        "name": "part1"
                      },
                      "init": {
                        "type": "MemberExpression",
                        "start": 1159,
                        "end": 1168,
                        "object": {
                          "type": "Identifier",
                          "start": 1159,
                          "end": 1165,
                          "name": "parts1"
                        },
                        "property": {
                          "type": "Identifier",
                          "start": 1166,
                          "end": 1167,
                          "name": "i"
                        },
                        "computed": true,
                        "optional": false
                      }
                    }
                  ],
                  "kind": "var"
                },
                {
                  "type": "VariableDeclaration",
                  "start": 1174,
                  "end": 1196,
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "start": 1178,
                      "end": 1195,
                      "id": {
                        "type": "Identifier",
                        "start": 1178,
                        "end": 1183,
                        "name": "part2"
                      },
                      "init": {
                        "type": "MemberExpression",
                        "start": 1186,
                        "end": 1195,
                        "object": {
                          "type": "Identifier",
                          "start": 1186,
                          "end": 1192,
                          "name": "parts2"
                        },
                        "property": {
                          "type": "Identifier",
                          "start": 1193,
                          "end": 1194,
                          "name": "i"
                        },
                        "computed": true,
                        "optional": false
                      }
                    }
                  ],
                  "kind": "var"
                },
                {
                  "type": "IfStatement",
                  "start": 1201,
                  "end": 1245,
                  "test": {
                    "type": "BinaryExpression",
                    "start": 1205,
                    "end": 1230,
                    "left": {
                      "type": "MemberExpression",
                      "start": 1205,
                      "end": 1215,
                      "object": {
                        "type": "Identifier",
                        "start": 1205,
                        "end": 1210,
                        "name": "part1"
                      },
                      "property": {
                        "type": "Identifier",
                        "start": 1211,
                        "end": 1215,
                        "name": "type"
                      },
                      "computed": false,
                      "optional": false
                    },
                    "operator": "!==",
                    "right": {
                      "type": "MemberExpression",
                      "start": 1220,
                      "end": 1230,
                      "object": {
                        "type": "Identifier",
                        "start": 1220,
                        "end": 1225,
                        "name": "part2"
                      },
                      "property": {
                        "type": "Identifier",
                        "start": 1226,
                        "end": 1230,
                        "name": "type"
                      },
                      "computed": false,
                      "optional": false
                    }
                  },
                  "consequent": {
                    "type": "ReturnStatement",
                    "start": 1232,
                    "end": 1245,
                    "argument": {
                      "type": "Literal",
                      "start": 1239,
                      "end": 1244,
                      "value": false
                    }
                  },
                  "alternate": null
                },
                {
                  "type": "IfStatement",
                  "start": 1250,
                  "end": 1296,
                  "test": {
                    "type": "BinaryExpression",
                    "start": 1254,
                    "end": 1281,
                    "left": {
                      "type": "MemberExpression",
                      "start": 1254,
                      "end": 1265,
                      "object": {
                        "type": "Identifier",
                        "start": 1254,
                        "end": 1259,
                        "name": "part1"
                      },
                      "property": {
                        "type": "Identifier",
                        "start": 1260,
                        "end": 1265,
                        "name": "value"
                      },
                      "computed": false,
                      "optional": false
                    },
                    "operator": "!==",
                    "right": {
                      "type": "MemberExpression",
                      "start": 1270,
                      "end": 1281,
                      "object": {
                        "type": "Identifier",
                        "start": 1270,
                        "end": 1275,
                        "name": "part2"
                      },
                      "property": {
                        "type": "Identifier",
                        "start": 1276,
                        "end": 1281,
                        "name": "value"
                      },
                      "computed": false,
                      "optional": false
                    }
                  },
                  "consequent": {
                    "type": "ReturnStatement",
                    "start": 1283,
                    "end": 1296,
                    "argument": {
                      "type": "Literal",
                      "start": 1290,
                      "end": 1295,
                      "value": false
                    }
                  },
                  "alternate": null
                }
              ]
            }
          },
          {
            "type": "ReturnStatement",
            "start": 1303,
            "end": 1315,
            "argument": {
              "type": "Literal",
              "start": 1310,
              "end": 1314,
              "value": true
            }
          }
        ]
      }
    }
  ],
  "sourceType": "script"
}