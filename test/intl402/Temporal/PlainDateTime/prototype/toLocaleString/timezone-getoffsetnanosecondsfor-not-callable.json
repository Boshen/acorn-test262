{
  "type": "Program",
  "start": 0,
  "end": 861,
  "body": [
    {
      "type": "VariableDeclaration",
      "start": 334,
      "end": 417,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 340,
          "end": 416,
          "id": {
            "type": "Identifier",
            "start": 340,
            "end": 348,
            "name": "instance"
          },
          "init": {
            "type": "NewExpression",
            "start": 351,
            "end": 416,
            "callee": {
              "type": "MemberExpression",
              "start": 355,
              "end": 377,
              "object": {
                "type": "Identifier",
                "start": 355,
                "end": 363,
                "name": "Temporal"
              },
              "property": {
                "type": "Identifier",
                "start": 364,
                "end": 377,
                "name": "PlainDateTime"
              },
              "computed": false,
              "optional": false
            },
            "arguments": [
              {
                "type": "Literal",
                "start": 378,
                "end": 382,
                "value": 2000
              },
              {
                "type": "Literal",
                "start": 384,
                "end": 385,
                "value": 5
              },
              {
                "type": "Literal",
                "start": 387,
                "end": 388,
                "value": 2
              },
              {
                "type": "Literal",
                "start": 390,
                "end": 392,
                "value": 12
              },
              {
                "type": "Literal",
                "start": 394,
                "end": 396,
                "value": 34
              },
              {
                "type": "Literal",
                "start": 398,
                "end": 400,
                "value": 56
              },
              {
                "type": "Literal",
                "start": 402,
                "end": 405,
                "value": 987
              },
              {
                "type": "Literal",
                "start": 407,
                "end": 410,
                "value": 654
              },
              {
                "type": "Literal",
                "start": 412,
                "end": 415,
                "value": 321
              }
            ]
          }
        }
      ],
      "kind": "const"
    },
    {
      "type": "ExpressionStatement",
      "start": 418,
      "end": 500,
      "expression": {
        "type": "AssignmentExpression",
        "start": 418,
        "end": 499,
        "operator": "=",
        "left": {
          "type": "MemberExpression",
          "start": 418,
          "end": 468,
          "object": {
            "type": "MemberExpression",
            "start": 418,
            "end": 445,
            "object": {
              "type": "MemberExpression",
              "start": 418,
              "end": 435,
              "object": {
                "type": "Identifier",
                "start": 418,
                "end": 426,
                "name": "Temporal"
              },
              "property": {
                "type": "Identifier",
                "start": 427,
                "end": 435,
                "name": "TimeZone"
              },
              "computed": false,
              "optional": false
            },
            "property": {
              "type": "Identifier",
              "start": 436,
              "end": 445,
              "name": "prototype"
            },
            "computed": false,
            "optional": false
          },
          "property": {
            "type": "Identifier",
            "start": 446,
            "end": 468,
            "name": "getPossibleInstantsFor"
          },
          "computed": false,
          "optional": false
        },
        "right": {
          "type": "FunctionExpression",
          "start": 471,
          "end": 499,
          "id": null,
          "expression": false,
          "generator": false,
          "async": false,
          "params": [],
          "body": {
            "type": "BlockStatement",
            "start": 483,
            "end": 499,
            "body": [
              {
                "type": "ReturnStatement",
                "start": 487,
                "end": 497,
                "argument": {
                  "type": "ArrayExpression",
                  "start": 494,
                  "end": 496,
                  "elements": []
                }
              }
            ]
          }
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 502,
      "end": 860,
      "expression": {
        "type": "CallExpression",
        "start": 502,
        "end": 859,
        "callee": {
          "type": "MemberExpression",
          "start": 502,
          "end": 576,
          "object": {
            "type": "ArrayExpression",
            "start": 502,
            "end": 568,
            "elements": [
              {
                "type": "Identifier",
                "start": 503,
                "end": 512,
                "name": "undefined"
              },
              {
                "type": "Literal",
                "start": 514,
                "end": 518,
                "value": null
              },
              {
                "type": "Literal",
                "start": 520,
                "end": 524,
                "value": true
              },
              {
                "type": "MemberExpression",
                "start": 526,
                "end": 533,
                "object": {
                  "type": "Identifier",
                  "start": 526,
                  "end": 530,
                  "name": "Math"
                },
                "property": {
                  "type": "Identifier",
                  "start": 531,
                  "end": 533,
                  "name": "PI"
                },
                "computed": false,
                "optional": false
              },
              {
                "type": "Literal",
                "start": 535,
                "end": 543,
                "value": "string"
              },
              {
                "type": "CallExpression",
                "start": 545,
                "end": 558,
                "callee": {
                  "type": "Identifier",
                  "start": 545,
                  "end": 551,
                  "name": "Symbol"
                },
                "arguments": [
                  {
                    "type": "Literal",
                    "start": 552,
                    "end": 557,
                    "value": "sym"
                  }
                ],
                "optional": false
              },
              {
                "type": "Literal",
                "start": 560,
                "end": 563,
                "value": "42n"
              },
              {
                "type": "ObjectExpression",
                "start": 565,
                "end": 567,
                "properties": []
              }
            ]
          },
          "property": {
            "type": "Identifier",
            "start": 569,
            "end": 576,
            "name": "forEach"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "ArrowFunctionExpression",
            "start": 577,
            "end": 858,
            "id": null,
            "expression": false,
            "generator": false,
            "async": false,
            "params": [
              {
                "type": "Identifier",
                "start": 578,
                "end": 589,
                "name": "notCallable"
              }
            ],
            "body": {
              "type": "BlockStatement",
              "start": 594,
              "end": 858,
              "body": [
                {
                  "type": "ExpressionStatement",
                  "start": 598,
                  "end": 664,
                  "expression": {
                    "type": "AssignmentExpression",
                    "start": 598,
                    "end": 663,
                    "operator": "=",
                    "left": {
                      "type": "MemberExpression",
                      "start": 598,
                      "end": 649,
                      "object": {
                        "type": "MemberExpression",
                        "start": 598,
                        "end": 625,
                        "object": {
                          "type": "MemberExpression",
                          "start": 598,
                          "end": 615,
                          "object": {
                            "type": "Identifier",
                            "start": 598,
                            "end": 606,
                            "name": "Temporal"
                          },
                          "property": {
                            "type": "Identifier",
                            "start": 607,
                            "end": 615,
                            "name": "TimeZone"
                          },
                          "computed": false,
                          "optional": false
                        },
                        "property": {
                          "type": "Identifier",
                          "start": 616,
                          "end": 625,
                          "name": "prototype"
                        },
                        "computed": false,
                        "optional": false
                      },
                      "property": {
                        "type": "Identifier",
                        "start": 626,
                        "end": 649,
                        "name": "getOffsetNanosecondsFor"
                      },
                      "computed": false,
                      "optional": false
                    },
                    "right": {
                      "type": "Identifier",
                      "start": 652,
                      "end": 663,
                      "name": "notCallable"
                    }
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "start": 667,
                  "end": 856,
                  "expression": {
                    "type": "CallExpression",
                    "start": 667,
                    "end": 855,
                    "callee": {
                      "type": "MemberExpression",
                      "start": 667,
                      "end": 680,
                      "object": {
                        "type": "Identifier",
                        "start": 667,
                        "end": 673,
                        "name": "assert"
                      },
                      "property": {
                        "type": "Identifier",
                        "start": 674,
                        "end": 680,
                        "name": "throws"
                      },
                      "computed": false,
                      "optional": false
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "start": 686,
                        "end": 695,
                        "name": "TypeError"
                      },
                      {
                        "type": "ArrowFunctionExpression",
                        "start": 701,
                        "end": 732,
                        "id": null,
                        "expression": true,
                        "generator": false,
                        "async": false,
                        "params": [],
                        "body": {
                          "type": "CallExpression",
                          "start": 707,
                          "end": 732,
                          "callee": {
                            "type": "MemberExpression",
                            "start": 707,
                            "end": 730,
                            "object": {
                              "type": "Identifier",
                              "start": 707,
                              "end": 715,
                              "name": "instance"
                            },
                            "property": {
                              "type": "Identifier",
                              "start": 716,
                              "end": 730,
                              "name": "toLocaleString"
                            },
                            "computed": false,
                            "optional": false
                          },
                          "arguments": [],
                          "optional": false
                        }
                      },
                      {
                        "type": "TemplateLiteral",
                        "start": 738,
                        "end": 851,
                        "expressions": [
                          {
                            "type": "ConditionalExpression",
                            "start": 752,
                            "end": 802,
                            "test": {
                              "type": "BinaryExpression",
                              "start": 752,
                              "end": 772,
                              "left": {
                                "type": "Identifier",
                                "start": 752,
                                "end": 763,
                                "name": "notCallable"
                              },
                              "operator": "===",
                              "right": {
                                "type": "Literal",
                                "start": 768,
                                "end": 772,
                                "value": null
                              }
                            },
                            "consequent": {
                              "type": "Literal",
                              "start": 775,
                              "end": 781,
                              "value": "null"
                            },
                            "alternate": {
                              "type": "UnaryExpression",
                              "start": 784,
                              "end": 802,
                              "operator": "typeof",
                              "prefix": true,
                              "argument": {
                                "type": "Identifier",
                                "start": 791,
                                "end": 802,
                                "name": "notCallable"
                              }
                            }
                          }
                        ],
                        "quasis": [
                          {
                            "type": "TemplateElement",
                            "start": 739,
                            "end": 750,
                            "value": {
                              "raw": "Uncallable ",
                              "cooked": "Uncallable "
                            },
                            "tail": false
                          },
                          {
                            "type": "TemplateElement",
                            "start": 803,
                            "end": 850,
                            "value": {
                              "raw": " getOffsetNanosecondsFor should throw TypeError",
                              "cooked": " getOffsetNanosecondsFor should throw TypeError"
                            },
                            "tail": true
                          }
                        ]
                      }
                    ],
                    "optional": false
                  }
                }
              ]
            }
          }
        ],
        "optional": false
      }
    }
  ],
  "sourceType": "script"
}