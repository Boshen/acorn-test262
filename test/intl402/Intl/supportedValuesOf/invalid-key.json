{
  "type": "Program",
  "start": 0,
  "end": 1100,
  "body": [
    {
      "type": "VariableDeclaration",
      "start": 424,
      "end": 970,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 430,
          "end": 969,
          "id": {
            "type": "Identifier",
            "start": 430,
            "end": 441,
            "name": "invalidKeys"
          },
          "init": {
            "type": "ArrayExpression",
            "start": 444,
            "end": 969,
            "elements": [
              {
                "type": "Literal",
                "start": 478,
                "end": 480,
                "value": ""
              },
              {
                "type": "Literal",
                "start": 516,
                "end": 527,
                "value": "hourCycle"
              },
              {
                "type": "Literal",
                "start": 529,
                "end": 537,
                "value": "locale"
              },
              {
                "type": "Literal",
                "start": 539,
                "end": 549,
                "value": "language"
              },
              {
                "type": "Literal",
                "start": 551,
                "end": 559,
                "value": "script"
              },
              {
                "type": "Literal",
                "start": 561,
                "end": 569,
                "value": "region"
              },
              {
                "type": "Literal",
                "start": 620,
                "end": 631,
                "value": "calendars"
              },
              {
                "type": "Literal",
                "start": 633,
                "end": 645,
                "value": "collations"
              },
              {
                "type": "Literal",
                "start": 647,
                "end": 659,
                "value": "currencies"
              },
              {
                "type": "Literal",
                "start": 661,
                "end": 679,
                "value": "numberingSystems"
              },
              {
                "type": "Literal",
                "start": 681,
                "end": 692,
                "value": "timeZones"
              },
              {
                "type": "Literal",
                "start": 694,
                "end": 701,
                "value": "units"
              },
              {
                "type": "Literal",
                "start": 742,
                "end": 752,
                "value": "CALENDAR"
              },
              {
                "type": "Literal",
                "start": 754,
                "end": 765,
                "value": "Collation"
              },
              {
                "type": "Literal",
                "start": 767,
                "end": 777,
                "value": "Currency"
              },
              {
                "type": "Literal",
                "start": 779,
                "end": 796,
                "value": "numberingsystem"
              },
              {
                "type": "Literal",
                "start": 798,
                "end": 808,
                "value": "timezone"
              },
              {
                "type": "Literal",
                "start": 810,
                "end": 816,
                "value": "UNIT"
              },
              {
                "type": "Literal",
                "start": 867,
                "end": 879,
                "value": "calendar\u0000"
              },
              {
                "type": "Identifier",
                "start": 907,
                "end": 916,
                "name": "undefined"
              },
              {
                "type": "Literal",
                "start": 918,
                "end": 922,
                "value": null
              },
              {
                "type": "Literal",
                "start": 924,
                "end": 929,
                "value": false
              },
              {
                "type": "Literal",
                "start": 931,
                "end": 935,
                "value": true
              },
              {
                "type": "Identifier",
                "start": 937,
                "end": 940,
                "name": "NaN"
              },
              {
                "type": "Literal",
                "start": 942,
                "end": 943,
                "value": 0
              },
              {
                "type": "MemberExpression",
                "start": 945,
                "end": 952,
                "object": {
                  "type": "Identifier",
                  "start": 945,
                  "end": 949,
                  "name": "Math"
                },
                "property": {
                  "type": "Identifier",
                  "start": 950,
                  "end": 952,
                  "name": "PI"
                },
                "computed": false,
                "optional": false
              },
              {
                "type": "Literal",
                "start": 954,
                "end": 958,
                "value": "123n"
              },
              {
                "type": "ObjectExpression",
                "start": 960,
                "end": 962,
                "properties": []
              },
              {
                "type": "ArrayExpression",
                "start": 964,
                "end": 966,
                "elements": []
              }
            ]
          }
        }
      ],
      "kind": "const"
    },
    {
      "type": "ForOfStatement",
      "start": 972,
      "end": 1099,
      "await": false,
      "left": {
        "type": "VariableDeclaration",
        "start": 977,
        "end": 984,
        "declarations": [
          {
            "type": "VariableDeclarator",
            "start": 981,
            "end": 984,
            "id": {
              "type": "Identifier",
              "start": 981,
              "end": 984,
              "name": "key"
            },
            "init": null
          }
        ],
        "kind": "let"
      },
      "right": {
        "type": "Identifier",
        "start": 988,
        "end": 999,
        "name": "invalidKeys"
      },
      "body": {
        "type": "BlockStatement",
        "start": 1001,
        "end": 1099,
        "body": [
          {
            "type": "ExpressionStatement",
            "start": 1005,
            "end": 1097,
            "expression": {
              "type": "CallExpression",
              "start": 1005,
              "end": 1096,
              "callee": {
                "type": "MemberExpression",
                "start": 1005,
                "end": 1018,
                "object": {
                  "type": "Identifier",
                  "start": 1005,
                  "end": 1011,
                  "name": "assert"
                },
                "property": {
                  "type": "Identifier",
                  "start": 1012,
                  "end": 1018,
                  "name": "throws"
                },
                "computed": false,
                "optional": false
              },
              "arguments": [
                {
                  "type": "Identifier",
                  "start": 1019,
                  "end": 1029,
                  "name": "RangeError"
                },
                {
                  "type": "FunctionExpression",
                  "start": 1031,
                  "end": 1080,
                  "id": null,
                  "expression": false,
                  "generator": false,
                  "async": false,
                  "params": [],
                  "body": {
                    "type": "BlockStatement",
                    "start": 1042,
                    "end": 1080,
                    "body": [
                      {
                        "type": "ExpressionStatement",
                        "start": 1048,
                        "end": 1076,
                        "expression": {
                          "type": "CallExpression",
                          "start": 1048,
                          "end": 1075,
                          "callee": {
                            "type": "MemberExpression",
                            "start": 1048,
                            "end": 1070,
                            "object": {
                              "type": "Identifier",
                              "start": 1048,
                              "end": 1052,
                              "name": "Intl"
                            },
                            "property": {
                              "type": "Identifier",
                              "start": 1053,
                              "end": 1070,
                              "name": "supportedValuesOf"
                            },
                            "computed": false,
                            "optional": false
                          },
                          "arguments": [
                            {
                              "type": "Identifier",
                              "start": 1071,
                              "end": 1074,
                              "name": "key"
                            }
                          ],
                          "optional": false
                        }
                      }
                    ]
                  }
                },
                {
                  "type": "BinaryExpression",
                  "start": 1082,
                  "end": 1095,
                  "left": {
                    "type": "Literal",
                    "start": 1082,
                    "end": 1089,
                    "value": "key: "
                  },
                  "operator": "+",
                  "right": {
                    "type": "Identifier",
                    "start": 1092,
                    "end": 1095,
                    "name": "key"
                  }
                }
              ],
              "optional": false
            }
          }
        ]
      }
    }
  ],
  "sourceType": "script"
}